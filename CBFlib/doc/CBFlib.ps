%!PS-Adobe-3.0
%%Title: (Untitled1)
%%Creator: (Microsoft Word: LaserWriter 8 8.4.2)
%%CreationDate: (5:40 PM Sunday, July 18, 1999)
%%For: (yaya)
%%Routing: (mailto:\000yaya@bernstein-plus-sons.com)
%%Pages: 82
%%DocumentFonts: Helvetica-Bold Times-Bold Times-Roman Times-Italic Courier
%%DocumentNeededFonts: Helvetica-Bold Times-Bold Times-Roman Times-Italic Courier
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%%DocumentMedia: Default 612 792 0 () ()
%ADO_ImageableArea: 30 33 582 761
%%EndComments
userdict/dscInfo 5 dict dup begin
/Title(Untitled1)def
/Creator(Microsoft Word: LaserWriter 8 8.4.2)def
/CreationDate(5:40 PM Sunday, July 18, 1999)def
/For(yaya)def
/Pages 82 def
end put
/md 231 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: lw8_basic-2.0
%%Copyright: Copyright 1990-1996 Adobe Systems Incorporated and Apple Computer Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/framewidth -1 def
/QDframwid -1 def
/numframes Z
/mTS matrix def
/$m matrix def
/av 84 def
/por T def
/normland F def
/psb-nosave{}def
/pse-nosave{}def
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
F
}ifelse
def
/odictstk Z
/oopstk Z
/fcl
{
count oopstk sub dup 0 gt
{
{pop}repeat
}{
pop
}ifelse
countdictstack odictstk sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/sfcl2
{
/odictstk countdictstack store
count/oopstk xs
}bd
/efcl2
{
stopped{$error/newerror F put}if
fcl
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
/devg/DeviceGray def
/devr/DeviceRGB def
/devc/DeviceCMYK def
/ststpgdev{}def
/dopgdev{}def
/stpgdev{}def
/buf Z
/didstop T def
/sfcl
{
/didstop T store
/odictstk countdictstack store
count/oopstk xs
currentfile cvx stopped
{
$error/newerror F put
didstop
{
save/didstop xs
/buf vmstatus exch sub exch pop dup 0 lt{pop 0}if
dup 64000 gt{pop 64000}if string store
{
currentfile buf readline
{
(}efcl)eq{exit}if
}{
/UnexpectedEOF errordict/rangecheck get exec
}ifelse
}loop
didstop restore
}if
}if
fcl
}bd
/efcl
{
/didstop F store
exec
stop
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
/devg[/DeviceGray]def
/devr[/DeviceRGB]def
/devc[/DeviceCMYK]def
/setpagedevice where{pop/realstpgdev/setpagedevice ld}if
/SC_topddict Z
/SC_spdict Z
/dopgdev
{
md/setpagedevice undef
SC_topddict realstpgdev
}bd
/stpgdev
{
SC_topddict dup 3 -1 roll
{
SC_spdict 2 index known
{
SC_spdict 2 index get
dup 3 -1 roll
{
put dup
}forall
pop put dup
}{
put dup
}ifelse
}forall
pop pop
}bd
/ststpgdev
{
md/setpagedevice/stpgdev load put
/SC_topddict 0 dict store
/SC_spdict 3 dict begin
/InputAttributes 0 dict def
/Policies 0 dict def
/OutputAttributes 0 dict def
currentdict
end
store
}def
/sfcl/sfcl2 ld
/efcl/efcl2 ld
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
mT $m currentmatrix mTS concatmatrix pop
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/adjRect
{
dup 2 mul 6 2 roll
4 index sub exch 5 -1 roll sub exch
4 2 roll
4 index add exch 5 -1 roll add exch
4 2 roll
}bd
/frame1up
{
gS
mTS setmatrix
QDframwid lw
/setstrokeadjust where{pop T setstrokeadjust}if
clippath pathbbox
2 index sub exch
3 index sub exch
currentlinewidth framewidth mul
adjRect
numframes dup 0 lt{pop 0}if
{
4 copy
rS
currentlinewidth framewidth
mul 4 mul
adjRect
}repeat
pop pop pop pop
gR
}bd
/$c devr def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: lw8_level1_colorspace-2.0
/G/setgray ld
/:F1/setgray ld
/:F/setrgbcolor ld
/:F4/setcmykcolor where
{
pop
/setcmykcolor ld
}{
{
3
{
dup
3 -1 roll add
dup 1 gt{pop 1}if
1 exch sub
4 1 roll
}repeat
pop
setrgbcolor
}bd
}ifelse
/:Fx
{
counttomark
{0{G}0{:F}{:F4}}
exch get
exec
pop
}bd
/$cs Z
/:rg{devr :ss}bd
/:sc{$cs :ss}bd
/:dc
{
dup type/arraytype eq{0 get}if
dup/DeviceCMYK eq
{
pop devc
}{
/DeviceGray eq
{
devg
}{
devr
}ifelse
}ifelse
/$cs xdf
}bd
/:sgl{}def
/:dr{}bd
/:fCRD{pop}bd
/:ckcs{}bd
/:ss{/$c xdf}bd
%%EndFile
level2 startnoload
%%BeginFile: lw8_level1_patterns-2.0
/patfreq Z
/patangle Z
/bk Z
/fg Z
/docolorscreen Z
/graystring Z
/pattransf{}def
/initQDpatterns
{
/patfreq 9.375 store
/patangle
1 0 $m defaultmatrix dtransform
exch atan
por not
{90 add}if
normland{180 add}if
store
:a
}def
/docolorscreen
/setcolorscreen where
{
pop/currentcolorscreen where
{
pop/setcmykcolor where
{
pop T
}{
F
}ifelse
}{
F
}ifelse
}{
F
}ifelse
def
/setgraypattern
{
/graystring xs
patfreq
patangle
{
1 add
4 mul
cvi
graystring
exch get
exch
1 add 4 mul
cvi
7 sub
bitshift
1 and
}setscreen
64 div setgray
}bd
/:b
{
/pattransf load settransfer
pop pop pop
setgraypattern
}bd
docolorscreen startnoload
/screensave 5 array def
/:a{currentgray currentscreen currenttransfer screensave astore pop}bd
/:e{screensave aload pop settransfer setscreen setgray}bd
/:d
{
pop pop pop
/pattransf load settransfer
setgraypattern 8{pop}repeat
}bd
/:c
/:d ld
docolorscreen endnoload docolorscreen not startnoload
/screensave 20 array def
/:a{currentcmykcolor currentcolorscreen currentcolortransfer screensave astore pop}bd
/:e{screensave aload pop setcolortransfer setcolorscreen setcmykcolor}bd
/rstring Z
/grstring Z
/blstring Z
/convroll{64 div 4 -1 roll}bd
/setcolorpattern
{
/graystring xs
/blstring xs
/grstring xs
/rstring xs
patfreq
patangle
{
1 add 4 mul cvi rstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi grstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi blstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi graystring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
setcolorscreen
convroll convroll convroll convroll
setcmykcolor
}bd
/:d
{
pop pop pop
/pattransf load settransfer
pop pop setcolorpattern
}bd
/:c
/:d ld
docolorscreen not endnoload
%%EndFile
level2  endnoload level2 not startnoload
%%BeginFile: lw8_level2_patterns-2.0
/pmtx Z
/BGnd Z
/FGnd Z
/PaintData Z
/PatternMtx Z
/PatHeight Z
/PatWidth Z
/$d Z
/savecolor 4 array def
/savecolorspace Z
/patDecode Z
/:a{
mark 0 0 0 currentcolor savecolor astore pop cleartomark
/savecolorspace currentcolorspace store
$c setcolorspace
/patDecode
[currentcolor counttomark
dup 2 add 1
roll
cleartomark[exch
{0 1}repeat]
def
}bd
/:e{
savecolorspace setcolorspace
mark savecolor aload pop setcolor cleartomark
}bd
/initQDpatterns
{
gS
initmatrix
mT dup 4 get exch 5 get :T
1 0 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
0 1 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
neg
scale
0
por not{90 add}if
normland{180 add}if
rotate
matrix currentmatrix
gR
/pmtx xs
:a
}bd
/:t
{
14 dict begin
/BGnd xdf
/FGnd xdf
/PaintData xdf
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PatternMtx[24 0 0 24 0 0]def
/PaintProc
BGnd null ne
{
{
begin
BGnd aload pop :F
0 0 1 1 rF
FGnd aload pop :F
24 24 T PatternMtx PaintData imagemask
end
}
}{
{
begin
FGnd aload pop :F
24 24 T PatternMtx PaintData imagemask
end
}
}ifelse
def
currentdict
PatternMtx
end
$c setcolorspace
gS pmtx setmatrix makepattern gR
}bd
/:u
{
14 dict begin
/$d 8 dict def
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PaintData xdf
/PatHeight xdf
/PatWidth xdf
/PatternMtx[PatWidth 0 0 PatHeight 0 0]def
$d begin
/ImageType 1 def
/MultipleDataSource F def
/Height PatHeight def
/Width PatWidth def
/Decode patDecode def
/ImageMatrix PatternMtx def
/DataSource PaintData def
/BitsPerComponent 8 def
end
/PaintProc
{
begin
$d image
end
}def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/bk[1 1 1]def
/fg[0 0 0]def
/:b{
:t
setpattern
pop pop
}bd
/:d{
:t
setpattern
10{pop}repeat
}bd
/:c{
:u
setpattern
10{pop}repeat
}bd
%%EndFile
level2 not endnoload
%%BeginFile: lw8_uniform_graphics-2.0
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/@c
{
moveto 0 rlineto stroke
}bd
/@w
{
moveto 0 exch rlineto stroke
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: lw8_basic_text-2.0
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg T def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg F store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding dup 9/space put dup 39/quotesingle put 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
/$ckeyd md def
/:skey
{
1 index maxlength 2 index
length sub
ge
{
begin
/$mkeys 20 dict def
/$mkeys load
end
dup/$ckeyd xs
}if
3 1 roll put
}bd
/fD1pass
{
40
$ckeyd
//md
ne
{
pop 1
}if
$ckeyd exch
:skey
}bd
/:searchdict Z
/:searchdict
{
exch 2 copy
known
{
get
}{
exch/$mkeys
get
:searchdict
}ifelse
}bd
/lU
{
//md exch 2 copy
known
{
get
}{
exch
/$mkeys get
:searchdict
}ifelse
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
/fD1pass/def ld
/lU/load ld
level2 not endnoload
/fD Z
/sf Z
/scf Z
/sf1pass
{
lU setfont
}bd
/scf1pass
{
exch lU exch scalefont fD
}bd
/scf2pass
{
scalefont fD
}bd
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff fD
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff fD
}bd
/ps Z
/fz{/ps xs}bd
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
fD
}def
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if end
%%EndProlog
%%BeginSetup
md begin
/fD/def ld/sf/setfont ld /scf/scf2pass ld
sfcl{
%%BeginFeature: *ManualFeed False

    1 dict
    dup /Policies 2 dict dup /PageSize 2 put dup /MediaType 0 put put
	setpagedevice
	1 dict 
    dup /ManualFeed false put 
    setpagedevice
%%EndFeature


}efcl

sfcl{
%%BeginFeature: *PageSize Letter

    1 dict
    dup /Policies 2 dict dup /PageSize 2 put dup /MediaType 0 put put
	setpagedevice
	2 dict
    dup /PageSize [612 792] put
    dup /ImagingBBox null put
    setpagedevice
%%EndFeature


}efcl

sfcl{
%%BeginFeature: *Smoothing Medium

    1 dict
    dup /Policies 2 dict dup /PageSize 2 put dup /MediaType 0 put put
	setpagedevice
    2 dict 
    dup /PostRenderingEnhance true put
    dup /PostRenderingEnhanceDetails
      2 dict dup /REValue 2 put dup /Type 8 put put
    setpagedevice
%%EndFeature


}efcl

(yaya)setjob
sfcl{/currentdistillerparams where{pop 1 dict dup/Orientation 2 put setpagedevice}if

}efcl

/mT[1 0 0 -1 30 761]def
initQDpatterns
/sD 16 dict def
 600 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Helvetica-Bold
/f135/Helvetica-Bold
:mre
/f151 f135 92 scf
%%IncludeFont: Times-Bold
/f170/Times-Bold
:mre
/f184 f170 12 scf
%%IncludeFont: Times-Roman
/f195/Times-Roman
:mre
/f209 f195 12 scf
/f220 f170 14 scf
/f231 f195 10 scf
/f242 f170 10 scf
/f253 f195 13.044 scf
%%IncludeFont: Times-Italic
/f264/Times-Italic
:mre
/f279 f264 12 scf
/f290 f195 7 scf
%%IncludeFont: Courier
/f310/Courier
:mre
/f322 f310 10 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(yaya; page: 1 of 82)setjob
%%EndPageSetup
gS 0 0 552 728 rC
1 1 .5 :F
170 41 211 106 rC
np 337 109 :M
335 111 :L
334 109 :L
333 112 :L
331 111 :L
332 113 :L
330 114 :L
331 115 :L
329 117 :L
331 117 :L
329 119 :L
332 120 :L
331 122 :L
333 122 :L
334 124 :L
335 122 :L
337 124 :L
338 122 :L
340 124 :L
340 122 :L
342 122 :L
342 120 :L
344 119 :L
342 118 :L
344 117 :L
342 115 :L
344 114 :L
342 113 :L
342 111 :L
340 112 :L
340 110 :L
338 111 :L
337 109 :L
eofill
.5 1 1 :F
-1 -1 336 112 1 1 337 109 @b
334 110 -1 1 336 111 1 334 109 @a
-1 -1 334 113 1 1 334 109 @b
331 112 -1 1 334 112 1 331 111 @a
331 112 -1 1 333 113 1 331 111 @a
-1 -1 331 115 1 1 332 113 @b
330 115 -1 1 332 115 1 330 114 @a
-1 -1 330 118 1 1 331 115 @b
3 329 117.5 @c
-1 -1 330 120 1 1 331 117 @b
329 120 -1 1 333 120 1 329 119 @a
-1 -1 332 123 1 1 332 120 @b
3 331 122.5 @c
333 123 -1 1 335 124 1 333 122 @a
-1 -1 335 125 1 1 335 122 @b
335 123 -1 1 338 124 1 335 122 @a
-1 -1 338 125 1 1 338 122 @b
338 123 -1 1 341 124 1 338 122 @a
3 340.5 122 @w
3 340 122.5 @c
3 342.5 120 @w
-1 -1 343 121 1 1 344 119 @b
342 119 -1 1 345 119 1 342 118 @a
-1 -1 343 119 1 1 344 117 @b
342 116 -1 1 345 117 1 342 115 @a
-1 -1 343 116 1 1 344 114 @b
342 114 -1 1 345 114 1 342 113 @a
3 342.5 111 @w
-1 -1 341 113 1 1 342 111 @b
3 340.5 110 @w
-1 -1 339 112 1 1 340 110 @b
337 110 -1 1 339 111 1 337 109 @a
1 1 .25 :F
np 327 97 :M
325 100 :L
322 98 :L
321 102 :L
317 101 :L
318 105 :L
314 106 :L
316 109 :L
312 111 :L
315 113 :L
313 117 :L
318 117 :L
317 121 :L
321 121 :L
322 124 :L
325 122 :L
327 126 :L
329 122 :L
333 124 :L
333 121 :L
337 121 :L
336 117 :L
340 117 :L
338 113 :L
342 111 :L
338 109 :L
340 106 :L
336 105 :L
337 101 :L
333 102 :L
333 99 :L
329 101 :L
327 97 :L
eofill
.25 1 1 :F
-1 -1 326 101 1 1 327 97 @b
322 99 -1 1 326 100 1 322 98 @a
-1 -1 322 103 1 1 322 98 @b
317 102 -1 1 322 102 1 317 101 @a
317 102 -1 1 319 105 1 317 101 @a
-1 -1 315 107 1 1 318 105 @b
314 107 -1 1 317 109 1 314 106 @a
-1 -1 313 112 1 1 316 109 @b
312 112 -1 1 316 113 1 312 111 @a
-1 -1 314 118 1 1 315 113 @b
6 313 117.5 @c
-1 -1 318 122 1 1 318 117 @b
5 317 121.5 @c
321 122 -1 1 323 124 1 321 121 @a
-1 -1 323 125 1 1 325 122 @b
325 123 -1 1 328 126 1 325 122 @a
-1 -1 328 127 1 1 329 122 @b
329 123 -1 1 334 124 1 329 122 @a
4 333.5 121 @w
5 333 121.5 @c
336 118 -1 1 338 121 1 336 117 @a
5 336 117.5 @c
338 114 -1 1 341 117 1 338 113 @a
-1 -1 339 114 1 1 342 111 @b
338 110 -1 1 343 111 1 338 109 @a
-1 -1 339 110 1 1 340 106 @b
336 106 -1 1 341 106 1 336 105 @a
-1 -1 337 106 1 1 337 101 @b
-1 -1 334 103 1 1 337 101 @b
4 333.5 99 @w
-1 -1 330 102 1 1 333 99 @b
327 98 -1 1 330 101 1 327 97 @a
:a
0 0 56 0<0000000000000000><0000000000000000>(\377\356\377\273\377\356\377\273)<0000000000000000>64<0000000000000000>(\377\377\377\356\356\356\377\377\377\273\273\273\377\377\377\356\356\356\377\377\377\273\273\273)[1
1
0
]
[1
1
1
]
:d
np 309 71 :M
305 78 :L
299 74 :L
298 81 :L
290 80 :L
291 87 :L
284 89 :L
288 95 :L
281 99 :L
288 103 :L
284 109 :L
291 111 :L
290 117 :L
298 117 :L
299 124 :L
305 120 :L
309 126 :L
313 120 :L
320 124 :L
322 117 :L
329 117 :L
327 111 :L
335 109 :L
331 103 :L
338 99 :L
331 95 :L
335 89 :L
327 87 :L
329 80 :L
322 81 :L
320 75 :L
314 78 :L
309 71 :L
eofill
56 0 0 0(\377\356\377\273\377\356\377\273)<0000000000000000><0000000000000000><0000000000000000>8(\377\356\377\273\377\356\377\273)(\377\377\377\356\356\356\377\377\377\273\273\273\377\377\377\356\356\356\377\377\377\273\273\273)[0
1
1
]
[1
1
1
]
:d
-1 -1 306 79 1 1 309 71 @b
299 75 -1 1 306 78 1 299 74 @a
-1 -1 299 82 1 1 299 74 @b
290 81 -1 1 299 81 1 290 80 @a
290 81 -1 1 292 87 1 290 80 @a
-1 -1 285 90 1 1 291 87 @b
284 90 -1 1 289 95 1 284 89 @a
-1 -1 282 100 1 1 288 95 @b
281 100 -1 1 289 103 1 281 99 @a
-1 -1 285 110 1 1 288 103 @b
284 110 -1 1 292 111 1 284 109 @a
-1 -1 291 118 1 1 291 111 @b
290 118 -1 1 299 117 1 290 117 @a
298 118 -1 1 300 124 1 298 117 @a
-1 -1 300 125 1 1 305 120 @b
305 121 -1 1 310 126 1 305 120 @a
-1 -1 310 127 1 1 313 120 @b
313 121 -1 1 321 124 1 313 120 @a
-1 -1 321 125 1 1 322 117 @b
322 118 -1 1 330 117 1 322 117 @a
327 112 -1 1 330 117 1 327 111 @a
-1 -1 328 112 1 1 335 109 @b
331 104 -1 1 336 109 1 331 103 @a
-1 -1 332 104 1 1 338 99 @b
331 96 -1 1 339 99 1 331 95 @a
-1 -1 332 96 1 1 335 89 @b
327 88 -1 1 336 89 1 327 87 @a
-1 -1 328 88 1 1 329 80 @b
-1 -1 323 82 1 1 329 80 @b
320 76 -1 1 323 81 1 320 75 @a
-1 -1 315 79 1 1 320 75 @b
309 72 -1 1 315 78 1 309 71 @a
:e
1 1 0 :F
np 272 41 :M
264 52 :L
251 46 :L
248 60 :L
235 58 :L
236 71 :L
223 74 :L
230 85 :L
218 94 :L
229 102 :L
222 113 :L
236 117 :L
234 130 :L
248 128 :L
251 142 :L
263 135 :L
272 146 :L
280 135 :L
292 143 :L
295 129 :L
309 130 :L
307 117 :L
321 114 :L
313 102 :L
326 94 :L
313 86 :L
322 75 :L
307 71 :L
309 58 :L
295 60 :L
293 47 :L
280 53 :L
272 41 :L
eofill
0 1 1 :F
-1 -1 265 53 1 1 272 41 @b
251 47 -1 1 265 52 1 251 46 @a
-1 -1 249 61 1 1 251 46 @b
235 59 -1 1 249 60 1 235 58 @a
235 59 -1 1 237 71 1 235 58 @a
-1 -1 224 75 1 1 236 71 @b
223 75 -1 1 231 85 1 223 74 @a
-1 -1 219 95 1 1 230 85 @b
218 95 -1 1 230 102 1 218 94 @a
-1 -1 223 114 1 1 229 102 @b
222 114 -1 1 237 117 1 222 113 @a
-1 -1 235 131 1 1 236 117 @b
-1 -1 235 131 1 1 248 128 @b
248 129 -1 1 252 142 1 248 128 @a
-1 -1 252 143 1 1 263 135 @b
263 136 -1 1 273 146 1 263 135 @a
-1 -1 273 147 1 1 280 135 @b
280 136 -1 1 293 143 1 280 135 @a
-1 -1 293 144 1 1 295 129 @b
295 130 -1 1 310 130 1 295 129 @a
307 118 -1 1 310 130 1 307 117 @a
-1 -1 308 118 1 1 321 114 @b
313 103 -1 1 322 114 1 313 102 @a
-1 -1 314 103 1 1 326 94 @b
313 87 -1 1 327 94 1 313 86 @a
-1 -1 314 87 1 1 322 75 @b
307 72 -1 1 323 75 1 307 71 @a
-1 -1 308 72 1 1 309 58 @b
-1 -1 296 61 1 1 309 58 @b
293 48 -1 1 296 60 1 293 47 @a
-1 -1 281 54 1 1 293 47 @b
272 42 -1 1 281 53 1 272 41 @a
1 1 .25 :F
np 251 83 :M
239 76 :L
232 93 :L
239 112 :L
251 105 :L
251 83 :L
eofill
0 G
239 77 -1 1 252 83 1 239 76 @a
-1 -1 233 94 1 1 239 76 @b
232 94 -1 1 240 112 1 232 93 @a
-1 -1 240 113 1 1 251 105 @b
23 251.5 83 @w
1 1 .25 :F
np 271 71 :M
250 84 :L
250 105 :L
271 118 :L
292 105 :L
292 83 :L
271 71 :L
eofill
0 G
-1 -1 251 85 1 1 271 71 @b
22 250.5 84 @w
250 106 -1 1 272 118 1 250 105 @a
-1 -1 272 119 1 1 292 105 @b
23 292.5 83 @w
271 72 -1 1 293 83 1 271 71 @a
1 1 0 :F
np 292 83 :M
304 76 :L
311 93 :L
304 112 :L
292 105 :L
292 83 :L
eofill
0 G
-1 -1 293 84 1 1 304 76 @b
304 77 -1 1 312 93 1 304 76 @a
-1 -1 305 113 1 1 311 93 @b
292 106 -1 1 305 112 1 292 105 @a
23 292.5 83 @w
1 1 .25 :F
np 271 72 :M
271 58 :L
292 62 :L
305 77 :L
293 84 :L
271 72 :L
eofill
0 G
15 271.5 58 @w
271 59 -1 1 293 62 1 271 58 @a
292 63 -1 1 306 77 1 292 62 @a
-1 -1 294 85 1 1 305 77 @b
271 73 -1 1 294 84 1 271 72 @a
1 1 .5 :F
np 272 72 :M
272 58 :L
252 62 :L
238 77 :L
251 84 :L
272 72 :L
eofill
0 G
15 272.5 58 @w
-1 -1 253 63 1 1 272 58 @b
-1 -1 239 78 1 1 252 62 @b
238 78 -1 1 252 84 1 238 77 @a
-1 -1 252 85 1 1 272 72 @b
1 1 0 :F
np 271 117 :M
271 131 :L
291 127 :L
304 112 :L
292 105 :L
271 117 :L
eofill
0 G
15 271.5 117 @w
-1 -1 272 132 1 1 291 127 @b
-1 -1 292 128 1 1 304 112 @b
292 106 -1 1 305 112 1 292 105 @a
-1 -1 272 118 1 1 292 105 @b
1 1 0 :F
np 271 117 :M
271 131 :L
251 127 :L
238 112 :L
250 105 :L
271 117 :L
eofill
0 G
15 271.5 117 @w
251 128 -1 1 272 131 1 251 127 @a
238 113 -1 1 252 127 1 238 112 @a
-1 -1 239 113 1 1 250 105 @b
250 106 -1 1 272 117 1 250 105 @a
1 1 0 :F
202 56 69 74 rF
0 0 1 :F
202.5 56.5 68 73 rS
1 G
209 69 7 12 rF
0 0 1 :F
209.5 69.5 6 11 rS
1 G
221 69 7 12 rF
0 0 1 :F
221.5 69.5 6 11 rS
1 G
221 87 7 12 rF
0 0 1 :F
221.5 87.5 6 11 rS
1 G
233 87 7 12 rF
0 0 1 :F
233.5 87.5 6 11 rS
1 G
221 105 7 12 rF
0 0 1 :F
221.5 105.5 6 11 rS
1 G
233 105 7 12 rF
0 0 1 :F
233.5 105.5 6 11 rS
1 G
246 87 7 12 rF
0 0 1 :F
246.5 87.5 6 11 rS
1 G
252 105 7 12 rF
0 0 1 :F
252.5 105.5 6 11 rS
1 1 .5 :F
np 337 108 :M
335 110 :L
334 109 :L
333 111 :L
331 111 :L
332 113 :L
330 113 :L
331 115 :L
329 116 :L
331 117 :L
329 119 :L
332 119 :L
331 121 :L
333 121 :L
334 123 :L
335 122 :L
337 124 :L
338 122 :L
340 123 :L
340 121 :L
342 121 :L
342 119 :L
344 119 :L
342 117 :L
344 116 :L
342 115 :L
344 113 :L
342 113 :L
342 111 :L
340 111 :L
340 109 :L
338 110 :L
337 108 :L
eofill
.5 1 1 :F
-1 -1 336 111 1 1 337 108 @b
334 110 -1 1 336 110 1 334 109 @a
-1 -1 334 112 1 1 334 109 @b
3 331 111.5 @c
331 112 -1 1 333 113 1 331 111 @a
3 330 113.5 @c
330 114 -1 1 332 115 1 330 113 @a
-1 -1 330 117 1 1 331 115 @b
329 117 -1 1 332 117 1 329 116 @a
-1 -1 330 120 1 1 331 117 @b
4 329 119.5 @c
-1 -1 332 122 1 1 332 119 @b
3 331 121.5 @c
333 122 -1 1 335 123 1 333 121 @a
-1 -1 335 124 1 1 335 122 @b
335 123 -1 1 338 124 1 335 122 @a
-1 -1 338 125 1 1 338 122 @b
338 123 -1 1 341 123 1 338 122 @a
3 340.5 121 @w
3 340 121.5 @c
3 342.5 119 @w
3 342 119.5 @c
342 118 -1 1 345 119 1 342 117 @a
-1 -1 343 118 1 1 344 116 @b
342 116 -1 1 345 116 1 342 115 @a
-1 -1 343 116 1 1 344 113 @b
3 342 113.5 @c
3 342.5 111 @w
3 340 111.5 @c
3 340.5 109 @w
-1 -1 339 111 1 1 340 109 @b
337 109 -1 1 339 110 1 337 108 @a
1 1 .25 :F
np 327 97 :M
325 100 :L
322 98 :L
321 102 :L
317 101 :L
318 105 :L
314 106 :L
316 109 :L
312 111 :L
315 113 :L
313 117 :L
318 117 :L
317 121 :L
321 121 :L
322 124 :L
325 122 :L
327 126 :L
329 122 :L
333 124 :L
333 121 :L
337 121 :L
336 117 :L
340 117 :L
338 113 :L
342 111 :L
338 109 :L
340 106 :L
336 105 :L
337 101 :L
333 102 :L
333 99 :L
329 101 :L
327 97 :L
eofill
.25 1 1 :F
-1 -1 326 101 1 1 327 97 @b
322 99 -1 1 326 100 1 322 98 @a
-1 -1 322 103 1 1 322 98 @b
317 102 -1 1 322 102 1 317 101 @a
317 102 -1 1 319 105 1 317 101 @a
-1 -1 315 107 1 1 318 105 @b
314 107 -1 1 317 109 1 314 106 @a
-1 -1 313 112 1 1 316 109 @b
312 112 -1 1 316 113 1 312 111 @a
-1 -1 314 118 1 1 315 113 @b
6 313 117.5 @c
-1 -1 318 122 1 1 318 117 @b
5 317 121.5 @c
321 122 -1 1 323 124 1 321 121 @a
-1 -1 323 125 1 1 325 122 @b
325 123 -1 1 328 126 1 325 122 @a
-1 -1 328 127 1 1 329 122 @b
329 123 -1 1 334 124 1 329 122 @a
4 333.5 121 @w
5 333 121.5 @c
336 118 -1 1 338 121 1 336 117 @a
5 336 117.5 @c
338 114 -1 1 341 117 1 338 113 @a
-1 -1 339 114 1 1 342 111 @b
338 110 -1 1 343 111 1 338 109 @a
-1 -1 339 110 1 1 340 106 @b
336 106 -1 1 341 106 1 336 105 @a
-1 -1 337 106 1 1 337 101 @b
-1 -1 334 103 1 1 337 101 @b
4 333.5 99 @w
-1 -1 330 102 1 1 333 99 @b
327 98 -1 1 330 101 1 327 97 @a
:a
0 0 56 0<0000000000000000><0000000000000000>(\377\356\377\273\377\356\377\273)<0000000000000000>64<0000000000000000>(\377\377\377\356\356\356\377\377\377\273\273\273\377\377\377\356\356\356\377\377\377\273\273\273)[1
1
0
]
[1
1
1
]
:d
np 309 71 :M
305 78 :L
299 74 :L
298 81 :L
290 80 :L
291 87 :L
284 89 :L
288 95 :L
281 99 :L
288 103 :L
284 109 :L
291 111 :L
290 117 :L
298 117 :L
299 124 :L
305 120 :L
309 126 :L
313 120 :L
320 124 :L
322 117 :L
329 117 :L
327 111 :L
335 109 :L
331 103 :L
338 99 :L
331 95 :L
335 89 :L
327 87 :L
329 80 :L
322 81 :L
320 75 :L
314 78 :L
309 71 :L
eofill
56 0 0 0(\377\356\377\273\377\356\377\273)<0000000000000000><0000000000000000><0000000000000000>8(\377\356\377\273\377\356\377\273)(\377\377\377\356\356\356\377\377\377\273\273\273\377\377\377\356\356\356\377\377\377\273\273\273)[0
1
1
]
[1
1
1
]
:d
-1 -1 306 79 1 1 309 71 @b
299 75 -1 1 306 78 1 299 74 @a
-1 -1 299 82 1 1 299 74 @b
290 81 -1 1 299 81 1 290 80 @a
290 81 -1 1 292 87 1 290 80 @a
-1 -1 285 90 1 1 291 87 @b
284 90 -1 1 289 95 1 284 89 @a
-1 -1 282 100 1 1 288 95 @b
281 100 -1 1 289 103 1 281 99 @a
-1 -1 285 110 1 1 288 103 @b
284 110 -1 1 292 111 1 284 109 @a
-1 -1 291 118 1 1 291 111 @b
290 118 -1 1 299 117 1 290 117 @a
298 118 -1 1 300 124 1 298 117 @a
-1 -1 300 125 1 1 305 120 @b
305 121 -1 1 310 126 1 305 120 @a
-1 -1 310 127 1 1 313 120 @b
313 121 -1 1 321 124 1 313 120 @a
-1 -1 321 125 1 1 322 117 @b
322 118 -1 1 330 117 1 322 117 @a
327 112 -1 1 330 117 1 327 111 @a
-1 -1 328 112 1 1 335 109 @b
331 104 -1 1 336 109 1 331 103 @a
-1 -1 332 104 1 1 338 99 @b
331 96 -1 1 339 99 1 331 95 @a
-1 -1 332 96 1 1 335 89 @b
327 88 -1 1 336 89 1 327 87 @a
-1 -1 328 88 1 1 329 80 @b
-1 -1 323 82 1 1 329 80 @b
320 76 -1 1 323 81 1 320 75 @a
-1 -1 315 79 1 1 320 75 @b
309 72 -1 1 315 78 1 309 71 @a
:e
1 1 0 :F
np 272 41 :M
264 52 :L
251 46 :L
248 60 :L
235 58 :L
236 71 :L
223 74 :L
230 85 :L
218 94 :L
229 102 :L
222 113 :L
236 117 :L
234 130 :L
248 128 :L
251 142 :L
263 135 :L
272 146 :L
280 135 :L
292 143 :L
295 129 :L
309 130 :L
307 117 :L
321 114 :L
313 102 :L
326 94 :L
313 86 :L
322 75 :L
307 71 :L
309 58 :L
295 60 :L
293 47 :L
280 53 :L
272 41 :L
eofill
0 1 1 :F
-1 -1 265 53 1 1 272 41 @b
251 47 -1 1 265 52 1 251 46 @a
-1 -1 249 61 1 1 251 46 @b
235 59 -1 1 249 60 1 235 58 @a
235 59 -1 1 237 71 1 235 58 @a
-1 -1 224 75 1 1 236 71 @b
223 75 -1 1 231 85 1 223 74 @a
-1 -1 219 95 1 1 230 85 @b
218 95 -1 1 230 102 1 218 94 @a
-1 -1 223 114 1 1 229 102 @b
222 114 -1 1 237 117 1 222 113 @a
-1 -1 235 131 1 1 236 117 @b
-1 -1 235 131 1 1 248 128 @b
248 129 -1 1 252 142 1 248 128 @a
-1 -1 252 143 1 1 263 135 @b
263 136 -1 1 273 146 1 263 135 @a
-1 -1 273 147 1 1 280 135 @b
280 136 -1 1 293 143 1 280 135 @a
-1 -1 293 144 1 1 295 129 @b
295 130 -1 1 310 130 1 295 129 @a
307 118 -1 1 310 130 1 307 117 @a
-1 -1 308 118 1 1 321 114 @b
313 103 -1 1 322 114 1 313 102 @a
-1 -1 314 103 1 1 326 94 @b
313 87 -1 1 327 94 1 313 86 @a
-1 -1 314 87 1 1 322 75 @b
307 72 -1 1 323 75 1 307 71 @a
-1 -1 308 72 1 1 309 58 @b
-1 -1 296 61 1 1 309 58 @b
293 48 -1 1 296 60 1 293 47 @a
-1 -1 281 54 1 1 293 47 @b
272 42 -1 1 281 53 1 272 41 @a
1 1 .25 :F
np 251 83 :M
239 76 :L
232 93 :L
239 112 :L
251 105 :L
251 83 :L
eofill
0 G
239 77 -1 1 252 83 1 239 76 @a
-1 -1 233 94 1 1 239 76 @b
232 94 -1 1 240 112 1 232 93 @a
-1 -1 240 113 1 1 251 105 @b
23 251.5 83 @w
1 1 .25 :F
np 271 70 :M
250 83 :L
250 105 :L
271 117 :L
292 105 :L
292 83 :L
271 70 :L
eofill
0 G
-1 -1 251 84 1 1 271 70 @b
23 250.5 83 @w
250 106 -1 1 272 117 1 250 105 @a
-1 -1 272 118 1 1 292 105 @b
23 292.5 83 @w
271 71 -1 1 293 83 1 271 70 @a
1 1 0 :F
np 292 83 :M
304 75 :L
311 93 :L
304 111 :L
292 105 :L
292 83 :L
eofill
0 G
-1 -1 293 84 1 1 304 75 @b
304 76 -1 1 312 93 1 304 75 @a
-1 -1 305 112 1 1 311 93 @b
292 106 -1 1 305 111 1 292 105 @a
23 292.5 83 @w
1 1 .25 :F
np 271 71 :M
271 57 :L
291 62 :L
304 77 :L
292 83 :L
271 71 :L
eofill
0 G
15 271.5 57 @w
271 58 -1 1 292 62 1 271 57 @a
291 63 -1 1 305 77 1 291 62 @a
-1 -1 293 84 1 1 304 77 @b
271 72 -1 1 293 83 1 271 71 @a
1 1 .5 :F
np 272 71 :M
272 57 :L
252 62 :L
238 77 :L
251 83 :L
272 71 :L
eofill
0 G
15 272.5 57 @w
-1 -1 253 63 1 1 272 57 @b
-1 -1 239 78 1 1 252 62 @b
238 78 -1 1 252 83 1 238 77 @a
-1 -1 252 84 1 1 272 71 @b
1 1 0 :F
np 271 117 :M
271 130 :L
291 126 :L
304 111 :L
292 104 :L
271 117 :L
eofill
0 G
14 271.5 117 @w
-1 -1 272 131 1 1 291 126 @b
-1 -1 292 127 1 1 304 111 @b
292 105 -1 1 305 111 1 292 104 @a
-1 -1 272 118 1 1 292 104 @b
1 1 0 :F
np 271 117 :M
271 130 :L
251 126 :L
238 111 :L
250 104 :L
271 117 :L
eofill
0 G
14 271.5 117 @w
251 127 -1 1 272 130 1 251 126 @a
238 112 -1 1 252 126 1 238 111 @a
-1 -1 239 112 1 1 250 104 @b
250 105 -1 1 272 117 1 250 104 @a
1 1 0 :F
202 56 69 73 rF
0 0 1 :F
202.5 56.5 68 72 rS
1 G
209 68 7 13 rF
0 0 1 :F
209.5 68.5 6 12 rS
1 G
221 68 7 13 rF
0 0 1 :F
221.5 68.5 6 12 rS
1 G
221 86 7 13 rF
0 0 1 :F
221.5 86.5 6 12 rS
1 G
233 86 7 13 rF
0 0 1 :F
233.5 86.5 6 12 rS
1 G
221 104 7 13 rF
0 0 1 :F
221.5 104.5 6 12 rS
1 G
233 104 7 13 rF
0 0 1 :F
233.5 104.5 6 12 rS
1 G
246 86 7 13 rF
0 0 1 :F
246.5 86.5 6 12 rS
1 G
252 104 7 13 rF
0 0 1 :F
252.5 104.5 6 12 rS
gS
.69 .671 scale
252.34 174.397 :M
1 1 0 :F
f151 sf
(CBFlib)S
gR
gS
.69 .671 scale
247.99 171.416 :M
1 0 0 :F
f151 sf
(CBFlib)S
gR
gR
gS 0 0 552 728 rC
212 168 :M
f184 sf
(An API for CBF/imgCIF)S
146 180 :M
(Crystallographic Binary Files with ASCII Support)S
248 204 :M
f209 sf
(Version 0.6)S
236 216 :M
(13 January 1999)S
270 264 :M
(by)S
240 291 :M
f220 sf
(Paul J. Ellis)S
171 303 :M
f209 sf
(Stanford Synchrotron Radiation Laboratory)S
210 315 :M
(ellis@ssrl.slac.stanford.edu)S
267 339 :M
(and)S
214 366 :M
f220 sf
(Herbert J. Bernstein)S
235 378 :M
f209 sf
(Bernstein + Sons)S
200 390 :M
(yaya@bernstein-plus-sons.com)S
189 426 :M
(documentation revised 18 July 1999)S
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(yaya; page: 2 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
482 753 :M
(Page - ii)S
90 81 :M
(Before using this software, please read the following notices for important disclaimers)S
90 93 :M
(and the IUCr Policy on the Use of the Crystallographic Information File \(CIF\) and for)S
90 105 :M
(other important information.)S
267 153 :M
f184 sf
(CBFlib Notices)S
90 177 :M
f231 sf
(The following notice applies to this work as a whole and to the works included within it:)S
126 199 :M
(Creative endeavors depend on the lively exchange of ideas. There are laws and customs which)S
90 210 :M
(establish rights and responsibilities for authors and the users of what authors create. This notice is not)S
90 221 :M
(intended to prevent you from using the software and documents in this package, but to ensure that there are)S
90 232 :M
(no  misunderstandings about terms and conditions of such use.   Please read the following notice carefully.)S
90 243 :M
(If you do not understand any portion of this notice, please seek appropriate professional legal advice before)S
90 254 :M
(making use of the software and documents included in this software package. In addition to whatever other)S
90 265 :M
(steps you may be obliged to take to respect the intellectual property rights of the various parties involved, if)S
90 276 :M
(you do make use of the software and documents in this package, please give credit where credit is due by)S
90 287 :M
(citing this package, its authors and the URL or other source from which you obtained it, or equivalent)S
90 298 :M
(primary references in the literature with the same authors.)S
126 320 :M
(Some of the software and documents included within this software package are the intellectual)S
90 331 :M
(property of various parties, and placement in this package does not in any way imply that any such rights)S
90 342 :M
(have in any way been waived or diminished.)S
126 364 :M
(With respect to any software or documents for which a copyright exists, )S
417 364 :M
f242 sf
(ALL RIGHTS ARE)S
90 375 :M
(RESERVED TO THE OWNERS OF SUCH COPYRIGHT.)S
126 397 :M
f231 sf
(Even though the authors of the various documents and software found here have made a good faith)S
90 408 :M
(effort to ensure that the documents are correct and that the software performs according to its)S
90 419 :M
(documentation, and we would greatly appreciate hearing of any problems you may encounter, the programs)S
90 430 :M
(and documents any files created by the programs are provided **AS IS** without any warranty as to)S
90 441 :M
(correctness, merchantability or fitness for any particular or general use.   )S
383 441 :M
f242 sf
(THE RESPONSIBILITY FOR)S
90 452 :M
(ANY ADVERSE CONSEQUENCES FROM THE USE OF PROGRAMS OR DOCUMENTS OR)S
90 463 :M
(ANY FILE OR FILES CREATED BY USE OF THE PROGRAMS OR DOCUMENTS LIES)S
90 474 :M
(SOLELY WITH THE USERS OF THE PROGRAMS OR DOCUMENTS OR FILE OR FILES AND)S
90 485 :M
(NOT WITH AUTHORS OF THE PROGRAMS OR DOCUMENTS.)S
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(yaya; page: 3 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
479 753 :M
(Page - iii)S
270 81 :M
f242 sf
(The IUCr Policy)S
300 92 :M
(on)S
191 103 :M
(he Use of the Crystallographic Information File \(CIF\))S
90 125 :M
f231 sf
(The Crystallographic Information File \(Hall, Allen & Brown, 1991\) is, as of January 1992, the)S
90 136 :M
(recommended method for submitting publications to Acta Crystallographica Section C. The International)S
90 147 :M
(Union of Crystallography holds the Copyright on the CIF, and has applied for Patents on the STAR File)S
90 158 :M
(syntax which is the basis for the CIF format.)S
90 180 :M
(It is a principal objective of the IUCr to promote the use of CIF for the exchange and storage of scientific)S
90 191 :M
(data.  The IUCr's sponsorship of the CIF development was motivated by its responsibility to its scientific)S
90 202 :M
(journals,)S
90 213 :M
(which set the standards in crystallographic publishing. The IUCr intends that CIFs will be used increasingly)S
90 224 :M
(for  electronic submission of manuscripts to these journals in future. The IUCr recognises that, if the CIF)S
90 235 :M
(and the)S
90 246 :M
(STAR File are to be adopted as a means for universal data exchange, the syntax of these files must be)S
90 257 :M
(strictly and  uniformly adhered to. Even small deviations from the syntax would ultimately cause the)S
90 268 :M
(demise of the universal file concept. Through its Copyrights and Patents the IUCr has taken the steps)S
90 279 :M
(needed to ensure strict conformance with this syntax.)S
90 301 :M
(The IUCr policy on the use of the CIF and STAR File processes is as follows:)S
162 323 :M
(1.  CIFs and STAR Files may be generated, stored or transmitted, without permission or)S
126 334 :M
(charge, provided their purpose is not specifically for profit or commercial gain, and provided that)S
126 345 :M
(the published syntax is strictly adhered to.)S
162 367 :M
(2.  Computer software may be developed for use with CIFs or STAR files, without)S
126 378 :M
(permission or charge, provided it is distributed in the public domain. This condition also applies to)S
126 389 :M
(software for which a charge is made, provided that its primary function is for use with files that)S
126 400 :M
(satisfy condition 1 and that it is distributed as a minor component of a larger package of software.)S
162 422 :M
(3.  Permission will be granted for the use of CIFs and STAR Files for specific)S
126 433 :M
(commercial purposes \(such as databases or network exchange processes\), and for the distribution)S
126 444 :M
(of commercial CIF/STAR software, on written application to the IUCr Executive Secretary, 2)S
126 455 :M
(Abbey Square, Chester CH1 2HU, England.  The nature, terms and duration of the licences)S
126 466 :M
(granted will be determined by the IUCr Executive and Finance Committees.)S
90 488 :M
(In summary, the IUCr wishes to promote the use of the STAR File concepts as a standard universal data)S
90 499 :M
(file. It will insist on strict compliance with the published syntax for all applications. To assist with this)S
90 510 :M
(compliance, the)S
90 521 :M
(IUCr provides public domain software for checking the logical integrity of a CIF, and for validating the)S
90 532 :M
(data name definitions contained within a CIF. Detailed information on this software, and the associated)S
90 543 :M
(dictionaries, may be)S
90 554 :M
(obtained from the IUCr Office at 5 Abbey Square, Chester CH1 2HU, England.)S
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(yaya; page: 4 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
479 753 :M
(Page - iv)S
264 81 :M
f242 sf
(CBFlib V0.1 Notice)S
90 103 :M
f231 sf
(The following Diclaimer Notice applies to CBFlib V0.1, from which this version is derived.)S
126 125 :M
(The items furnished herewith were developed under the sponsorship of the U.S. Government.)S
90 136 :M
(Neither the U.S., nor the U.S. D.O.E., nor the Leland Stanford Junior University, nor their employees,)S
90 147 :M
(makes any warranty, express or implied, or assumes any liability or responsibility for accuracy,)S
90 158 :M
(completeness or usefulness of any information, apparatus, product or process disclosed, or represents that)S
90 169 :M
(its use will not infringe privately-owned rights. Mention of any product, its manufacturer, or suppliers shall)S
90 180 :M
(not, nor is it intended to, imply approval, disapproval, or fitness for any particular use. The U.S. and the)S
90 191 :M
(University at all times retain the right to use and disseminate the furnished items for any purpose)S
90 202 :M
(whatsoever.)S
90 224 :M
(Notice 91 02 01)S
266 279 :M
f242 sf
(CIFPARSE Notice)S
90 301 :M
f231 sf
(Portions of this software are loosely based on the CIFPARSE software package from the NDB at Rutgers)S
90 312 :M
(University \(see http://ndbserver.rutgers.edu/NDB/mmcif/software\). CIFPARSE is part of the NDBQUERY)S
90 323 :M
(application, a program component of the Nucleic Acid Database Project [ H. M. Berman, W. K. Olson, D.)S
90 334 :M
(L. Beveridge, J. K. Westbrook, A. Gelbin, T. Demeny, S. H. Shieh, A. R. Srinivasan, and B. Schneider.)S
90 345 :M
(\(1992\). The Nucleic Acid Database: A Comprehensive Relational Database of Three-Dimensional)S
90 356 :M
(Structures of Nucleic Acids. Biophys J., 63, 751-759.], whose cooperation is gratefully acknowledged,)S
90 367 :M
(especially in the form of design concepts created by J. Westbrook.)S
90 389 :M
(Please be aware of the following notice in the CIFPARSE API:)S
90 411 :M
(       This software is provided )S
212 411 :M
f242 sf
(WITHOUT WARRANTY OF MERCHANTABILITY OR FITNESS)S
90 422 :M
(FOR A PARTICULAR PURPOSE OR ANY OTHER WARRANTY, EXPRESS OR IMPLIED.)S
90 433 :M
(RUTGERS MAKE NO REPRESENTATION OR WARRANTY THAT THE SOFTWARE WILL)S
90 444 :M
(NOT INFRINGE ANY PATENT, COPYRIGHT OR OTHER PROPRIETARY RIGHT.)S
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(yaya; page: 5 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
483 753 :M
(Page - v)S
272 81 :M
f242 sf
(MPACK Notice)S
90 103 :M
f231 sf
(Portions of this library are adapted from the "mpack/munpack version 1.5" routines, written by John G.)S
90 114 :M
(Myers.  Mpack and munpack are utilities for encoding and decoding \(respectively\) binary files in MIME)S
90 125 :M
(\(Multipurpose)S
90 136 :M
(Internet Mail Extensions\) format mail messages. The mpack software used is \(C\) Copyright 1993,1994 by)S
90 147 :M
(Carnegie Mellon University, All Rights Reserved, and is subject to the following notice:)S
90 169 :M
(       Permission to use, copy, modify, distribute, and sell this software and its documentation for any)S
90 180 :M
(purpose is hereby granted without fee, provided that the above copyright notice appear in all copies and that)S
90 191 :M
(both that copyright notice and this permission notice appear in supporting documentation, and that the)S
90 202 :M
(name of Carnegie Mellon University not be used in advertising or publicity pertaining to distribution of the)S
90 213 :M
(software without specific, written prior permission. Carnegie Mellon University makes no representations)S
90 224 :M
(about the suitability of this software for any purpose. It is provided "as is" without express or implied)S
90 235 :M
(warranty.   )S
136 235 :M
f242 sf
(CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH)S
90 246 :M
(REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF)S
90 257 :M
(MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON)S
90 268 :M
(UNIVERSITY BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES)S
90 279 :M
(OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,  DATA OR PROFITS,)S
90 290 :M
(WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,)S
90 301 :M
(ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS)S
90 312 :M
(SOFTWARE.)S
280 345 :M
(MD5 Notice)S
90 367 :M
f231 sf
(The following notice applies to the message digest software in md5.h and md5.c which are optionally used)S
90 378 :M
(by this library. To that extent, this library is a work "derived from the RSA Data Security, Inc. MD5)S
90 389 :M
(Message-Digest Algorithm".)S
90 411 :M
(The software in md5.h and md5.c is Copyright \(C\) 1991-2, RSA Data Security, Inc. Created 1991. All)S
90 422 :M
(rights reserved, and is subject to the following notice:)S
90 444 :M
(       License to copy and use this software is granted provided that it is identified as the "RSA Data)S
90 455 :M
(Security, Inc. MD5 Message-Digest Algorithm" in all material mentioning or referencing this software or)S
90 466 :M
(this function.   License is also granted to make and use derivative works provided that such works are)S
90 477 :M
(identified as "derived from the RSA Data Security, Inc. MD5 Message-Digest Algorithm" in all material)S
90 488 :M
(mentioning or referencing the derived work.   RSA Data Security, Inc. makes no representations concerning)S
90 499 :M
(either the merchantability of this software or the suitability of this software for any particular purpose. It is)S
90 510 :M
(provided "as is" without express or implied warranty of any kind.   These notices must be retained in any)S
90 521 :M
(copies of any part of this documentation and/or software.)S
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(yaya; page: 6 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
479 753 :M
(Page - vi)S
265 81 :M
f184 sf
(Version History)S
90 117 :M
(Version)S
144 117 :M
(Date)S
198 117 :M
(By)S
230 117 :M
(Description)S
90 129 :M
f209 sf
(0.1)S
133 129 :M
(Apr. 1998)S
198 129 :M
(PJE)S
230 129 :M
(This was the first CBFlib release. It supported binary)S
230 141 :M
(CBF files using binary strings.)S
90 153 :M
(0.2)S
133 153 :M
(Aug. 1998)S
198 153 :M
(HJB)S
230 153 :M
(This release added ascii imgCIF support using MIME-)S
230 165 :M
(encoded binary sections, added the option of MIME)S
230 177 :M
(headers for the binary strings was well. MIME code)S
230 189 :M
(adapted from mpack 1.5. Added hooks needed for)S
230 201 :M
(DDL1-style names without categories.)S
90 213 :M
(0.3)S
133 213 :M
(Sep. 1998)S
198 213 :M
(PJE)S
230 213 :M
(This release cleaned up the changes made for version)S
230 225 :M
(0.2, allowing multi-threaded use of the code, and)S
230 237 :M
(removing dependence on the mpack package.)S
90 249 :M
(0.4)S
133 249 :M
(Nov. 1998)S
198 249 :M
(HJB)S
230 249 :M
(This release merged much of the message digest code)S
230 261 :M
(into the general file reading and writing to reduce the)S
230 273 :M
(number of passes. More consistency checking)S
230 285 :M
(between the MIME header and the binary header was)S
230 297 :M
(introduced. The size in the MIME header was)S
230 309 :M
(adjusted to agree with the version 0.2 documentation.)S
90 321 :M
(0.5)S
133 321 :M
(Dec. 1998)S
198 321 :M
(PJE)S
230 321 :M
(This release greatly increased the speed of processing)S
230 333 :M
(by allowing for deferred digest evaluation.)S
90 345 :M
(0.6)S
133 345 :M
(Jan. 1999)S
198 345 :M
(HJB)S
230 345 :M
(This release removed the redundant information)S
230 357 :M
(\(binary id, size, compression id\) from a binary header)S
230 369 :M
(when there is a MIME header, removed the unused)S
230 381 :M
(repeat argument, and made the memory allocation for)S
230 393 :M
(buffering and tables with many rows sensitive to the)S
230 405 :M
(current memory allocation already used.)S
261 477 :M
f184 sf
(Known Problems)S
90 501 :M
f209 sf
(This version does not have support for byte-offset or predictor compression. Code is)S
90 513 :M
(needed to support array sub-sections.)S
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(yaya; page: 7 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
476 753 :M
(Page - vii)S
90 84 :M
f220 sf
(Foreword)S
90 120 :M
f209 sf
(In order to work with CBFlib, you need the source code, in the form of a compressed tar,)S
90 132 :M
(CBFlib.tar.Z. Uncompress this file. Place it in an otherwise empty directory, and unpack)S
90 144 :M
(it with tar. You will also need Paul Ellis's sample MAR345 image, example.mar2300, as)S
90 156 :M
(sample data. This file can also be found at http://biosg1.slac.stanford.edu/biosg1)S
476 156 :M
(-)S
90 168 :M
(users/ellis/Public/. Place that file in the top level directory \(one level up from the source)S
90 180 :M
(code\).   Adjust the definition of CC in Makefile to point to your C compiler, and then)S
126 204 :M
f184 sf
(make all)S
126 216 :M
(make tests)S
90 240 :M
f209 sf
(This release has been tested on an SGI under IRIX 6.4 and on a PowerPC under Linux)S
505 240 :M
(-)S
90 252 :M
(ppc 2.1.24.)S
90 276 :M
(We have included examples of CBF/imgCIF files produced by CBFlib, an updated)S
90 288 :M
(version of John Westbrook's DDL2-compliant CBF Extensions Dictionary, and of Andy)S
90 300 :M
(Hammersley's CBF definition, updated to become a DRAFT CBF/ImgCIF DEFINITION.)S
90 324 :M
(This is just a proposal. Please be careful about basing any code on this until and unless)S
90 336 :M
(there has been a general agreement.)S
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(yaya; page: 8 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
306 396 :M
f253 sf
.739 .074( )J
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(yaya; page: 9 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
479 753 :M
(Page - ix)S
279 96 :M
f220 sf
(Contents)S
90 120 :M
f209 sf
(1. Introduction )S
462 120 :M
(1)S
90 144 :M
(2. Function descriptions )S
462 144 :M
(3)S
144 168 :M
(2.1 General description)S
144 180 :M
(2.1.1 CBF handles)S
144 192 :M
(2.1.2 Return values)S
144 216 :M
(2.2 Reading and writing files containing binary sections)S
144 228 :M
(2.2.1 Reading binary sections)S
144 240 :M
(2.2.2 Writing binary sections)S
144 252 :M
(2.2.3 Summary of reading and writing files containing binary sections)S
144 276 :M
(2.3 Function prototypes)S
144 288 :M
(2.3.1 )S
f184 sf
(cbf_make_handle)S
144 300 :M
f209 sf
(2.3.2 )S
f184 sf
(cbf_free_handle)S
144 312 :M
f209 sf
(2.3.3 )S
f184 sf
(cbf_read_file)S
144 324 :M
f209 sf
(2.3.4 )S
f184 sf
(cbf_write_file)S
144 336 :M
f209 sf
(2.3.5 )S
f184 sf
(cbf_new_datablock)S
144 348 :M
f209 sf
(2.3.6 )S
f184 sf
(cbf_force_new_datablock)S
144 360 :M
f209 sf
(2.3.7 )S
f184 sf
(cbf_new_category)S
144 372 :M
f209 sf
(2.3.8 )S
f184 sf
(cbf_force_new_category)S
144 384 :M
f209 sf
(2.3.9 )S
f184 sf
(cbf_new_column)S
144 396 :M
f209 sf
(2.3.10 )S
f184 sf
(cbf_new_row)S
144 408 :M
f209 sf
(2.3.11 )S
f184 sf
(cbf_insert_row)S
144 420 :M
f209 sf
(2.3.12 )S
f184 sf
(cbf_delete_row)S
144 432 :M
f209 sf
(2.3.13 )S
f184 sf
(cbf_set_datablockname)S
144 444 :M
f209 sf
(2.3.14 )S
f184 sf
(cbf_reset_datablocks)S
144 456 :M
f209 sf
(2.3.15 )S
f184 sf
(cbf_reset_datablock)S
144 468 :M
f209 sf
(2.3.16 )S
f184 sf
(cbf_reset_category)S
144 480 :M
f209 sf
(2.3.17 )S
f184 sf
(cbf_remove_datablock)S
144 492 :M
f209 sf
(2.3.18 )S
f184 sf
(cbf_remove_category)S
144 504 :M
f209 sf
(2.3.19 )S
f184 sf
(cbf_remove_column)S
144 516 :M
f209 sf
(2.3.20 )S
f184 sf
(cbf_remove_row)S
144 528 :M
f209 sf
(2.3.21 )S
f184 sf
(cbf_rewind_datablock)S
144 540 :M
f209 sf
(2.3.22 )S
f184 sf
(cbf_rewind_category)S
144 552 :M
f209 sf
(2.3.23 )S
f184 sf
(cbf_rewind_column)S
144 564 :M
f209 sf
(2.3.24 )S
f184 sf
(cbf_rewind_row)S
144 576 :M
f209 sf
(2.3.25 )S
f184 sf
(cbf_next_datablock)S
144 588 :M
f209 sf
(2.3.26 )S
f184 sf
(cbf_next_category)S
144 600 :M
f209 sf
(2.3.27 )S
f184 sf
(cbf_next_column)S
144 612 :M
f209 sf
(2.3.28 )S
f184 sf
(cbf_next_row)S
144 624 :M
f209 sf
(2.3.29 )S
f184 sf
(cbf_find_datablock)S
144 636 :M
f209 sf
(2.3.30 )S
f184 sf
(cbf_find_category)S
144 648 :M
f209 sf
(2.3.31 )S
f184 sf
(cbf_find_column)S
144 660 :M
f209 sf
(2.3.32 )S
f184 sf
(cbf_find_row)S
144 672 :M
f209 sf
(2.3.33 )S
f184 sf
(cbf_find_nextrow)S
144 684 :M
f209 sf
(2.3.34 )S
f184 sf
(cbf_count_datablocks)S
144 696 :M
f209 sf
(2.3.35 )S
f184 sf
(cbf_count_categories)S
144 708 :M
f209 sf
(2.3.36 )S
f184 sf
(cbf_count_columns)S
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(yaya; page: 10 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
483 753 :M
(Page - x)S
144 81 :M
(2.3.37 )S
f184 sf
(cbf_count_rows)S
144 93 :M
f209 sf
(2.3.38 )S
f184 sf
(cbf_select_datablock)S
144 105 :M
f209 sf
(2.3.39 )S
f184 sf
(cbf_select_category)S
144 117 :M
f209 sf
(2.3.40 )S
f184 sf
(cbf_select_column)S
144 129 :M
f209 sf
(2.3.41 )S
f184 sf
(cbf_select_row)S
144 141 :M
f209 sf
(2.3.42 )S
f184 sf
(cbf_datablock_name)S
144 153 :M
f209 sf
(2.3.43 )S
f184 sf
(cbf_category_name)S
144 165 :M
f209 sf
(2.3.44 )S
f184 sf
(cbf_column_name)S
144 177 :M
f209 sf
(2.3.45 )S
f184 sf
(cbf_row_number)S
144 189 :M
f209 sf
(2.3.46 )S
f184 sf
(cbf_get_value)S
144 201 :M
f209 sf
(2.3.47 )S
f184 sf
(cbf_set_value)S
144 213 :M
f209 sf
(2.3.48 )S
f184 sf
(cbf_get_integervalue)S
144 225 :M
f209 sf
(2.3.49 )S
f184 sf
(cbf_set_integervalue)S
144 237 :M
f209 sf
(2.3.50 )S
f184 sf
(cbf_get_doublevalue)S
144 249 :M
f209 sf
(2.3.51 )S
f184 sf
(cbf_set_doublevalue)S
144 261 :M
f209 sf
(2.3.52 )S
f184 sf
(cbf_get_integerarrayparameters)S
144 273 :M
f209 sf
(2.3.53 )S
f184 sf
(cbf_get_integerarray)S
144 285 :M
f209 sf
(2.3.54 )S
f184 sf
(cbf_set_integerarray)S
144 297 :M
f209 sf
(2.3.55 )S
f184 sf
(cbf_failnez)S
144 309 :M
f209 sf
(2.3.56 )S
f184 sf
(cbf_onfailnez)S
90 333 :M
f209 sf
(3. File format )S
456 333 :M
(63)S
144 357 :M
(3.1 General description)S
144 381 :M
(3.2 Format of the binary sections)S
144 393 :M
(3.2.1 Format of imgCIF binary sections)S
144 405 :M
(3.2.2 Format of CBF binary sections)S
144 429 :M
(3.3 Compression schemes)S
144 441 :M
(3.3.1 Canonical-code compression)S
144 453 :M
(3.3.2 CCP4-style compression)S
90 477 :M
(4. Installation )S
456 477 :M
(69)S
90 501 :M
(5. Example programs )S
456 501 :M
(71)S
endp
%%Page: 11 11
%%BeginPageSetup
initializepage
(yaya; page: 11 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
483 753 :M
(Page - 1)S
90 84 :M
f220 sf
(1. Introduction)S
90 120 :M
f209 sf
(CBFlib is a library of ANSI-C functions providing a simple mechanism for accessing)S
90 132 :M
(Crystallographic Binary Files \(CBF files\) and Image-supporting CIF \(imgCIF\) files. The)S
90 144 :M
(CBFlib API is loosely based on the CIFPARSE API for mmCIF files. Like CIFPARSE,)S
90 156 :M
(CBFlib does not perform any semantic integrity checks; rather it simply provides)S
90 168 :M
(functions to create, read, modify and write CBF binary data files and imgCIF ASCII data)S
90 180 :M
(files.)S
endp
%%Page: 12 12
%%BeginPageSetup
initializepage
(yaya; page: 12 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
306 396 :M
f253 sf
.739 .074( )J
endp
%%Page: 13 13
%%BeginPageSetup
initializepage
(yaya; page: 13 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
483 753 :M
(Page - 3)S
90 84 :M
f220 sf
(2. Function descriptions)S
90 108 :M
f184 sf
(2.1 General description)S
90 132 :M
f209 sf
(Almost all of the CBFlib functions receive a value of type cbf_handle \(a CBF handle\) as)S
90 144 :M
(the first argument.)S
90 168 :M
(All functions return an integer equal to 0 for success or an error code for failure.)S
90 204 :M
f184 sf
(2.1.1 CBF handles)S
90 228 :M
f209 sf
(CBFlib permits a program to use multiple CBF objects simultaneously. To identify the)S
90 240 :M
(CBF object on which a function will operate, CBFlib uses a value of type cbf_handle.)S
90 264 :M
(All functions in the library except )S
f184 sf
(cbf_make_handle)S
346 264 :M
f209 sf
( expect a value of type cbf_handle)S
90 276 :M
(as the first argument.)S
90 300 :M
(The function )S
155 300 :M
f184 sf
(cbf_make_handle)S
f209 sf
( creates and initializes a new CBF handle.)S
90 324 :M
(The function )S
155 324 :M
f184 sf
(cbf_free_handle)S
f209 sf
( destroys a handle and frees all memory associated with the)S
90 336 :M
(corresponding CBF object.)S
90 372 :M
(2.1.2 Return values)S
90 396 :M
(All of the CBFlib functions return 0 on success and an error code on failure. The error)S
90 408 :M
(codes are:)S
90 432 :M
(\312\312CBF_FORMAT)S
216 432 :M
(\312\312The file format is invalid)S
90 444 :M
(\312\312CBF_ALLOC)S
216 444 :M
(\312\312Memory allocation failed)S
90 456 :M
(\312\312CBF_ARGUMENT)S
216 456 :M
(\312\312Invalid function argument)S
90 468 :M
(\312\312CBF_ASCII)S
216 468 :M
(\312\312The value is ASCII \(not binary\))S
90 480 :M
(\312\312CBF_BINARY)S
216 480 :M
(\312\312The value is binary \(not ASCII\))S
90 492 :M
(\312\312CBF_BITCOUNT)S
216 492 :M
(\312\312The expected number of bits does  not match the actual)S
216 504 :M
(number written)S
90 516 :M
(\312\312CBF_ENDOFDATA)S
216 516 :M
(\312\312The end of the data was reached before the end of the)S
216 528 :M
(array)S
90 540 :M
(\312\312CBF_FILECLOSE)S
216 540 :M
(\312\312File close error)S
90 552 :M
(\312\312CBF_FILEOPEN)S
216 552 :M
(\312\312File open error)S
90 564 :M
(\312\312CBF_FILEREAD)S
216 564 :M
(\312\312File read error)S
90 576 :M
(\312\312CBF_FILESEEK)S
216 576 :M
(\312\312File seek error)S
90 588 :M
(\312\312CBF_FILETELL)S
216 588 :M
(\312\312File tell error)S
90 600 :M
(\312\312CBF_FILEWRITE)S
216 600 :M
(\312\312File write error)S
90 612 :M
(\312\312CBF_IDENTICAL)S
216 612 :M
(\312\312A data block with the new name already exists)S
90 624 :M
(\312\312CBF_NOTFOUND)S
216 624 :M
(\312\312The data block, category, column or row does not exist)S
90 636 :M
(\312\312CBF_OVERFLOW)S
216 636 :M
(\312\312The number read cannot fit into the destination)S
216 648 :M
(argument. The destination hasbeen set to the nearest)S
216 660 :M
(value.)S
90 684 :M
(If more than one error has occurred, the error code is the logical OR of the individual)S
90 696 :M
(error codes.)S
endp
%%Page: 14 14
%%BeginPageSetup
initializepage
(yaya; page: 14 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
483 753 :M
(Page - 4)S
90 81 :M
(2.2 Reading and writing files containing binary sections)S
90 105 :M
(2.2.1 Reading binary sections)S
90 141 :M
(The current version of CBFlib only decompresses a binary section from disk when)S
90 153 :M
(requested by the program.)S
90 177 :M
(When a file containing one or more binary sections is read, CBFlib saves the file pointer)S
90 189 :M
(and the position of the binary section within the file and then jumps past the binary)S
90 201 :M
(section. When the program attempts to access the binary data, CBFlib sets the file)S
90 213 :M
(position back to the start  of the binary section and then reads the data.)S
90 237 :M
(For this scheme to work:)S
90 261 :M
(1. The file must be a random-access file opened in binary mode \(fopen \( ," rb"\)\).)S
90 273 :M
(2. The program must not close the file. CBFlib will close the file using fclose \( \) when it)S
90 285 :M
(is no longer needed.)S
90 309 :M
(At present, this also means that a program cant read a file and then write back to the same)S
90 321 :M
(file. This restriction will be eliminated in a future version.)S
90 345 :M
(When reading an imgCIF vs a CBF, the difference is detected automatically.)S
90 381 :M
f184 sf
(2.2.2 Writing binary sections)S
90 405 :M
f209 sf
(When a program passes CBFlib a binary value, the data is compressed to a temporary)S
90 417 :M
(file. If the CBF object is subsequently written to a file, the data is simply copied from the)S
90 429 :M
(temporary file to the output file.)S
90 453 :M
(The output file can be of any type. If the program indicates to CBFlib that the file is a)S
90 465 :M
(random-access and readable, CBFlib will conserve disk space by closing the temporary)S
90 477 :M
(file and using the output file as the location at which the binary value is stored.)S
90 501 :M
(For this option to work:)S
90 525 :M
(1. The file must be a random-access file opened in binary update mode \(fopen \( ,)S
90 537 :M
("w+b"\)\).)S
90 549 :M
(2. The program must not close the file. CBFlib will close the file using fclose \( \) when it)S
90 561 :M
(is no longer needed.)S
90 585 :M
(If this option is not used:)S
90 609 :M
(1. CBFlib will continue using the temporary file.)S
90 621 :M
(2. CBFlib will not close the file. This is the responsibility of the main program.)S
90 645 :M
f184 sf
(2.2.3 Summary of reading and writing files containing binary sections)S
90 669 :M
f209 sf
(1. Open disk files to read using the mode "rb".)S
90 681 :M
(2. If possible, open disk files to write using the mode "w+b" and tell CBFlib that it can)S
90 693 :M
(use the file as a buffer.)S
90 705 :M
(3. Do not close any files read by CBFlib or written by CBFlib with buffering turned on.)S
90 717 :M
(4. Do not attempt to read from a file, then write to the same file.)S
endp
%%Page: 15 15
%%BeginPageSetup
initializepage
(yaya; page: 15 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
483 753 :M
(Page - 5)S
90 81 :M
f184 sf
(2.3 Function prototypes)S
90 105 :M
f209 sf
(2.3.1 )S
f184 sf
(cbf_make_handle)S
90 141 :M
(PROTOTYPE)S
90 165 :M
f209 sf
(#include "cbf.h")S
90 189 :M
(int )S
106 189 :M
f184 sf
(cbf_make_handle)S
f209 sf
( \(cbf_handle *)S
266 189 :M
f279 sf
(handle)S
f209 sf
(\);)S
90 213 :M
f184 sf
(DESCRIPTION)S
90 237 :M
(cbf_make_handle)S
181 237 :M
f209 sf
( creates and initializes a new internal CBF object. All other CBFlib)S
90 249 :M
(functions operating on this object receive the CBF handle as the first argument.)S
90 273 :M
f184 sf
(ARGUMENTS)S
90 297 :M
f279 sf
(handle)S
216 297 :M
f209 sf
(Pointer to a CBF handle.)S
90 321 :M
f184 sf
(RETURN VALUE)S
90 345 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 369 :M
f184 sf
(SEE ALSO)S
90 393 :M
f209 sf
(2.3.2 )S
f184 sf
(cbf_free_handle)S
endp
%%Page: 16 16
%%BeginPageSetup
initializepage
(yaya; page: 16 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
483 753 :M
(Page - 6)S
90 93 :M
(2.3.2 )S
f184 sf
(cbf_free_handle)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_free_handle)S
f209 sf
( \(cbf_handle )S
252 177 :M
f279 sf
(handle)S
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_free_handle)S
173 225 :M
f209 sf
( destroys the CBF object specified by the )S
f279 sf
(handle)S
406 225 :M
f209 sf
( and)S
90 237 :M
(frees all associated memory.)S
90 261 :M
f184 sf
(ARGUMENTS)S
90 285 :M
f279 sf
(handle)S
216 285 :M
f209 sf
(CBF handle to free.)S
90 309 :M
f184 sf
(RETURN VALUE)S
90 333 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 357 :M
f184 sf
(SEE ALSO)S
90 381 :M
f209 sf
(2.3.1 )S
f184 sf
(cbf_make_handle)S
endp
%%Page: 17 17
%%BeginPageSetup
initializepage
(yaya; page: 17 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
483 753 :M
(Page - 7)S
90 93 :M
(2.3.3 )S
f184 sf
(cbf_read_file)S
90 117 :M
(PROTOTYPE)S
90 136 :M
f209 sf
(#include "cbf.h")S
90 160 :M
(int )S
106 160 :M
f184 sf
(cbf_read_file)S
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
269 160 :M
f209 sf
(, FILE *)S
f279 sf
(file)S
325 160 :M
f209 sf
(, int )S
f279 sf
(headers)S
384 160 :M
f209 sf
(\);)S
90 184 :M
f184 sf
(DESCRIPTION)S
90 203 :M
(cbf_read_file)S
f209 sf
( reads the CBF or CIF file )S
286 203 :M
f279 sf
(file)S
f209 sf
( into the CBF object)S
90 215 :M
(specified by )S
f279 sf
(handle)S
184 215 :M
f209 sf
(.)S
90 239 :M
f279 sf
(headers)S
128 239 :M
f209 sf
( controls the interprestation of binary section headers of imgCIF)S
90 251 :M
(files.)S
90 263 :M
(\312)S
90 275 :M
(MSG_DIGEST:)S
216 275 :M
(Instructs CBFlib to check that the digest of the binary)S
216 287 :M
(section matches any header value. If the digests do not)S
216 299 :M
(match, the call will return CBF_FORMAT. This)S
216 311 :M
(evaluation and comparison is delayed \(a "lazy")S
216 323 :M
(evaluation\) to ensure maximal processing efficiency. If an)S
216 335 :M
(immediately evaluation is required, see)S
216 347 :M
(MSG_DIGESTNOW, below.)S
90 359 :M
(MSG_DIGESTNOW:)S
216 359 :M
(Instructs CBFlib to check that the digest of the binary)S
216 371 :M
(section matches any header value.  If the digests do not)S
216 383 :M
(match, the call will return CBF_FORMAT. This)S
216 395 :M
(evaluation and comparison is performed during initial)S
216 407 :M
(parsing of the section to ensure timely error reporting at)S
216 419 :M
(the expense of processing efficiency. If a more efficient)S
216 431 :M
(delayed \("lazy"\) evaluation is required, see)S
216 443 :M
(MSG_DIGESTNOW, below.)S
90 455 :M
(MSG_NODIGEST:)S
216 455 :M
(Do not check the digest \(default\).)S
90 479 :M
(CBFlib defers reading binary sections as long as possible. In the current version of)S
90 491 :M
(CBFlib, this means that:)S
90 515 :M
(1. The )S
124 515 :M
f279 sf
(file)S
f209 sf
( must be a random-access file opened in binary mode \(fopen \( , "rb"\)\).)S
90 527 :M
(2. The program must not close the )S
f279 sf
(file)S
273 527 :M
f209 sf
(. CBFlib will close the )S
f279 sf
(file)S
f209 sf
( using  fclose \( \) when it)S
90 539 :M
(is no longer needed.)S
90 563 :M
(These restrictions may change in a future release.)S
90 587 :M
f184 sf
(ARGUMENTS)S
90 595 :M
f290 sf
(\312)S
90 606 :M
f279 sf
(handle)S
216 606 :M
f209 sf
(CBF handle.)S
90 618 :M
f279 sf
(file)S
216 618 :M
f209 sf
(Pointer to a file descriptor.)S
90 630 :M
f279 sf
(headers)S
216 630 :M
f209 sf
(Controls interprestation of binary section headers.)S
90 654 :M
f184 sf
(RETURN VALUE)S
90 673 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 697 :M
f184 sf
(SEE ALSO)S
90 716 :M
f209 sf
(2.3.4 )S
f184 sf
(cbf_write_file)S
endp
%%Page: 18 18
%%BeginPageSetup
initializepage
(yaya; page: 18 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
483 753 :M
(Page - 8)S
90 81 :M
(2.3.4 )S
f184 sf
(cbf_write_file)S
90 105 :M
(PROTOTYPE)S
90 129 :M
f209 sf
(#include "cbf.h")S
90 153 :M
(int )S
106 153 :M
f184 sf
(cbf_write_file)S
f209 sf
( \(cbf_handle )S
240 153 :M
f279 sf
(handle)S
f209 sf
(, FILE *)S
313 153 :M
f279 sf
(file)S
f209 sf
(, int )S
350 153 :M
f279 sf
(readable)S
f209 sf
(, int  )S
417 153 :M
f279 sf
(ciforcbf)S
f209 sf
(, int )S
476 153 :M
f279 sf
(headers)S
514 153 :M
f209 sf
(,)S
126 165 :M
(int )S
142 165 :M
f279 sf
(encoding)S
186 165 :M
f209 sf
(\);)S
90 189 :M
f184 sf
(DESCRIPTION)S
90 213 :M
(cbf_write_file)S
161 213 :M
f209 sf
( writes the CBF object specified by )S
f279 sf
(handle)S
366 213 :M
f209 sf
( into the file )S
f279 sf
(file)S
f209 sf
(.)S
90 237 :M
(Unlike )S
126 237 :M
f184 sf
(cbf_read_file)S
f209 sf
(, the )S
217 237 :M
f279 sf
(file)S
f209 sf
( does not have to be random-access.)S
90 261 :M
(If the )S
119 261 :M
f279 sf
(file)S
f209 sf
( is random-access and readable, )S
f279 sf
(readable)S
332 261 :M
f209 sf
( can be set to non-0 to indicate to)S
90 273 :M
(CBFlib that the )S
f279 sf
(file)S
f209 sf
( can be used as a buffer to conserve disk space. If the )S
440 273 :M
f279 sf
(file)S
456 273 :M
f209 sf
( is not)S
90 285 :M
(random-access or not readable, )S
f279 sf
(readable)S
285 285 :M
f209 sf
( must be 0.)S
90 309 :M
(If )S
101 309 :M
f279 sf
(readable)S
144 309 :M
f209 sf
( is non-0, CBFlib will close the )S
f279 sf
(file)S
f209 sf
( when it is no longer required otherwise)S
90 321 :M
(this is the responsibility of the program.)S
90 345 :M
f279 sf
(ciforcbf)S
f209 sf
( selects the format in which the binary sections are written:)S
90 369 :M
(CIF)S
216 369 :M
(Write an imgCIF file.)S
90 381 :M
(CBF)S
216 381 :M
(Write a CBF file \(default\). )S
347 381 :M
f279 sf
(headers)S
385 381 :M
f209 sf
( selects the type of)S
216 393 :M
(header used in  CBF binary sections and selects whether)S
216 405 :M
(message digests are generated.)S
90 429 :M
(The value of )S
154 429 :M
f279 sf
(headers)S
192 429 :M
f209 sf
( can be a logical OR of any of:)S
90 453 :M
(MIME_HEADERS)S
216 453 :M
(Use MIME-type headers \(default\).)S
90 465 :M
(MIME_NOHEADERS)S
216 465 :M
(Use a simple ASCII headers.)S
90 477 :M
(MSG_DIGEST)S
216 477 :M
(Generate message digests for binary data validation.)S
90 489 :M
(MSG_NODIGEST)S
216 489 :M
(Do not generate message digests \(default\).)S
90 513 :M
f279 sf
(encoding)S
134 513 :M
f209 sf
( selects the type of encoding used for binary sections and the type of line-)S
90 525 :M
(termination in imgCIF files. The value can be a logical OR of any of:)S
90 549 :M
(ENC_BASE64)S
216 549 :M
(Use BASE64 encoding \(default\).)S
90 561 :M
(ENC_QP)S
216 561 :M
(Use QUOTED-PRINTABLE encoding.)S
90 573 :M
(ENC_BASE8)S
216 573 :M
(Use BASE8 \(octal\) encoding.)S
90 585 :M
(ENC_BASE10)S
216 585 :M
(Use BASE10 \(decimal\) encoding.)S
90 597 :M
(ENC_BASE16)S
216 597 :M
(Use BASE16 \(hexadecimal\) encoding.)S
90 609 :M
(ENC_FORWARD)S
216 609 :M
(For BASE8, BASE10 or BASE16 encoding, map bytes to)S
216 621 :M
(words forward \(1234\) \(default on little-endian machines\).)S
90 633 :M
(ENC_BACKWARD)S
216 633 :M
(Map bytes to words backward \(4321\) \(default on big-)S
216 645 :M
(endian machines\).)S
90 657 :M
(ENC_CRTERM)S
216 657 :M
(Terminate lines with CR.)S
90 669 :M
(ENC_LFTERM)S
216 669 :M
(Terminate lines with LF \(default\).)S
endp
%%Page: 19 19
%%BeginPageSetup
initializepage
(yaya; page: 19 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
483 753 :M
(Page - 9)S
90 81 :M
f184 sf
(ARGUMENTS)S
90 93 :M
f209 sf
(\312)S
90 105 :M
f279 sf
(handle)S
216 105 :M
f209 sf
(CBF handle.)S
90 117 :M
f279 sf
(file)S
216 117 :M
f209 sf
(Pointer to a file descriptor.)S
90 129 :M
f279 sf
(readable)S
216 129 :M
f209 sf
(If non-0: this file is random-access and readable and can)S
216 141 :M
(be used as a buffer.)S
90 153 :M
f279 sf
(ciforcbf)S
216 153 :M
f209 sf
(Selects the format in which the binary sections are written)S
216 165 :M
(\(CIF/CBF\).)S
90 177 :M
f279 sf
(headers)S
216 177 :M
f209 sf
(Selects the type of header in CBF binary sections and)S
216 189 :M
(message digest  generation.)S
90 201 :M
f279 sf
(encoding)S
216 201 :M
f209 sf
(Selects the type of encoding used for binary sections and)S
216 213 :M
(the type of line-termination in imgCIF files.)S
90 237 :M
f184 sf
(RETURN VALUE)S
90 261 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 285 :M
f184 sf
(SEE ALSO)S
90 309 :M
f209 sf
(2.3.3 )S
f184 sf
(cbf_read_file)S
endp
%%Page: 20 20
%%BeginPageSetup
initializepage
(yaya; page: 20 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 10)S
90 93 :M
(2.3.5 )S
f184 sf
(cbf_new_datablock)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_new_datablock)S
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
301 177 :M
f209 sf
(, const char *)S
365 177 :M
f279 sf
(datablockname)S
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_new_datablock)S
f209 sf
( creates a new data block with name )S
366 225 :M
f279 sf
(datablockname)S
f209 sf
( and makes it the)S
90 237 :M
(current data block.)S
90 261 :M
(If a data block with this name already exists, the existing data block becomes the current)S
90 273 :M
(data block.)S
90 297 :M
f184 sf
(ARGUMENTS)S
90 321 :M
f279 sf
(handle)S
216 321 :M
f209 sf
(CBF handle.)S
90 333 :M
f279 sf
(datablockname)S
216 333 :M
f209 sf
(The name of the new data block.)S
90 357 :M
f184 sf
(RETURN VALUE)S
90 381 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 405 :M
f184 sf
(SEE ALSO)S
90 429 :M
f209 sf
(2.3.6 )S
f184 sf
(cbf_force_new_datablock)S
90 441 :M
f209 sf
(2.3.7 )S
f184 sf
(cbf_new_category)S
90 453 :M
f209 sf
(2.3.8 )S
f184 sf
(cbf_force_new_category)S
90 465 :M
f209 sf
(2.3.9 )S
f184 sf
(cbf_new_column)S
90 477 :M
f209 sf
(2.3.10 )S
f184 sf
(cbf_new_row)S
90 489 :M
f209 sf
(2.3.11 )S
f184 sf
(cbf_insert_row)S
90 501 :M
f209 sf
(2.3.12 )S
f184 sf
(cbf_set_datablockname)S
90 513 :M
f209 sf
(2.3.17 )S
f184 sf
(cbf_remove_datablock)S
endp
%%Page: 21 21
%%BeginPageSetup
initializepage
(yaya; page: 21 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 11)S
90 93 :M
(2.3.6 )S
f184 sf
(cbf_force_new_data_block)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_force_new_datablock)S
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
333 177 :M
f209 sf
(, const char *)S
397 177 :M
f279 sf
(datablockname)S
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_force_new_datablock)S
f209 sf
( creates a new data block with name )S
398 225 :M
f279 sf
(datablockname)S
f209 sf
( and)S
90 237 :M
(makes it the current data block. Duplicate data block names are allowed.)S
90 261 :M
(Even if a data block with this name already exists, a new data block is created and)S
90 273 :M
(becomes the current data block.)S
90 297 :M
f184 sf
(ARGUMENTS)S
90 309 :M
f209 sf
(\312)S
90 321 :M
f279 sf
(handle)S
216 321 :M
f209 sf
(CBF handle.)S
90 333 :M
f279 sf
(datablockname)S
216 333 :M
f209 sf
(The name of the new data block.)S
90 357 :M
f184 sf
(RETURN VALUE)S
90 381 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 405 :M
f184 sf
(SEE ALSO)S
90 429 :M
f209 sf
(2.3.5 )S
f184 sf
(cbf_new_datablock)S
90 441 :M
f209 sf
(2.3.7 )S
f184 sf
(cbf_new_category)S
90 453 :M
f209 sf
(2.3.8 )S
f184 sf
(cbf_force_new_category)S
90 465 :M
f209 sf
(2.3.9 )S
f184 sf
(cbf_new_column)S
90 477 :M
f209 sf
(2.3.10 )S
f184 sf
(cbf_new_row)S
90 489 :M
f209 sf
(2.3.11 )S
f184 sf
(cbf_insert_row)S
90 501 :M
f209 sf
(2.3.12 )S
f184 sf
(cbf_set_datablockname)S
90 513 :M
f209 sf
(2.3.17 )S
f184 sf
(cbf_remove_datablock)S
endp
%%Page: 22 22
%%BeginPageSetup
initializepage
(yaya; page: 22 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 12)S
90 93 :M
(2.3.7 )S
f184 sf
(cbf_new_category)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_new_category)S
f209 sf
( \(cbf_handle )S
262 177 :M
f279 sf
(handle)S
f209 sf
(, const char *)S
358 177 :M
f279 sf
(categoryname)S
426 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_new_category)S
183 225 :M
f209 sf
( creates a new category in the current data block with name)S
90 237 :M
f279 sf
(categoryname)S
158 237 :M
f209 sf
( and makes it the current category.)S
90 261 :M
(If a category with this name already exists, the existing category becomes the current)S
90 273 :M
(category.)S
90 297 :M
f184 sf
(ARGUMENTS)S
90 309 :M
f279 sf
(handle)S
216 309 :M
f209 sf
(CBF handle.)S
90 321 :M
f279 sf
(categoryname)S
216 321 :M
f209 sf
(The name of the new category.)S
90 345 :M
f184 sf
(RETURN VALUE)S
90 369 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 393 :M
f184 sf
(SEE ALSO)S
90 417 :M
f209 sf
(2.3.5 )S
f184 sf
(cbf_new_datablock)S
90 429 :M
f209 sf
(2.3.6 )S
f184 sf
(cbf_force_new_datablock)S
90 441 :M
f209 sf
(2.3.8 )S
f184 sf
(cbf_force_new_category)S
90 453 :M
f209 sf
(2.3.9 )S
f184 sf
(cbf_new_column)S
90 465 :M
f209 sf
(2.3.10 )S
f184 sf
(cbf_new_row)S
90 477 :M
f209 sf
(2.3.11 )S
f184 sf
(cbf_insert_row)S
90 489 :M
f209 sf
(2.3.18 )S
f184 sf
(cbf_remove_category)S
endp
%%Page: 23 23
%%BeginPageSetup
initializepage
(yaya; page: 23 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 13)S
90 93 :M
(2.3.8 )S
f184 sf
(cbf_force_new_category)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_force_new_category)S
f209 sf
( \(cbf_handle )S
294 177 :M
f279 sf
(handle)S
f209 sf
(, const char *)S
390 177 :M
f279 sf
(categoryname)S
458 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_force_new_category)S
215 225 :M
f209 sf
( creates a new category in the current data block with name)S
90 237 :M
f279 sf
(categoryname)S
158 237 :M
f209 sf
( and makes it the current category. Duplicate category names are allowed.)S
90 261 :M
(Even if a category with this name already exists, a new category of the same name is)S
90 273 :M
(created and becomes the current category. The allows for the creation of unlooped)S
90 285 :M
(tag/value lists drawn from the same category.)S
90 309 :M
f184 sf
(ARGUMENTS)S
90 321 :M
f209 sf
(\312)S
90 333 :M
f279 sf
(handle)S
216 333 :M
f209 sf
(CBF handle.)S
90 345 :M
f279 sf
(categoryname)S
216 345 :M
f209 sf
(The name of the new category.)S
90 369 :M
f184 sf
(RETURN VALUE)S
90 393 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 417 :M
f184 sf
(SEE ALSO)S
90 441 :M
f209 sf
(2.3.5 )S
f184 sf
(cbf_new_datablock)S
90 453 :M
f209 sf
(2.3.6 )S
f184 sf
(cbf_force_new_datablock)S
90 465 :M
f209 sf
(2.3.7 )S
f184 sf
(cbf_new_category)S
90 477 :M
f209 sf
(2.3.9 )S
f184 sf
(cbf_new_column)S
90 489 :M
f209 sf
(2.3.10 )S
f184 sf
(cbf_new_row)S
90 501 :M
f209 sf
(2.3.11 )S
f184 sf
(cbf_insert_row)S
90 513 :M
f209 sf
(2.3.18 )S
f184 sf
(cbf_remove_category)S
endp
%%Page: 24 24
%%BeginPageSetup
initializepage
(yaya; page: 24 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 14)S
90 93 :M
(2.3.9 )S
f184 sf
(cbf_new_column)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_new_column)S
f209 sf
( \(cbf_handle )S
256 177 :M
f279 sf
(handle)S
f209 sf
(, const char *)S
352 177 :M
f279 sf
(columnname)S
414 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_new_column)S
177 225 :M
f209 sf
( creates a new column in the current category with name )S
f279 sf
(columnname)S
90 237 :M
f209 sf
(and makes it the current column.)S
90 261 :M
(If a column with this name already exists, the existing column becomes the current)S
90 273 :M
(category.)S
90 297 :M
f184 sf
(ARGUMENTS)S
90 309 :M
f279 sf
(handle)S
216 309 :M
f209 sf
(CBF handle.)S
90 321 :M
f279 sf
(columnname)S
216 321 :M
f209 sf
(The name of the new column.)S
90 357 :M
f184 sf
(RETURN VALUE)S
90 381 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 405 :M
f184 sf
(SEE ALSO)S
90 429 :M
f209 sf
(2.3.5 )S
f184 sf
(cbf_new_datablock)S
90 441 :M
f209 sf
(2.3.6 )S
f184 sf
(cbf_force_new_datablock)S
90 453 :M
f209 sf
(2.3.7 )S
f184 sf
(cbf_new_category)S
90 465 :M
f209 sf
(2.3.8 )S
f184 sf
(cbf_force_new_category)S
90 477 :M
f209 sf
(2.3.10 )S
f184 sf
(cbf_new_row)S
90 489 :M
f209 sf
(2.3.11 )S
f184 sf
(cbf_insert_row)S
90 501 :M
f209 sf
(2.3.19 )S
f184 sf
(cbf_remove_column)S
endp
%%Page: 25 25
%%BeginPageSetup
initializepage
(yaya; page: 25 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 15)S
90 93 :M
(2.3.10 )S
f184 sf
(cbf_new_row)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_new_row)S
f209 sf
( \(cbf_handle )S
238 177 :M
f279 sf
(handle)S
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_new_row)S
159 225 :M
f209 sf
( adds a new row to the current category and makes it the current row.)S
90 249 :M
f184 sf
(ARGUMENTS)S
90 261 :M
f209 sf
(\312)S
90 273 :M
f279 sf
(handle)S
216 273 :M
f209 sf
(CBF handle.)S
90 309 :M
f184 sf
(RETURN VALUE)S
90 333 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 357 :M
f184 sf
(SEE ALSO)S
90 381 :M
f209 sf
(2.3.5 )S
f184 sf
(cbf_new_datablock)S
90 393 :M
f209 sf
(2.3.6 )S
f184 sf
(cbf_force_new_datablock)S
90 405 :M
f209 sf
(2.3.7 )S
f184 sf
(cbf_new_category)S
90 417 :M
f209 sf
(2.3.8 )S
f184 sf
(cbf_force_new_category)S
90 429 :M
f209 sf
(2.3.9 )S
f184 sf
(cbf_new_column)S
90 441 :M
f209 sf
(2.3.11 )S
f184 sf
(cbf_insert_row)S
90 453 :M
f209 sf
(2.3.12 )S
f184 sf
(cbf_delete_row)S
90 465 :M
f209 sf
(2.3.20 )S
f184 sf
(cbf_remove_row)S
endp
%%Page: 26 26
%%BeginPageSetup
initializepage
(yaya; page: 26 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 16)S
90 93 :M
(2.3.11 )S
f184 sf
(cbf_insert_row)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_insert_row)S
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
279 177 :M
f209 sf
(, unsigned int )S
347 177 :M
f279 sf
(rownumber)S
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_insert_row)S
f209 sf
( adds a new row to the current category. The new row is inserted as row)S
90 237 :M
f279 sf
(rownumber)S
f209 sf
( and existing rows starting from )S
301 237 :M
f279 sf
(rownumber)S
357 237 :M
f209 sf
( are moved up by 1. The new row)S
90 249 :M
(becomes the current row.)S
90 273 :M
(If the category has fewer than )S
236 273 :M
f279 sf
(rownumber)S
f209 sf
( rows, the function returns CBF_NOTFOUND.)S
90 297 :M
(The row numbers start from 0.)S
90 321 :M
f184 sf
(ARGUMENTS)S
90 333 :M
f209 sf
(\312)S
90 345 :M
f279 sf
(handle)S
216 345 :M
f209 sf
(CBF handle.)S
90 357 :M
f279 sf
(rownumber)S
216 357 :M
f209 sf
(The row number of the new row.)S
90 393 :M
f184 sf
(RETURN VALUE)S
90 417 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 441 :M
f184 sf
(SEE ALSO)S
90 465 :M
f209 sf
(2.3.5 )S
f184 sf
(cbf_new_datablock)S
90 477 :M
f209 sf
(2.3.6 )S
f184 sf
(cbf_force_new_datablock)S
90 489 :M
f209 sf
(2.3.7 )S
f184 sf
(cbf_new_category)S
90 501 :M
f209 sf
(2.3.8 )S
f184 sf
(cbf_force_new_category)S
90 513 :M
f209 sf
(2.3.9 )S
f184 sf
(cbf_new_column)S
90 525 :M
f209 sf
(2.3.10 )S
f184 sf
(cbf_new_row)S
90 537 :M
f209 sf
(2.3.12 )S
f184 sf
(cbf_delete_row)S
90 549 :M
f209 sf
(2.3.20 )S
f184 sf
(cbf_remove_row)S
endp
%%Page: 27 27
%%BeginPageSetup
initializepage
(yaya; page: 27 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 17)S
90 93 :M
(2.3.12 )S
f184 sf
(cbf_delete_row)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_delete_row)S
184 177 :M
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
280 177 :M
f209 sf
(, unsigned int )S
348 177 :M
f279 sf
(rownumber)S
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_delete_row)S
168 225 :M
f209 sf
( deletes a row from the current category. Rows starting from )S
f279 sf
(rownumber)S
90 237 :M
f209 sf
(+1 are moved down by 1. If the current row was higher than )S
382 237 :M
f279 sf
(rownumber)S
f209 sf
(, or if the current)S
90 249 :M
(row is the last row, it will also move down by 1.)S
90 273 :M
(The row numbers start from 0.)S
90 297 :M
f184 sf
(ARGUMENTS)S
90 309 :M
f209 sf
(\312)S
90 321 :M
f279 sf
(handle)S
216 321 :M
f209 sf
(CBF handle.)S
90 333 :M
f279 sf
(rownumber)S
216 333 :M
f209 sf
(The number of the row to delete.)S
90 369 :M
f184 sf
(RETURN VALUE)S
90 393 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 417 :M
f184 sf
(SEE ALSO)S
90 441 :M
f209 sf
(2.3.10 )S
f184 sf
(cbf_new_row)S
90 453 :M
f209 sf
(2.3.11 )S
f184 sf
(cbf_insert_row)S
90 465 :M
f209 sf
(2.3.17 )S
f184 sf
(cbf_remove_datablock)S
90 477 :M
f209 sf
(2.3.18 )S
f184 sf
(cbf_remove_category)S
90 489 :M
f209 sf
(2.3.19 )S
f184 sf
(cbf_remove_column)S
90 501 :M
f209 sf
(2.3.20 )S
f184 sf
(cbf_remove_row)S
endp
%%Page: 28 28
%%BeginPageSetup
initializepage
(yaya; page: 28 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 18)S
90 93 :M
(2.3.13 )S
f184 sf
(cbf_set_datablockname)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_set_datablockname)S
f209 sf
( \(cbf_handle )S
290 177 :M
f279 sf
(handle)S
f209 sf
(, const char *)S
386 177 :M
f279 sf
(datablockname)S
460 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_set_datablockname)S
211 225 :M
f209 sf
( changes the name of the current data block to )S
435 225 :M
f279 sf
(datablockname)S
f209 sf
(.)S
90 249 :M
(If a data block with this name already exists \(comparison is case-insensitive\), the function)S
90 261 :M
(returns CBF_IDENTICAL.)S
90 285 :M
f184 sf
(ARGUMENTS)S
90 297 :M
f279 sf
(handle)S
216 297 :M
f209 sf
(CBF handle.)S
90 309 :M
f279 sf
(datablockname)S
216 309 :M
f209 sf
(The new data block name.)S
90 345 :M
f184 sf
(RETURN VALUE)S
90 369 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 393 :M
f184 sf
(SEE ALSO)S
90 417 :M
f209 sf
(2.3.5 )S
f184 sf
(cbf_new_datablock)S
90 429 :M
f209 sf
(2.3.14 )S
f184 sf
(cbf_reset_datablocks)S
90 441 :M
f209 sf
(2.3.15 )S
f184 sf
(cbf_reset_datablock)S
90 453 :M
f209 sf
(2.3.17 )S
f184 sf
(cbf_remove_datablock)S
90 465 :M
f209 sf
(2.3.42 )S
f184 sf
(cbf_datablock_name)S
endp
%%Page: 29 29
%%BeginPageSetup
initializepage
(yaya; page: 29 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 19)S
90 93 :M
(2.3.14 )S
f184 sf
(cbf_reset_datablocks)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_reset_datablocks)S
214 177 :M
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
310 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_reset_datablocks)S
198 225 :M
f209 sf
( deletes all categories from all data blocks.)S
90 249 :M
(The current data block does not change.)S
90 273 :M
f184 sf
(ARGUMENTS)S
90 297 :M
f279 sf
(handle)S
216 297 :M
f209 sf
(CBF handle.)S
90 333 :M
f184 sf
(RETURN VALUE)S
90 357 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 381 :M
f184 sf
(SEE ALSO)S
90 405 :M
f209 sf
(2.3.15 )S
f184 sf
(cbf_reset_datablock)S
90 417 :M
f209 sf
(2.3.18 )S
f184 sf
(cbf_remove_category)S
endp
%%Page: 30 30
%%BeginPageSetup
initializepage
(yaya; page: 30 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 20)S
90 93 :M
(2.3.15 )S
f184 sf
(cbf_reset_datablock)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_reset_datablock)S
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
305 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_reset_datablock)S
f209 sf
( deletes all categories from the current data block.)S
90 249 :M
f184 sf
(ARGUMENTS)S
90 273 :M
f279 sf
(handle)S
216 273 :M
f209 sf
(CBF handle.)S
90 309 :M
f184 sf
(RETURN VALUE)S
90 333 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 357 :M
f184 sf
(SEE ALSO)S
90 381 :M
f209 sf
(2.3.14 )S
f184 sf
(cbf_reset_datablocks)S
90 393 :M
f209 sf
(2.3.18 )S
f184 sf
(cbf_remove_category)S
endp
%%Page: 31 31
%%BeginPageSetup
initializepage
(yaya; page: 31 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 21)S
90 93 :M
(2.3.16 )S
f184 sf
(cbf_reset_category)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_reset_category)S
f209 sf
( \(cbf_handle )S
266 177 :M
f279 sf
(handle)S
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_reset_category)S
187 225 :M
f209 sf
( deletes all columns and rows from current category.)S
90 249 :M
f184 sf
(ARGUMENTS)S
90 273 :M
f279 sf
(handle)S
216 273 :M
f209 sf
(CBF handle.)S
90 309 :M
f184 sf
(RETURN VALUE)S
90 333 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 357 :M
f184 sf
(SEE ALSO)S
90 381 :M
f209 sf
(2.3.16 )S
f184 sf
(cbf_reset_category)S
90 393 :M
f209 sf
(2.3.19 )S
f184 sf
(cbf_remove_column)S
90 405 :M
f209 sf
(2.3.20 )S
f184 sf
(cbf_remove_row)S
endp
%%Page: 32 32
%%BeginPageSetup
initializepage
(yaya; page: 32 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 22)S
90 93 :M
(2.3.17 )S
f184 sf
(cbf_remove_datablock)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_remove_datablock)S
f209 sf
( \(cbf_handle )S
286 177 :M
f279 sf
(handle)S
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_remove_datablock)S
207 225 :M
f209 sf
( deletes the current data block.)S
90 249 :M
(The current data block becomes undefined.)S
90 273 :M
f184 sf
(ARGUMENTS)S
90 297 :M
f279 sf
(handle)S
216 297 :M
f209 sf
(CBF handle.)S
90 333 :M
f184 sf
(RETURN VALUE)S
90 357 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 381 :M
f184 sf
(SEE ALSO)S
90 405 :M
f209 sf
(2.3.5 )S
f184 sf
(cbf_new_datablock)S
90 417 :M
f209 sf
(2.3.6 )S
f184 sf
(cbf_force_new_datablock)S
90 429 :M
f209 sf
(2.3.18 )S
f184 sf
(cbf_remove_category)S
90 441 :M
f209 sf
(2.3.19 )S
f184 sf
(cbf_remove_column)S
90 453 :M
f209 sf
(2.3.20 )S
f184 sf
(cbf_remove_row)S
endp
%%Page: 33 33
%%BeginPageSetup
initializepage
(yaya; page: 33 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 23)S
90 93 :M
(2.3.18 )S
f184 sf
(cbf_remove_category)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_remove_category)S
216 177 :M
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
312 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_remove_category)S
200 225 :M
f209 sf
( deletes the current category.)S
90 249 :M
(The current category becomes undefined.)S
90 273 :M
f184 sf
(ARGUMENTS)S
90 297 :M
f279 sf
(handle)S
216 297 :M
f209 sf
(CBF handle.)S
90 321 :M
f184 sf
(RETURN VALUE)S
90 345 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 369 :M
f184 sf
(SEE ALSO)S
90 393 :M
f209 sf
(2.3.7 )S
f184 sf
(cbf_new_category)S
90 405 :M
f209 sf
(2.3.8 )S
f184 sf
(cbf_force_new_category)S
90 417 :M
f209 sf
(2.3.17 )S
f184 sf
(cbf_remove_datablock)S
90 429 :M
f209 sf
(2.3.19 )S
f184 sf
(cbf_remove_column)S
90 441 :M
f209 sf
(2.3.20 )S
f184 sf
(cbf_remove_row)S
endp
%%Page: 34 34
%%BeginPageSetup
initializepage
(yaya; page: 34 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 24)S
90 93 :M
(2.3.19 )S
f184 sf
(cbf_remove_column)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_remove_column)S
210 177 :M
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
306 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_remove_column)S
194 225 :M
f209 sf
( deletes the current column.)S
90 249 :M
(The current column becomes undefined.)S
90 273 :M
f184 sf
(ARGUMENTS)S
90 285 :M
f209 sf
(\312\312)S
90 297 :M
f279 sf
(handle)S
216 297 :M
f209 sf
(CBF handle.)S
90 321 :M
f184 sf
(RETURN VALUE)S
90 345 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 369 :M
f184 sf
(SEE ALSO)S
90 393 :M
f209 sf
(2.3.9 )S
f184 sf
(cbf_new_column)S
90 405 :M
f209 sf
(2.3.17 )S
f184 sf
(cbf_remove_datablock)S
90 417 :M
f209 sf
(2.3.18 )S
f184 sf
(cbf_remove_category)S
90 429 :M
f209 sf
(2.3.20 )S
f184 sf
(cbf_remove_row)S
endp
%%Page: 35 35
%%BeginPageSetup
initializepage
(yaya; page: 35 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 25)S
90 93 :M
(2.3.20 )S
f184 sf
(cbf_remove_row)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_remove_row)S
192 177 :M
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
288 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_remove_row)S
176 225 :M
f209 sf
( deletes the current row in the current category.)S
90 249 :M
(If the current row was the last row, it will move down by 1, otherwise, it will remain the)S
90 261 :M
(same.)S
90 285 :M
f184 sf
(ARGUMENTS)S
90 309 :M
f279 sf
(handle)S
216 309 :M
f209 sf
(CBF handle.)S
90 333 :M
f184 sf
(RETURN VALUE)S
90 357 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 381 :M
f184 sf
(SEE ALSO)S
90 405 :M
f209 sf
(2.3.10 )S
f184 sf
(cbf_new_row)S
90 417 :M
f209 sf
(2.3.11 )S
f184 sf
(cbf_insert_row)S
90 429 :M
f209 sf
(2.3.17 )S
f184 sf
(cbf_remove_datablock)S
90 441 :M
f209 sf
(2.3.18 )S
f184 sf
(cbf_remove_category)S
90 453 :M
f209 sf
(2.3.19 )S
f184 sf
(cbf_remove_column)S
90 465 :M
f209 sf
(2.3.12 )S
f184 sf
(cbf_delete_row)S
endp
%%Page: 36 36
%%BeginPageSetup
initializepage
(yaya; page: 36 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 26)S
90 93 :M
(2.3.21 )S
f184 sf
(cbf_rewind_datablock)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_rewind_datablock)S
f209 sf
( \(cbf_handle )S
284 177 :M
f279 sf
(handle)S
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_rewind_datablock)S
205 225 :M
f209 sf
( makes the first data block the current data block.)S
90 249 :M
(If there are no data blocks, the function returns CBF_NOTFOUND.)S
90 273 :M
(The current category becomes undefined.)S
90 297 :M
f184 sf
(ARGUMENTS)S
90 321 :M
f279 sf
(handle)S
216 321 :M
f209 sf
(CBF handle.)S
90 345 :M
f184 sf
(RETURN VALUE)S
90 369 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 393 :M
f184 sf
(SEE ALSO)S
90 417 :M
f209 sf
(2.3.22 )S
f184 sf
(cbf_rewind_category)S
90 429 :M
f209 sf
(2.3.19 )S
f184 sf
(cbf_rewind_column)S
90 441 :M
f209 sf
(2.3.24 )S
f184 sf
(cbf_rewind_row)S
90 453 :M
f209 sf
(2.3.25 )S
f184 sf
(cbf_next_datablock)S
endp
%%Page: 37 37
%%BeginPageSetup
initializepage
(yaya; page: 37 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 27)S
90 93 :M
(2.3.22 )S
f184 sf
(cbf_rewind_category)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_rewind_category)S
214 177 :M
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
310 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_rewind_category)S
198 225 :M
f209 sf
( makes the first category in the current data block the current)S
90 237 :M
(category.)S
90 261 :M
(If there are no categories, the function returns CBF_NOTFOUND.)S
90 285 :M
(The current column and row become undefined.)S
90 309 :M
f184 sf
(ARGUMENTS)S
90 333 :M
f279 sf
(handle)S
216 333 :M
f209 sf
(CBF handle.)S
90 357 :M
f184 sf
(RETURN VALUE)S
90 381 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 405 :M
f184 sf
(SEE ALSO)S
90 429 :M
f209 sf
(2.3.21 )S
f184 sf
(cbf_rewind_datablock)S
90 441 :M
f209 sf
(2.3.19 )S
f184 sf
(cbf_rewind_column)S
90 453 :M
f209 sf
(2.3.24 )S
f184 sf
(cbf_rewind_row)S
90 465 :M
f209 sf
(2.3.26 )S
f184 sf
(cbf_next_category)S
endp
%%Page: 38 38
%%BeginPageSetup
initializepage
(yaya; page: 38 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 28)S
90 93 :M
(2.3.23 )S
f184 sf
(cbf_rewind_column)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_rewind_column)S
208 177 :M
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
304 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_rewind_column)S
192 225 :M
f209 sf
( makes the first column in the current category the current column.)S
90 249 :M
(If there are no columns, the function returns CBF_NOTFOUND.)S
90 273 :M
(The current row is not affected.)S
90 297 :M
f184 sf
(ARGUMENTS)S
90 321 :M
f279 sf
(handle)S
216 321 :M
f209 sf
(CBF handle.)S
90 345 :M
f184 sf
(RETURN VALUE)S
90 369 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 393 :M
f184 sf
(SEE ALSO)S
90 417 :M
f209 sf
(2.3.21 )S
f184 sf
(cbf_rewind_datablock)S
90 429 :M
f209 sf
(2.3.22 )S
f184 sf
(cbf_rewind_category)S
90 441 :M
f209 sf
(2.3.24 )S
f184 sf
(cbf_rewind_row)S
90 453 :M
f209 sf
(2.3.27 )S
f184 sf
(cbf_next_column)S
endp
%%Page: 39 39
%%BeginPageSetup
initializepage
(yaya; page: 39 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 29)S
90 93 :M
(2.3.24 )S
f184 sf
(cbf_rewind_row)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_rewind_row)S
190 177 :M
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
286 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_rewind_row)S
174 225 :M
f209 sf
( makes the first row in the current category the current row.)S
90 249 :M
(If there are no rows, the function returns CBF_NOTFOUND.)S
90 273 :M
(The current column is not affected.)S
90 297 :M
f184 sf
(ARGUMENTS)S
90 309 :M
f209 sf
(\312)S
90 321 :M
f279 sf
(handle)S
216 321 :M
f209 sf
(CBF handle.)S
90 345 :M
f184 sf
(RETURN VALUE)S
90 369 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 393 :M
f184 sf
(SEE ALSO)S
90 417 :M
f209 sf
(2.3.21 )S
f184 sf
(cbf_rewind_datablock)S
90 429 :M
f209 sf
(2.3.22 )S
f184 sf
(cbf_rewind_category)S
90 441 :M
f209 sf
(2.3.19 )S
f184 sf
(cbf_rewind_column)S
90 453 :M
f209 sf
(2.3.28 )S
f184 sf
(cbf_next_row)S
endp
%%Page: 40 40
%%BeginPageSetup
initializepage
(yaya; page: 40 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 30)S
90 93 :M
(2.3.25 )S
f184 sf
(cbf_next_datablock)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_next_datablock)S
f209 sf
( \(cbf_handle )S
270 177 :M
f279 sf
(handle)S
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_next_datablock)S
191 225 :M
f209 sf
( makes the data block following the current data block the current)S
90 237 :M
(data block.)S
90 261 :M
(If there are no more data blocks, the function returns CBF_NOTFOUND.)S
90 285 :M
(The current category becomes undefined.)S
90 309 :M
f184 sf
(ARGUMENTS)S
90 333 :M
f279 sf
(handle)S
216 333 :M
f209 sf
(CBF handle.)S
90 357 :M
f184 sf
(RETURN VALUE)S
90 381 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 405 :M
f184 sf
(SEE ALSO)S
90 429 :M
f209 sf
(2.3.21 )S
f184 sf
(cbf_rewind_datablock)S
90 441 :M
f209 sf
(2.3.26 )S
f184 sf
(cbf_next_category)S
90 453 :M
f209 sf
(2.3.27 )S
f184 sf
(cbf_next_column)S
90 465 :M
f209 sf
(2.3.28 )S
f184 sf
(cbf_next_row)S
endp
%%Page: 41 41
%%BeginPageSetup
initializepage
(yaya; page: 41 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 31)S
90 93 :M
(2.3.26 )S
f184 sf
(cbf_next_category)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_next_category)S
200 177 :M
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
296 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_next_category)S
184 225 :M
f209 sf
( makes the category following the current category in the current data)S
90 237 :M
(block the current category.)S
90 261 :M
(If there are no more categories, the function returns CBF_NOTFOUND.)S
90 285 :M
(The current column and row become undefined.)S
90 309 :M
f184 sf
(ARGUMENTS)S
90 333 :M
f279 sf
(handle)S
216 333 :M
f209 sf
(CBF handle.)S
90 357 :M
f184 sf
(RETURN VALUE)S
90 381 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 405 :M
f184 sf
(SEE ALSO)S
90 429 :M
f209 sf
(2.3.22 )S
f184 sf
(cbf_rewind_category)S
90 441 :M
f209 sf
(2.3.25 )S
f184 sf
(cbf_next_datablock)S
90 453 :M
f209 sf
(2.3.27 )S
f184 sf
(cbf_next_column)S
90 465 :M
f209 sf
(2.3.27 )S
f184 sf
(cbf_next_row)S
endp
%%Page: 42 42
%%BeginPageSetup
initializepage
(yaya; page: 42 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 32)S
90 93 :M
(2.3.27 )S
f184 sf
(cbf_next_column)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_next_column)S
194 177 :M
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
290 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_next_column)S
178 225 :M
f209 sf
( makes the column following the current column in the current)S
90 237 :M
(category the current column.)S
90 261 :M
(If there are no more columns, the function returns CBF_NOTFOUND.)S
90 285 :M
(The current row is not affected.)S
90 309 :M
f184 sf
(ARGUMENTS)S
90 333 :M
f279 sf
(handle)S
216 333 :M
f209 sf
(CBF handle.)S
90 357 :M
f184 sf
(RETURN VALUE)S
90 381 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 405 :M
f184 sf
(SEE ALSO)S
90 429 :M
f209 sf
(2.3.19 )S
f184 sf
(cbf_rewind_column)S
90 441 :M
f209 sf
(2.3.25 )S
f184 sf
(cbf_next_datablock)S
90 453 :M
f209 sf
(2.3.26 )S
f184 sf
(cbf_next_category)S
90 465 :M
f209 sf
(2.3.28 )S
f184 sf
(cbf_next_row)S
endp
%%Page: 43 43
%%BeginPageSetup
initializepage
(yaya; page: 43 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 33)S
90 93 :M
(2.3.28 )S
f184 sf
(cbf_next_row)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_next_row)S
176 177 :M
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
272 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_next_row)S
160 225 :M
f209 sf
( makes the row following the current row in the current category the)S
90 237 :M
(current row.)S
90 261 :M
(If there are no more rows, the function returns CBF_NOTFOUND.)S
90 285 :M
(The current column is not affected.)S
90 309 :M
f184 sf
(ARGUMENTS)S
90 333 :M
f279 sf
(handle)S
216 333 :M
f209 sf
(CBF handle.)S
90 357 :M
f184 sf
(RETURN VALUE)S
90 381 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 405 :M
f184 sf
(SEE ALSO)S
90 429 :M
f209 sf
(2.3.24 )S
f184 sf
(cbf_rewind_row)S
90 441 :M
f209 sf
(2.3.25 )S
f184 sf
(cbf_next_datablock)S
90 453 :M
f209 sf
(2.3.26 )S
f184 sf
(cbf_next_category)S
90 465 :M
f209 sf
(2.3.27 )S
f184 sf
(cbf_next_column)S
endp
%%Page: 44 44
%%BeginPageSetup
initializepage
(yaya; page: 44 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 34)S
90 93 :M
(2.3.29 )S
f184 sf
(cbf_find_datablock)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_find_datablock)S
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
301 177 :M
f209 sf
(, const char *)S
365 177 :M
f279 sf
(datablockname)S
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_find_datablock)S
f209 sf
( makes the data block with name )S
350 225 :M
f279 sf
(datablockname)S
f209 sf
( the current data)S
90 237 :M
(block.)S
90 261 :M
(The comparison is case-insensitive.)S
90 285 :M
(If the data block does not exist, the function returns CBF_NOTFOUND.)S
90 309 :M
(The current category becomes undefined.)S
90 333 :M
f184 sf
(ARGUMENTS)S
90 345 :M
f279 sf
(handle)S
216 345 :M
f209 sf
(CBF handle.)S
90 357 :M
f279 sf
(datablockname)S
216 357 :M
f209 sf
(The name of the data block to find.)S
90 393 :M
f184 sf
(RETURN VALUE)S
90 417 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 441 :M
f184 sf
(SEE ALSO)S
90 465 :M
f209 sf
(2.3.21 )S
f184 sf
(cbf_rewind_datablock)S
90 477 :M
f209 sf
(2.3.25 )S
f184 sf
(cbf_next_datablock)S
90 489 :M
f209 sf
(2.3.30 )S
f184 sf
(cbf_find_category)S
90 501 :M
f209 sf
(2.3.31 )S
f184 sf
(cbf_find_column)S
90 513 :M
f209 sf
(2.3.32 )S
f184 sf
(cbf_find_row)S
90 525 :M
f209 sf
(2.3.42 )S
f184 sf
(cbf_datablock_name)S
endp
%%Page: 45 45
%%BeginPageSetup
initializepage
(yaya; page: 45 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 35)S
90 93 :M
(2.3.30 )S
f184 sf
(cbf_find_category)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_find_category)S
f209 sf
( \(cbf_handle )S
262 177 :M
f279 sf
(handle)S
f209 sf
(, const char *)S
358 177 :M
f279 sf
(categoryname)S
426 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_find_category)S
183 225 :M
f209 sf
( makes the category in the current data block with name)S
90 237 :M
f279 sf
(categoryname)S
158 237 :M
f209 sf
( the current category.)S
90 261 :M
(The comparison is case-insensitive.)S
90 285 :M
(If the category does not exist, the function returns CBF_NOTFOUND.)S
90 309 :M
(The current column and row become undefined.)S
90 333 :M
f184 sf
(ARGUMENTS)S
90 345 :M
f279 sf
(handle)S
216 345 :M
f209 sf
(CBF handle.)S
90 357 :M
f279 sf
(categoryname)S
216 357 :M
f209 sf
(The name of the category to find.)S
90 393 :M
f184 sf
(RETURN VALUE)S
90 417 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 441 :M
f184 sf
(SEE ALSO)S
90 465 :M
f209 sf
(2.3.22 )S
f184 sf
(cbf_rewind_category)S
90 477 :M
f209 sf
(2.3.26 )S
f184 sf
(cbf_next_category)S
90 489 :M
f209 sf
(2.3.29 )S
f184 sf
(cbf_find_datablock)S
90 501 :M
f209 sf
(2.3.31 )S
f184 sf
(cbf_find_column)S
90 513 :M
f209 sf
(2.3.32 )S
f184 sf
(cbf_find_row)S
90 525 :M
f209 sf
(2.3.43 )S
f184 sf
(cbf_category_name)S
endp
%%Page: 46 46
%%BeginPageSetup
initializepage
(yaya; page: 46 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 36)S
90 93 :M
(2.3.31 )S
f184 sf
(cbf_find_column)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_find_column)S
f209 sf
( \(cbf_handle )S
256 177 :M
f279 sf
(handle)S
f209 sf
(, const char *)S
352 177 :M
f279 sf
(columnname)S
414 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_find_column)S
177 225 :M
f209 sf
( makes the columns in the current category with name )S
f279 sf
(columnname)S
501 225 :M
f209 sf
( the)S
90 237 :M
(current column.)S
90 261 :M
(The comparison is case-insensitive.)S
90 285 :M
(If the column does not exist, the function returns CBF_NOTFOUND.)S
90 309 :M
(The current row is not affected.)S
90 333 :M
f184 sf
(ARGUMENTS)S
90 357 :M
f279 sf
(handle)S
216 357 :M
f209 sf
(CBF handle.)S
90 369 :M
f279 sf
(columnname)S
216 369 :M
f209 sf
(The name of column to find.)S
90 405 :M
f184 sf
(RETURN VALUE)S
90 429 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 453 :M
f184 sf
(SEE ALSO)S
90 477 :M
f209 sf
(2.3.19 )S
f184 sf
(cbf_rewind_column)S
90 489 :M
f209 sf
(2.3.27 )S
f184 sf
(cbf_next_column)S
90 501 :M
f209 sf
(2.3.29 )S
f184 sf
(cbf_find_datablock)S
90 513 :M
f209 sf
(2.3.30 )S
f184 sf
(cbf_find_category)S
90 525 :M
f209 sf
(2.3.32 )S
f184 sf
(cbf_find_row)S
90 537 :M
f209 sf
(2.3.44 )S
f184 sf
(cbf_column_name)S
endp
%%Page: 47 47
%%BeginPageSetup
initializepage
(yaya; page: 47 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 37)S
90 93 :M
(2.3.32 )S
f184 sf
(cbf_find_row)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_find_row)S
f209 sf
( \(cbf_handle )S
238 177 :M
f279 sf
(handle)S
f209 sf
(, const char *)S
334 177 :M
f279 sf
(value)S
360 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_find_row)S
159 225 :M
f209 sf
( makes the first row in the current column with value )S
f279 sf
(value)S
442 225 :M
f209 sf
( the current row.)S
90 249 :M
(The comparison is case-sensitive.)S
90 273 :M
(If a matching row does not exist, the function returns CBF_NOTFOUND.)S
90 297 :M
(The current column is not affected.)S
90 321 :M
f184 sf
(ARGUMENTS)S
90 333 :M
f209 sf
(\312)S
90 345 :M
f279 sf
(handle)S
216 345 :M
f209 sf
(CBF handle.)S
90 357 :M
f279 sf
(value)S
216 357 :M
f209 sf
(The value of the row to find.)S
90 393 :M
f184 sf
(RETURN VALUE)S
90 417 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 441 :M
f184 sf
(SEE ALSO)S
90 465 :M
f209 sf
(2.3.24 )S
f184 sf
(cbf_rewind_row)S
90 477 :M
f209 sf
(2.3.28 )S
f184 sf
(cbf_next_row)S
90 489 :M
f209 sf
(2.3.29 )S
f184 sf
(cbf_find_datablock)S
90 501 :M
f209 sf
(2.3.30 )S
f184 sf
(cbf_find_category)S
90 513 :M
f209 sf
(2.3.31 )S
f184 sf
(cbf_find_column)S
90 525 :M
f209 sf
(2.3.33 )S
f184 sf
(cbf_find_nextrow)S
90 537 :M
f209 sf
(2.3.46 )S
f184 sf
(cbf_get_value)S
endp
%%Page: 48 48
%%BeginPageSetup
initializepage
(yaya; page: 48 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 38)S
90 81 :M
(2.3.33 )S
f184 sf
(cbf_find_nextrow)S
90 117 :M
(PROTOTYPE)S
90 141 :M
f209 sf
(#include "cbf.h")S
90 165 :M
(int )S
106 165 :M
f184 sf
(cbf_find_nextrow)S
f209 sf
( \(cbf_handle )S
260 165 :M
f279 sf
(handle)S
f209 sf
(, const char *)S
356 165 :M
f279 sf
(value)S
382 165 :M
f209 sf
(\);)S
90 189 :M
f184 sf
(DESCRIPTION)S
90 213 :M
(cbf_find_nextrow)S
181 213 :M
f209 sf
( makes the makes the next row in the current column with value )S
f279 sf
(value)S
90 225 :M
f209 sf
(the current row. The search starts from the row following the last row found with)S
90 237 :M
f184 sf
(cbf_find_row)S
159 237 :M
f209 sf
( or )S
175 237 :M
f184 sf
(cbf_find_nextrow)S
f209 sf
(, or from the current row if the current row was)S
90 249 :M
(defined using any other function.)S
90 273 :M
(The comparison is case-sensitive.)S
90 297 :M
(If no more matching rows exist, the function returns CBF_NOTFOUND.)S
90 321 :M
(The current column is not affected.)S
90 345 :M
f184 sf
(ARGUMENTS)S
90 357 :M
f209 sf
(\312)S
90 369 :M
f279 sf
(handle)S
216 369 :M
f209 sf
(CBF handle.)S
90 381 :M
f279 sf
(value)S
216 381 :M
f209 sf
(the value to search for.)S
90 417 :M
f184 sf
(RETURN VALUE)S
90 441 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 465 :M
f184 sf
(SEE ALSO)S
90 489 :M
f209 sf
(2.3.24 )S
f184 sf
(cbf_rewind_row)S
90 501 :M
f209 sf
(2.3.28 )S
f184 sf
(cbf_next_row)S
90 513 :M
f209 sf
(2.3.29 )S
f184 sf
(cbf_find_datablock)S
90 525 :M
f209 sf
(2.3.30 )S
f184 sf
(cbf_find_category)S
90 537 :M
f209 sf
(2.3.31 )S
f184 sf
(cbf_find_column)S
90 549 :M
f209 sf
(2.3.32 )S
f184 sf
(cbf_find_row)S
90 561 :M
f209 sf
(2.3.46 )S
f184 sf
(cbf_get_value)S
endp
%%Page: 49 49
%%BeginPageSetup
initializepage
(yaya; page: 49 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 39)S
90 93 :M
(2.3.34 )S
f184 sf
(cbf_count_datablocks)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_count_datablocks)S
218 177 :M
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
314 177 :M
f209 sf
(, unsigned int *)S
388 177 :M
f279 sf
(datablocks)S
440 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_count_datablocks)S
202 225 :M
f209 sf
( puts the number of data blocks in *)S
374 225 :M
f279 sf
(datablocks)S
426 225 :M
f209 sf
( .)S
90 249 :M
f184 sf
(ARGUMENTS)S
90 261 :M
f209 sf
(\312)S
90 273 :M
f279 sf
(handle)S
216 273 :M
f209 sf
(CBF handle.)S
90 285 :M
f279 sf
(datablocks)S
216 285 :M
f209 sf
(Pointer to the destination data block count.)S
90 321 :M
f184 sf
(RETURN VALUE)S
90 345 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 369 :M
f184 sf
(SEE ALSO)S
90 393 :M
f209 sf
(2.3.35 )S
f184 sf
(cbf_count_categories)S
90 405 :M
f209 sf
(2.3.36 )S
f184 sf
(cbf_count_columns)S
90 417 :M
f209 sf
(2.3.37 )S
f184 sf
(cbf_count_rows)S
90 429 :M
f209 sf
(2.3.38 )S
f184 sf
(cbf_select_datablock)S
endp
%%Page: 50 50
%%BeginPageSetup
initializepage
(yaya; page: 50 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 40)S
90 93 :M
(2.3.35 )S
f184 sf
(cbf_count_categories)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_count_categories)S
214 177 :M
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
310 177 :M
f209 sf
(, unsigned int *)S
384 177 :M
f279 sf
(categories)S
434 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_count_categories)S
198 225 :M
f209 sf
( puts the number of categories in the current data block in)S
90 237 :M
(*)S
f279 sf
(categories)S
146 237 :M
f209 sf
(.)S
90 261 :M
f184 sf
(ARGUMENTS)S
90 273 :M
f209 sf
(\312\312)S
90 285 :M
f279 sf
(handle)S
216 285 :M
f209 sf
(CBF handle.)S
90 297 :M
f279 sf
(categories)S
216 297 :M
f209 sf
(Pointer to the destination category count.)S
90 333 :M
f184 sf
(RETURN VALUE)S
90 357 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 381 :M
f184 sf
(SEE ALSO)S
90 405 :M
f209 sf
(2.3.34 )S
f184 sf
(cbf_count_datablocks)S
90 417 :M
f209 sf
(2.3.36 )S
f184 sf
(cbf_count_columns)S
90 429 :M
f209 sf
(2.3.37 )S
f184 sf
(cbf_count_rows)S
90 441 :M
f209 sf
(2.3.39 )S
f184 sf
(cbf_select_category)S
endp
%%Page: 51 51
%%BeginPageSetup
initializepage
(yaya; page: 51 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 41)S
90 93 :M
(2.3.36 )S
f184 sf
(cbf_count_columns)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_count_columns)S
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
301 177 :M
f209 sf
(, unsigned int *)S
375 177 :M
f279 sf
(columns)S
415 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_count_columns)S
f209 sf
( puts the number of columns in the current category in)S
90 237 :M
(*)S
f279 sf
(columns)S
136 237 :M
f209 sf
(.)S
90 261 :M
f184 sf
(ARGUMENTS)S
90 285 :M
f279 sf
(handle)S
216 285 :M
f209 sf
(CBF handle.)S
90 297 :M
f279 sf
(columns)S
216 297 :M
f209 sf
(Pointer to the destination column count.)S
90 333 :M
f184 sf
(RETURN VALUE)S
90 357 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 381 :M
f184 sf
(SEE ALSO)S
90 405 :M
f209 sf
(2.3.34 )S
f184 sf
(cbf_count_datablocks)S
90 417 :M
f209 sf
(2.3.35 )S
f184 sf
(cbf_count_categories)S
90 429 :M
f209 sf
(2.3.37 )S
f184 sf
(cbf_count_rows)S
90 441 :M
f209 sf
(2.3.40 )S
f184 sf
(cbf_select_column)S
endp
%%Page: 52 52
%%BeginPageSetup
initializepage
(yaya; page: 52 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 42)S
90 93 :M
(2.3.37 )S
f184 sf
(cbf_count_rows)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_count_rows)S
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
283 177 :M
f209 sf
(, unsigned int *)S
357 177 :M
f279 sf
(rows)S
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_count_rows)S
f209 sf
( puts the number of rows in the current category in *)S
424 225 :M
f279 sf
(rows)S
90 237 :M
f209 sf
( .)S
90 261 :M
f184 sf
(ARGUMENTS)S
90 285 :M
f279 sf
(handle)S
216 285 :M
f209 sf
(CBF handle.)S
90 297 :M
f279 sf
(rows)S
216 297 :M
f209 sf
(Pointer to the destination row count.)S
90 333 :M
f184 sf
(RETURN VALUE)S
90 357 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 381 :M
f184 sf
(SEE ALSO)S
90 405 :M
f209 sf
(2.3.34 )S
f184 sf
(cbf_count_datablocks)S
90 417 :M
f209 sf
(2.3.35 )S
f184 sf
(cbf_count_categories)S
90 429 :M
f209 sf
(2.3.36 )S
f184 sf
(cbf_count_columns)S
90 441 :M
f209 sf
(2.3.41 )S
f184 sf
(cbf_select_row)S
endp
%%Page: 53 53
%%BeginPageSetup
initializepage
(yaya; page: 53 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 43)S
90 93 :M
(2.3.38 )S
f184 sf
(cbf_select_datablock)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_select_datablock)S
f209 sf
( \(cbf_handle )S
276 177 :M
f279 sf
(handle)S
f209 sf
(, unsigned int )S
376 177 :M
f279 sf
(datablock)S
424 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_select_datablock)S
197 225 :M
f209 sf
( selects data block number )S
f279 sf
(datablock)S
f209 sf
( as the current data block.)S
90 249 :M
(The first data block is number 0.)S
90 273 :M
(If the data block does not exist, the function returns CBF_NOTFOUND.)S
90 297 :M
f184 sf
(ARGUMENTS)S
90 321 :M
f279 sf
(handle)S
216 321 :M
f209 sf
(CBF handle.)S
90 333 :M
f279 sf
(datablock)S
216 333 :M
f209 sf
(Number of the data block to select.)S
90 369 :M
f184 sf
(RETURN VALUE)S
90 393 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 417 :M
f184 sf
(SEE ALSO)S
90 441 :M
f209 sf
(2.3.34 )S
f184 sf
(cbf_count_datablocks)S
90 453 :M
f209 sf
(2.3.39 )S
f184 sf
(cbf_select_category)S
90 465 :M
f209 sf
(2.3.40 )S
f184 sf
(cbf_select_column)S
90 477 :M
f209 sf
(2.3.41 )S
f184 sf
(cbf_select_row)S
endp
%%Page: 54 54
%%BeginPageSetup
initializepage
(yaya; page: 54 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 44)S
90 93 :M
(2.3.39 )S
f184 sf
(cbf_select_category)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_select_category)S
206 177 :M
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
302 177 :M
f209 sf
(, unsigned int )S
370 177 :M
f279 sf
(category)S
412 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_select_category)S
190 225 :M
f209 sf
( selects category number )S
312 225 :M
f279 sf
(category)S
354 225 :M
f209 sf
( in the current data block as the)S
90 237 :M
(current category.)S
90 261 :M
(The first category is number 0.)S
90 285 :M
(The current column and row become undefined.)S
90 309 :M
(If the category does not exist, the function returns CBF_NOTFOUND.)S
90 333 :M
f184 sf
(ARGUMENTS)S
90 357 :M
f279 sf
(handle)S
216 357 :M
f209 sf
(CBF handle.)S
90 369 :M
f279 sf
(category)S
216 369 :M
f209 sf
(Number of the category to select.)S
90 405 :M
f184 sf
(RETURN VALUE)S
90 429 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 453 :M
f184 sf
(SEE ALSO)S
90 477 :M
f209 sf
(2.3.35 )S
f184 sf
(cbf_count_categories)S
90 489 :M
f209 sf
(2.3.38 )S
f184 sf
(cbf_select_datablock)S
90 501 :M
f209 sf
(2.3.40 )S
f184 sf
(cbf_select_column)S
90 513 :M
f209 sf
(2.3.41 )S
f184 sf
(cbf_select_row)S
endp
%%Page: 55 55
%%BeginPageSetup
initializepage
(yaya; page: 55 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 45)S
90 93 :M
(2.3.40 )S
f184 sf
(cbf_select_column)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_select_column)S
200 177 :M
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
296 177 :M
f209 sf
(, unsigned int )S
364 177 :M
f279 sf
(column)S
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_select_column)S
184 225 :M
f209 sf
( selects column number )S
301 225 :M
f279 sf
(column)S
f209 sf
( in the current category as the current)S
90 237 :M
(column.)S
90 261 :M
(The first column is number 0.)S
90 285 :M
(The current row is not affected)S
90 309 :M
(If the column does not exist, the function returns CBF_NOTFOUND.)S
90 333 :M
f184 sf
(ARGUMENTS)S
90 357 :M
f279 sf
(handle)S
216 357 :M
f209 sf
(CBF handle.)S
90 369 :M
f279 sf
(column)S
216 369 :M
f209 sf
(Number of the column to select.)S
90 405 :M
f184 sf
(RETURN VALUE)S
90 429 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 453 :M
f184 sf
(SEE ALSO)S
90 477 :M
f209 sf
(2.3.36 )S
f184 sf
(cbf_count_columns)S
90 489 :M
f209 sf
(2.3.38 )S
f184 sf
(cbf_select_datablock)S
90 501 :M
f209 sf
(2.3.39 )S
f184 sf
(cbf_select_category)S
90 513 :M
f209 sf
(2.3.41 )S
f184 sf
(cbf_select_row)S
endp
%%Page: 56 56
%%BeginPageSetup
initializepage
(yaya; page: 56 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 46)S
90 93 :M
(2.3.41 )S
f184 sf
(cbf_select_row)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_select_row)S
182 177 :M
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
278 177 :M
f209 sf
(, unsigned int )S
346 177 :M
f279 sf
(row)S
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_select_row)S
166 225 :M
f209 sf
( selects row number )S
f279 sf
(row)S
284 225 :M
f209 sf
( in the current category as the current row.)S
90 249 :M
(The first row is number 0.)S
90 273 :M
(The current column is not affected)S
90 297 :M
(If the row does not exist, the function returns CBF_NOTFOUND.)S
90 321 :M
f184 sf
(ARGUMENTS)S
90 333 :M
f209 sf
(\312)S
90 345 :M
f279 sf
(handle)S
216 345 :M
f209 sf
(CBF handle.)S
90 357 :M
f279 sf
(row)S
216 357 :M
f209 sf
(Number of the row to select.)S
90 393 :M
f184 sf
(RETURN VALUE)S
90 417 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 441 :M
f184 sf
(SEE ALSO)S
90 465 :M
f209 sf
(2.3.37 )S
f184 sf
(cbf_count_rows)S
90 477 :M
f209 sf
(2.3.38 )S
f184 sf
(cbf_select_datablock)S
90 489 :M
f209 sf
(2.3.39 )S
f184 sf
(cbf_select_category)S
90 501 :M
f209 sf
(2.3.40 )S
f184 sf
(cbf_select_column)S
endp
%%Page: 57 57
%%BeginPageSetup
initializepage
(yaya; page: 57 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 47)S
90 93 :M
(2.3.42 )S
f184 sf
(cbf_datablock_name)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_datablock_name)S
f209 sf
( \(cbf_handle )S
276 177 :M
f279 sf
(handle)S
f209 sf
(, const char **)S
378 177 :M
f279 sf
(datablockname)S
452 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_datablock_name)S
197 225 :M
f209 sf
( sets *)S
227 225 :M
f279 sf
(datablockname)S
f209 sf
( to point to the name of the current data block.)S
90 249 :M
(The data block name will be valid as long as the data block exists and has not been)S
90 261 :M
(renamed.)S
90 285 :M
(The name must not be modified by the program in any way.)S
90 309 :M
f184 sf
(ARGUMENTS)S
90 333 :M
f279 sf
(handle)S
216 333 :M
f209 sf
(CBF handle.)S
90 345 :M
f279 sf
(datablockname)S
216 345 :M
f209 sf
(Pointer to the destination data block name pointer.)S
90 381 :M
f184 sf
(RETURN VALUE)S
90 405 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 429 :M
f184 sf
(SEE ALSO)S
90 453 :M
f209 sf
(2.3.29 )S
f184 sf
(cbf_find_datablock)S
endp
%%Page: 58 58
%%BeginPageSetup
initializepage
(yaya; page: 58 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 48)S
90 93 :M
(2.3.43 )S
f184 sf
(cbf_category_name)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_category_name)S
206 177 :M
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
302 177 :M
f209 sf
(, const char **)S
372 177 :M
f279 sf
(categoryname)S
440 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_category_name)S
190 225 :M
f209 sf
( sets *)S
220 225 :M
f279 sf
(categoryname)S
288 225 :M
f209 sf
( to point to the name of the current category of)S
90 237 :M
(the current data block.)S
90 261 :M
(The category name will be valid as long as the category exists.)S
90 285 :M
(The name must not be modified by the program in any way.)S
90 309 :M
f184 sf
(ARGUMENTS)S
90 321 :M
f209 sf
(\312)S
90 333 :M
f279 sf
(handle)S
216 333 :M
f209 sf
(CBF handle.)S
90 345 :M
f279 sf
(categoryname)S
216 345 :M
f209 sf
(Pointer to the destination category name pointer.)S
90 381 :M
f184 sf
(RETURN VALUE)S
90 405 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 429 :M
f184 sf
(SEE ALSO)S
90 453 :M
f209 sf
(2.3.30 )S
f184 sf
(cbf_find_category)S
endp
%%Page: 59 59
%%BeginPageSetup
initializepage
(yaya; page: 59 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 49)S
90 93 :M
(2.3.44 )S
f184 sf
(cbf_column_name)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_column_name)S
200 177 :M
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
296 177 :M
f209 sf
(, const char **)S
366 177 :M
f279 sf
(columnname)S
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_column_name)S
184 225 :M
f209 sf
( sets *)S
214 225 :M
f279 sf
(columnname)S
f209 sf
( to point to the name of the current column of the)S
90 237 :M
(current category.)S
90 261 :M
(The column name will be valid as long as the column exists.)S
90 285 :M
(The name must not be modified by the program in any way.)S
90 309 :M
f184 sf
(ARGUMENTS)S
90 321 :M
f209 sf
(\312)S
90 333 :M
f279 sf
(handle)S
216 333 :M
f209 sf
(CBF handle.)S
90 345 :M
f279 sf
(columnname)S
216 345 :M
f209 sf
(Pointer to the destination column name pointer.)S
90 381 :M
f184 sf
(RETURN VALUE)S
90 405 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 429 :M
f184 sf
(SEE ALSO)S
90 453 :M
f209 sf
(2.3.31 )S
f184 sf
(cbf_find_column)S
endp
%%Page: 60 60
%%BeginPageSetup
initializepage
(yaya; page: 60 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 50)S
90 93 :M
(2.3.45 )S
f184 sf
(cbf_row_number)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_row_number)S
f209 sf
( \(cbf_handle )S
258 177 :M
f279 sf
(handle)S
f209 sf
(, unsigned int *)S
364 177 :M
f279 sf
(row)S
383 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_row_number)S
179 225 :M
f209 sf
( sets *)S
209 225 :M
f279 sf
(row)S
f209 sf
( to the number of the current row of the current)S
90 237 :M
(category.)S
90 261 :M
f184 sf
(ARGUMENTS)S
90 285 :M
f279 sf
(handle)S
216 285 :M
f209 sf
(CBF handle.)S
90 297 :M
f279 sf
(row)S
216 297 :M
f209 sf
(Pointer to the destination row number.)S
90 333 :M
f184 sf
(RETURN VALUE)S
90 357 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 381 :M
f184 sf
(SEE ALSO)S
90 405 :M
f209 sf
(2.3.41 )S
f184 sf
(cbf_select_row)S
endp
%%Page: 61 61
%%BeginPageSetup
initializepage
(yaya; page: 61 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 51)S
90 93 :M
(2.3.46 )S
f184 sf
(cbf_get_value)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_get_value)S
f209 sf
( \(cbf_handle )S
240 177 :M
f279 sf
(handle)S
f209 sf
(, const char **)S
342 177 :M
f279 sf
(value)S
368 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_get_value)S
161 225 :M
f209 sf
( sets *)S
191 225 :M
f279 sf
(value)S
217 225 :M
f209 sf
( to point to the ASCII value of the item at the current column)S
90 237 :M
(and row.)S
90 261 :M
(If the )S
119 261 :M
f279 sf
(value)S
145 261 :M
f209 sf
( is not ASCII, the function returns CBF_BINARY.)S
90 285 :M
(The )S
112 285 :M
f279 sf
(value)S
138 285 :M
f209 sf
( will be valid as long as the item exists and has not been set to a new value.)S
90 309 :M
(The )S
112 309 :M
f279 sf
(value)S
138 309 :M
f209 sf
( must not be modified by the program in any way.)S
90 333 :M
f184 sf
(ARGUMENTS)S
90 345 :M
f209 sf
(\312)S
90 357 :M
f279 sf
(handle)S
216 357 :M
f209 sf
(CBF handle.)S
90 369 :M
f279 sf
(value)S
216 369 :M
f209 sf
(Pointer to the destination value pointer.)S
90 405 :M
f184 sf
(RETURN VALUE)S
90 429 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 453 :M
f184 sf
(SEE ALSO)S
90 477 :M
f209 sf
(2.3.47 )S
f184 sf
(cbf_set_value)S
90 489 :M
f209 sf
(2.3.48 )S
f184 sf
(cbf_get_integervalue)S
90 501 :M
f209 sf
(2.3.50 )S
f184 sf
(cbf_get_doublevalue)S
90 513 :M
f209 sf
(2.3.52 )S
f184 sf
(cbf_get_integerarrayparameters)S
90 525 :M
f209 sf
(2.3.53 )S
f184 sf
(cbf_get_integerarray)S
endp
%%Page: 62 62
%%BeginPageSetup
initializepage
(yaya; page: 62 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 52)S
90 93 :M
(2.3.47 )S
f184 sf
(cbf_set_value)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_set_value)S
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
271 177 :M
f209 sf
(, const char *)S
335 177 :M
f279 sf
(value)S
361 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_set_value)S
f209 sf
( sets the item at the current column and row to the ASCII value )S
466 225 :M
f279 sf
(value)S
492 225 :M
f209 sf
(.)S
90 249 :M
f184 sf
(ARGUMENTS)S
90 261 :M
f209 sf
(\312)S
90 273 :M
f279 sf
(handle)S
216 273 :M
f209 sf
(CBF handle.)S
90 285 :M
f279 sf
(value)S
216 285 :M
f209 sf
(ASCII value.)S
90 321 :M
f184 sf
(RETURN VALUE)S
90 345 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 369 :M
f184 sf
(SEE ALSO)S
90 393 :M
f209 sf
(2.3.46 )S
f184 sf
(cbf_get_value)S
90 405 :M
f209 sf
(2.3.49 )S
f184 sf
(cbf_set_integervalue)S
90 417 :M
f209 sf
(2.3.51 )S
f184 sf
(cbf_set_doublevalue)S
90 429 :M
f209 sf
(2.3.54 )S
f184 sf
(cbf_set_integerarray)S
endp
%%Page: 63 63
%%BeginPageSetup
initializepage
(yaya; page: 63 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 53)S
90 93 :M
(2.3.48 )S
f184 sf
(cbf_get_integervalue)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_get_integervalue)S
f209 sf
( \(cbf_handle )S
276 177 :M
f279 sf
(handle)S
f209 sf
(, int *)S
336 177 :M
f279 sf
(number)S
373 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_get_integervalue)S
197 225 :M
f209 sf
( sets *)S
227 225 :M
f279 sf
(number)S
f209 sf
( to the value of the ASCII item at the current column)S
90 237 :M
(and row interpreted as a decimal integer.)S
90 261 :M
(If the value is not ASCII, the function returns CBF_BINARY.)S
90 285 :M
f184 sf
(ARGUMENTS)S
90 309 :M
f279 sf
(handle)S
216 309 :M
f209 sf
(\312CBF handle.)S
90 321 :M
f279 sf
(number)S
216 321 :M
f209 sf
(pointer to the number.)S
90 357 :M
f184 sf
(RETURN VALUE)S
90 381 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 405 :M
f184 sf
(SEE ALSO)S
90 429 :M
f209 sf
(2.3.46 )S
f184 sf
(cbf_get_value)S
90 441 :M
f209 sf
(2.3.49 )S
f184 sf
(cbf_set_integervalue)S
90 453 :M
f209 sf
(2.3.50 )S
f184 sf
(cbf_get_doublevalue)S
90 465 :M
f209 sf
(2.3.52 )S
f184 sf
(cbf_get_integerarrayparameters)S
90 477 :M
f209 sf
(2.3.53 )S
f184 sf
(cbf_get_integerarray)S
endp
%%Page: 64 64
%%BeginPageSetup
initializepage
(yaya; page: 64 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 54)S
90 93 :M
(2.3.49 )S
f184 sf
(cbf_set_integervalue)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_set_integervalue)S
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
307 177 :M
f209 sf
(, int )S
329 177 :M
f279 sf
(number)S
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_set_integervalue)S
f209 sf
( sets the item at the current column and row to the integer value)S
90 237 :M
f279 sf
(number)S
127 237 :M
f209 sf
( written as a decimal ASCII string.)S
90 261 :M
f184 sf
(ARGUMENTS)S
90 285 :M
f279 sf
(handle)S
216 285 :M
f209 sf
(CBF handle.)S
90 297 :M
f279 sf
(number)S
216 297 :M
f209 sf
(Integer value.)S
90 333 :M
f184 sf
(RETURN VALUE)S
90 357 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 381 :M
f184 sf
(SEE ALSO)S
90 405 :M
f209 sf
(2.3.46 )S
f184 sf
(cbf_get_value)S
90 417 :M
f209 sf
(2.3.47 )S
f184 sf
(cbf_set_value)S
90 429 :M
f209 sf
(2.3.48 )S
f184 sf
(cbf_get_integervalue)S
90 441 :M
f209 sf
(2.3.49 )S
f184 sf
(cbf_set_integervalue)S
90 453 :M
f209 sf
(2.3.51 )S
f184 sf
(cbf_set_doublevalue)S
90 465 :M
f209 sf
(2.3.54 )S
f184 sf
(cbf_set_integerarray)S
endp
%%Page: 65 65
%%BeginPageSetup
initializepage
(yaya; page: 65 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 55)S
90 93 :M
(2.3.50 )S
f184 sf
(cbf_get_doublevalue)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_get_doublevalue)S
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
307 177 :M
f209 sf
(, double *)S
355 177 :M
f279 sf
(number)S
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_get_doublevalue)S
f209 sf
( sets *)S
225 225 :M
f279 sf
(number)S
262 225 :M
f209 sf
( to the value of the ASCII item at the current column)S
90 237 :M
(and row interpreted as a decimal floating-point number.)S
90 261 :M
(If the value is not ASCII, the function returns CBF_BINARY.)S
90 285 :M
f184 sf
(ARGUMENTS)S
90 309 :M
f279 sf
(handle)S
216 309 :M
f209 sf
(CBF handle.)S
90 321 :M
f279 sf
(number)S
216 321 :M
f209 sf
(Pointer to the destination number.)S
90 357 :M
f184 sf
(RETURN VALUE)S
90 381 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 405 :M
f184 sf
(SEE ALSO)S
90 429 :M
f209 sf
(2.3.46 )S
f184 sf
(cbf_get_value)S
90 441 :M
f209 sf
(2.3.48 )S
f184 sf
(cbf_get_integervalue)S
90 453 :M
f209 sf
(2.3.51 )S
f184 sf
(cbf_set_doublevalue)S
90 465 :M
f209 sf
(2.3.52 )S
f184 sf
(cbf_get_integerarrayparameters)S
90 477 :M
f209 sf
(2.3.53 )S
f184 sf
(cbf_get_integerarray)S
endp
%%Page: 66 66
%%BeginPageSetup
initializepage
(yaya; page: 66 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 56)S
90 93 :M
(2.3.51 )S
f184 sf
(cbf_set_doublevalue)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_set_doublevalue)S
210 177 :M
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
306 177 :M
f209 sf
(, const char *)S
370 177 :M
f279 sf
(format)S
402 177 :M
f209 sf
(, double )S
f279 sf
(number)S
480 177 :M
f209 sf
(\);)S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_set_doublevalue)S
194 225 :M
f209 sf
( sets the item at the current column and row to the)S
90 237 :M
(floating-point value )S
188 237 :M
f279 sf
(number)S
225 237 :M
f209 sf
( written as an ASCII string with the format)S
90 249 :M
(specified by )S
f279 sf
(format)S
183 249 :M
f209 sf
( as appropriate for the printf function.)S
90 273 :M
f184 sf
(ARGUMENTS)S
90 285 :M
f209 sf
(\312)S
90 297 :M
f279 sf
(handle)S
216 297 :M
f209 sf
(CBF handle.)S
90 309 :M
f279 sf
(format)S
216 309 :M
f209 sf
(Format for the number.)S
90 321 :M
f279 sf
(number)S
216 321 :M
f209 sf
(Floating-point value.)S
90 357 :M
f184 sf
(RETURN VALUE)S
90 381 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 405 :M
f184 sf
(SEE ALSO)S
90 429 :M
f209 sf
(2.3.46 )S
f184 sf
(cbf_get_value)S
90 441 :M
f209 sf
(2.3.47 )S
f184 sf
(cbf_set_value)S
90 453 :M
f209 sf
(2.3.49 )S
f184 sf
(cbf_set_integervalue)S
90 465 :M
f209 sf
(2.3.50 )S
f184 sf
(cbf_get_doublevalue)S
90 477 :M
f209 sf
(2.3.54 )S
f184 sf
(cbf_set_integerarray)S
endp
%%Page: 67 67
%%BeginPageSetup
initializepage
(yaya; page: 67 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 57)S
90 93 :M
(2.3.52 )S
f184 sf
(cbf_get_integerarrayparameters)S
90 129 :M
(PROTOTYPE)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(int )S
106 177 :M
f184 sf
(cbf_get_integerarrayparameters)S
f209 sf
( \(cbf_handle )S
336 177 :M
f279 sf
(handle)S
f209 sf
(, unsigned int * )S
445 177 :M
f279 sf
(compression)S
506 177 :M
f209 sf
(,)S
126 189 :M
(int *)S
148 189 :M
f279 sf
(binary_id)S
f209 sf
(, size_t *)S
237 189 :M
f279 sf
(elsize)S
264 189 :M
f209 sf
(, int *)S
292 189 :M
f279 sf
(elsigned)S
332 189 :M
f209 sf
(, int *)S
f279 sf
(elunsigned)S
411 189 :M
f209 sf
(, size_t *)S
454 189 :M
f279 sf
(elements)S
496 189 :M
f209 sf
(, int)S
126 201 :M
(*)S
f279 sf
(minelement)S
f209 sf
(, int *)S
215 201 :M
f279 sf
(maxelement\))S
f209 sf
(;)S
90 225 :M
f184 sf
(DESCRIPTION)S
90 249 :M
(cbf_get_integerarrayparameters)S
257 249 :M
f209 sf
( sets *)S
287 249 :M
f279 sf
(compression)S
f209 sf
(, *)S
f279 sf
(binary_id)S
406 249 :M
f209 sf
(, *)S
f279 sf
(elsize)S
445 249 :M
f209 sf
(, *)S
f279 sf
(elsigned)S
497 249 :M
f209 sf
(,)S
90 261 :M
(*)S
f279 sf
(elunsigned)S
148 261 :M
f209 sf
(, *)S
f279 sf
(elements)S
202 261 :M
f209 sf
(, *)S
f279 sf
(minelement)S
f209 sf
( and *)S
299 261 :M
f279 sf
(maxelement)S
f209 sf
( to values read from the binary)S
90 273 :M
(value of the item at the current column and row.   This provides all the arguments needed)S
90 285 :M
(for a subsequent call to )S
f184 sf
(cbf_set_integerarray)S
311 285 :M
f209 sf
(, if a copy of the arry is to be made into)S
90 297 :M
(another CIF or CBF.)S
90 321 :M
(If the value is not binary, the function returns CBF_ASCII.)S
90 345 :M
f184 sf
(ARGUMENTS)S
90 369 :M
f279 sf
(handle)S
216 369 :M
f209 sf
(CBF handle.)S
90 381 :M
f279 sf
(compression)S
216 381 :M
f209 sf
(Compression method used.)S
90 393 :M
f279 sf
(elsize)S
216 393 :M
f209 sf
(Size in bytes of each array element.)S
90 405 :M
f279 sf
(binary_id)S
216 405 :M
f209 sf
(Pointer to the destination integer binary identifier.)S
90 417 :M
f279 sf
(elsigned)S
216 417 :M
f209 sf
(Pointer to an integer. Set to 1 if the elements can be read)S
216 429 :M
(as signed integers.)S
90 441 :M
f279 sf
(elunsigned)S
216 441 :M
f209 sf
(Pointer to an integer. Set to 1 if the elements can be read)S
216 453 :M
(as unsigned integers.)S
90 465 :M
f279 sf
(elements)S
216 465 :M
f209 sf
(Pointer to the destination number of elements.)S
90 477 :M
f279 sf
(minelement)S
216 477 :M
f209 sf
(Pointer to the destination smallest element.)S
90 489 :M
f279 sf
(maxelement)S
216 489 :M
f209 sf
(Pointer to the destination largest element.)S
90 525 :M
f184 sf
(RETURN VALUE)S
90 549 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 573 :M
f184 sf
(SEE ALSO)S
90 597 :M
f209 sf
(2.3.46 )S
f184 sf
(cbf_get_value)S
90 609 :M
f209 sf
(2.3.48 )S
f184 sf
(cbf_get_integervalue)S
90 621 :M
f209 sf
(2.3.50 )S
f184 sf
(cbf_get_doublevalue)S
90 633 :M
f209 sf
(2.3.53 )S
f184 sf
(cbf_get_integerarray)S
90 645 :M
f209 sf
(2.3.54 )S
f184 sf
(cbf_set_integerarray)S
endp
%%Page: 68 68
%%BeginPageSetup
initializepage
(yaya; page: 68 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 58)S
90 93 :M
(2.3.53 )S
f184 sf
(cbf_get_integerarray)S
90 117 :M
(PROTOTYPE)S
90 136 :M
f209 sf
(#include "cbf.h")S
90 160 :M
(int )S
106 160 :M
f184 sf
(cbf_get_integerarray)S
214 160 :M
f209 sf
( \(cbf_handle )S
f279 sf
(handle)S
310 160 :M
f209 sf
(, int *)S
f279 sf
(binary_id)S
384 160 :M
f209 sf
(, void *)S
f279 sf
(array)S
447 160 :M
f209 sf
(,  size_t )S
487 160 :M
f279 sf
(elsize)S
514 160 :M
f209 sf
(,)S
126 172 :M
(int )S
142 172 :M
f279 sf
(elsigned)S
182 172 :M
f209 sf
(, size_t )S
219 172 :M
f279 sf
(elements)S
261 172 :M
f209 sf
(, size_t *)S
304 172 :M
f279 sf
(elements_read)S
374 172 :M
f209 sf
(\);)S
90 196 :M
f184 sf
(DESCRIPTION)S
90 215 :M
(cbf_get_integerarray)S
198 215 :M
f209 sf
( reads the binary value of the item at the current column and row)S
90 227 :M
(into an integer )S
f279 sf
(array)S
189 227 :M
f209 sf
(. The array consists of elements )S
344 227 :M
f279 sf
(elements)S
386 227 :M
f209 sf
( of )S
402 227 :M
f279 sf
(elsize)S
429 227 :M
f209 sf
( bytes each,)S
90 239 :M
(starting at )S
141 239 :M
f279 sf
(array)S
f209 sf
(. The elements are signed if )S
303 239 :M
f279 sf
(elsigned)S
343 239 :M
f209 sf
( is non-0 and unsigned otherwise.)S
90 251 :M
(*)S
f279 sf
(binary_id)S
143 251 :M
f209 sf
( is set to the binary section identifier and *)S
f279 sf
(elements_read)S
417 251 :M
f209 sf
( to the number of)S
90 263 :M
(elements actually read.)S
90 282 :M
(If any element in the binary data cant fit into the destination element, the destination is set)S
90 294 :M
(the nearest possible value.)S
90 313 :M
(If the value is not binary, the function returns CBF_ASCII.)S
90 332 :M
(If the requested number of elements cant be read, the function will read as many as it can)S
90 344 :M
(and then return CBF_ENDOFDATA.)S
90 363 :M
(Currently, the destination )S
f279 sf
(array)S
242 363 :M
f209 sf
( must consist of chars, shorts or ints \(signed or unsigned\).)S
90 375 :M
(If )S
101 375 :M
f279 sf
(elsize)S
128 375 :M
f209 sf
( is not equal to sizeof \(char\), sizeof \(short\) or sizeof \(int\), the function returns)S
90 387 :M
(CBF_ARGUMENT.)S
90 406 :M
(An additional restriction in the current version of CBFlib is that values too large to fit in)S
90 418 :M
(an int are not correctly decompressed. As an example, if the machine with 32-bit ints is)S
90 430 :M
(reading an array containing a value outside the range 0 .. 2^32-1 \(unsigned\) or -2^31 ..)S
90 442 :M
(2^31-1 \(signed\), the array will not be correctly decompressed. This restriction will be)S
90 454 :M
(removed in a future release.)S
90 478 :M
f184 sf
(ARGUMENTS)S
90 486 :M
f290 sf
(\312)S
90 497 :M
f279 sf
(handle)S
216 497 :M
f209 sf
(CBF handle.)S
90 509 :M
f279 sf
(binary_id)S
216 509 :M
f209 sf
(Pointer to the destination integer binary identifier.)S
90 521 :M
f279 sf
(array)S
216 521 :M
f209 sf
(Pointer to the destination array.)S
90 533 :M
f279 sf
(elsize)S
216 533 :M
f209 sf
(Size in bytes of each destination array element.)S
90 545 :M
f279 sf
(elsigned)S
216 545 :M
f209 sf
(Set to non-0 if the destination array elements are signed.)S
90 557 :M
f279 sf
(elements)S
216 557 :M
f209 sf
(The number of elements to read.)S
90 569 :M
f279 sf
(elements_read)S
216 569 :M
f209 sf
(Pointer to the destination number of elements actually)S
216 581 :M
(read.)S
90 605 :M
f184 sf
(RETURN VALUE)S
90 624 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 648 :M
f184 sf
(SEE ALSO)S
90 667 :M
f209 sf
(2.3.46 )S
f184 sf
(cbf_get_value)S
90 679 :M
f209 sf
(2.3.48 )S
f184 sf
(cbf_get_integervalue)S
90 691 :M
f209 sf
(2.3.50 )S
f184 sf
(cbf_get_doublevalue)S
90 703 :M
f209 sf
(2.3.52 )S
f184 sf
(cbf_get_integerarrayparameters)S
90 715 :M
f209 sf
(2.3.54 )S
f184 sf
(cbf_set_integerarray)S
endp
%%Page: 69 69
%%BeginPageSetup
initializepage
(yaya; page: 69 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 59)S
90 81 :M
(2.3.54 )S
f184 sf
(cbf_set_integerarray)S
90 105 :M
(PROTOTYPE)S
90 124 :M
f209 sf
(#include "cbf.h")S
90 148 :M
(int )S
106 148 :M
f184 sf
(cbf_set_integerarray)S
f209 sf
( \(cbf_handle )S
276 148 :M
f279 sf
(handle)S
f209 sf
(, unsigned int )S
376 148 :M
f279 sf
(compression)S
437 148 :M
f209 sf
(, int)S
456 148 :M
f279 sf
(binary_id)S
f209 sf
(,)S
126 160 :M
(void *)S
f279 sf
(array)S
183 160 :M
f209 sf
(, size_t )S
220 160 :M
f279 sf
(elsize)S
247 160 :M
f209 sf
(, int )S
f279 sf
(elsigned)S
308 160 :M
f209 sf
(, size_t )S
345 160 :M
f279 sf
(elements)S
387 160 :M
f209 sf
(\);)S
90 184 :M
f184 sf
(DESCRIPTION)S
90 203 :M
(cbf_set_integerarray)S
197 203 :M
f209 sf
( sets the binary value of the item at the current column and row to)S
90 215 :M
(an integer )S
141 215 :M
f279 sf
(array)S
f209 sf
(. The )S
195 215 :M
f279 sf
(array)S
222 215 :M
f209 sf
( consists of elements)S
f279 sf
(elements)S
363 215 :M
f209 sf
( of )S
379 215 :M
f279 sf
(elsize)S
406 215 :M
f209 sf
( bytes each, starting at)S
90 227 :M
f279 sf
(array)S
117 227 :M
f209 sf
(. The elements are signed if )S
f279 sf
(elsigned)S
292 227 :M
f209 sf
( is non-0 and unsigned otherwise. )S
457 227 :M
f279 sf
(binary_id)S
f209 sf
( is)S
90 239 :M
(the binary section identifier.)S
90 263 :M
(The )S
112 263 :M
f279 sf
(array)S
f209 sf
( will be compressed using the compression scheme specifed by)S
441 263 :M
f279 sf
(compression)S
502 263 :M
f209 sf
(.)S
90 275 :M
(Currently, the available schemes are:)S
90 299 :M
(CBF_CANONICAL)S
216 299 :M
(Canonical-code compression \(section 3.3.1\))S
90 311 :M
(CBF_PACKED)S
216 311 :M
(CCP4-style packing \(section 3.3.2\))S
90 323 :M
(CBF_NONE)S
216 323 :M
(No compression. )S
f184 sf
(NOTE:)S
338 323 :M
f209 sf
( This scheme is by far the)S
216 335 :M
(slowest of the three and uses much more disk space. It is)S
216 347 :M
(intended for routine use with small arrays only. With)S
216 359 :M
(large arrays \(like images\) it should be used only for)S
216 371 :M
(debugging.)S
90 395 :M
(The values compressed are limited to 64 bits. If any element in the )S
413 395 :M
f279 sf
(array)S
f209 sf
( is larger than 64)S
90 407 :M
(bits, the value compressed is the nearest 64-bit value.)S
90 431 :M
(Currently, the source )S
194 431 :M
f279 sf
(array)S
221 431 :M
f209 sf
( must consist of chars, shorts or ints \(signed or unsigned\). If)S
90 443 :M
f279 sf
(elsize)S
117 443 :M
f209 sf
( is not equal to sizeof \(char\), sizeof \(short\) or sizeof \(int\), the function returns)S
90 455 :M
(CBF_ARGUMENT.)S
90 479 :M
f184 sf
(ARGUMENTS)S
90 498 :M
f279 sf
(handle)S
216 498 :M
f209 sf
(CBF handle.)S
90 510 :M
f279 sf
(compression)S
216 510 :M
f209 sf
(Compression method to use.)S
90 522 :M
f279 sf
(binary_id)S
216 522 :M
f209 sf
(Integer binary identifier.)S
90 534 :M
f279 sf
(array)S
216 534 :M
f209 sf
(Pointer to the source array.)S
90 546 :M
f279 sf
(elsize)S
216 546 :M
f209 sf
(Size in bytes of each source array element.)S
90 558 :M
f279 sf
(elsigned)S
216 558 :M
f209 sf
(Set to non-0 if the source array elements are signed.)S
90 570 :M
f279 sf
(elements)S
216 570 :M
f209 sf
(The number of elements in the )S
366 570 :M
f279 sf
(array)S
393 570 :M
f209 sf
(.)S
90 594 :M
f184 sf
(RETURN VALUE)S
90 613 :M
f209 sf
(Returns an error code on failure or 0 for success.)S
90 637 :M
f184 sf
(SEE ALSO)S
90 656 :M
f209 sf
(2.3.47 )S
f184 sf
(cbf_set_value)S
90 668 :M
f209 sf
(2.3.49 )S
f184 sf
(cbf_set_integervalue)S
90 680 :M
f209 sf
(2.3.51 )S
f184 sf
(cbf_set_doublevalue)S
90 692 :M
f209 sf
(2.3.52 )S
f184 sf
(cbf_get_integerarrayparameters)S
90 704 :M
f209 sf
(2.3.53 )S
f184 sf
(cbf_get_integerarray)S
endp
%%Page: 70 70
%%BeginPageSetup
initializepage
(yaya; page: 70 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 60)S
90 93 :M
(2.3.55 )S
f184 sf
(cbf_failnez)S
90 129 :M
(DEFINITION)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(#define )S
129 177 :M
f184 sf
(cbf_failnez)S
185 177 :M
f209 sf
<28>S
189 177 :M
f279 sf
(f)S
f209 sf
(\) {int err; err = \()S
f279 sf
(f)S
274 177 :M
f209 sf
(\); if \(err\) return err; })S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_failnez)S
146 225 :M
f209 sf
( is a macro used for error propagation throughout CBFlib.  )S
430 225 :M
f184 sf
(cbf_failnez)S
90 237 :M
f209 sf
(executes the function )S
195 237 :M
f279 sf
(f)S
f209 sf
( and saves the returned error value.   If the error value is non-0,)S
90 249 :M
f184 sf
(cbf_failnez)S
146 249 :M
f209 sf
( executes a return with the error value as argument. If CBFDEBUG is)S
90 261 :M
(defined, then a report of the error is also printed to the standard error stream, stderr, in the)S
90 273 :M
(form)S
90 297 :M
(CBFlib error )S
155 297 :M
f279 sf
(f)S
f209 sf
( in "symbol")S
90 321 :M
(where )S
f279 sf
(f)S
126 321 :M
f209 sf
( is the decimal value of the error and symbol is the symbolic form.)S
90 345 :M
f184 sf
(ARGUMENTS)S
90 357 :M
f209 sf
(\312)S
90 369 :M
f279 sf
(f)S
216 369 :M
f209 sf
(Integer error value.)S
90 405 :M
f184 sf
(SEE ALSO)S
90 429 :M
f209 sf
(2.3.56 )S
f184 sf
(cbf_onfailnez)S
endp
%%Page: 71 71
%%BeginPageSetup
initializepage
(yaya; page: 71 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 61)S
90 93 :M
(2.3.56 )S
f184 sf
(cbf_onfailnez)S
90 129 :M
(DEFINITION)S
90 153 :M
f209 sf
(#include "cbf.h")S
90 177 :M
(#define )S
129 177 :M
f184 sf
(cbf_onfailnez)S
198 177 :M
f209 sf
<28>S
202 177 :M
f279 sf
(f)S
f209 sf
(,)S
f279 sf
(c)S
f209 sf
(\) {int err; err = \()S
f279 sf
(f)S
295 177 :M
f209 sf
(\); if \(err\) {{)S
f279 sf
(c)S
357 177 :M
f209 sf
(; }return err; }})S
90 201 :M
f184 sf
(DESCRIPTION)S
90 225 :M
(cbf_onfailnez)S
159 225 :M
f209 sf
( is a macro used for error propagation throughout CBFlib.   )S
446 225 :M
f184 sf
(cbf_onfailnez)S
90 237 :M
f209 sf
(executes the function )S
195 237 :M
f279 sf
(f)S
f209 sf
( and saves the returned error value. If the error value is non-0,)S
90 249 :M
f184 sf
(cbf_failnez)S
146 249 :M
f209 sf
( executes first the statement )S
f279 sf
(c)S
288 249 :M
f209 sf
( and then a return with the error value as)S
90 261 :M
(argument. If CBFDEBUG is defined, then a report of the error is also printed to the)S
90 273 :M
(standard error stream, stderr, in the form)S
90 297 :M
(CBFlib error )S
155 297 :M
f279 sf
(f)S
f209 sf
( in "symbol")S
90 321 :M
(where )S
f279 sf
(f)S
126 321 :M
f209 sf
( is the decimal value of the error and symbol is the symbolic form.)S
90 345 :M
f184 sf
(ARGUMENTS)S
90 369 :M
f279 sf
(f)S
216 369 :M
f209 sf
(integer function to execute.)S
90 381 :M
f279 sf
(c)S
216 381 :M
f209 sf
(statement to execute on failure.)S
90 417 :M
f184 sf
(SEE ALSO)S
90 441 :M
f209 sf
(2.3.55 )S
f184 sf
(cbf_failnez)S
endp
%%Page: 72 72
%%BeginPageSetup
initializepage
(yaya; page: 72 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 62)S
endp
%%Page: 73 73
%%BeginPageSetup
initializepage
(yaya; page: 73 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 63)S
90 84 :M
f220 sf
(3. File format)S
90 108 :M
f184 sf
(3.1 General description)S
90 132 :M
f209 sf
(With the exception of the binary sections, a CBF file is an mmCIF-format ASCII file, so)S
90 144 :M
(a CBF file with no binary sections is a CIF file. An imgCIF file has any binary sections)S
90 156 :M
(encoded as CIF-format ASCII strings and is a CIF file whether or not it contains binary)S
90 168 :M
(sections. In most cases, CBFlib can also be used to access normal CIF files as well as)S
90 180 :M
(CBF and imgCIF files.)S
90 216 :M
f184 sf
(3.2 Format of the binary sections)S
90 240 :M
f209 sf
(Before getting to the binary data itself, there are some preliminaries to allow a smooth)S
90 252 :M
(transition from the conventions of CIF to those of raw or encoded streams of "octets" \(8)S
512 252 :M
(-)S
90 264 :M
(bit bytes\). The binary data is given as the essential part of a specially formatted)S
90 276 :M
(semicolon-delimited CIF multi-line text string. This text string is the value associated)S
90 288 :M
(with the tag "_array_data.data".)S
90 312 :M
(The specific format of the binary sections differs between an imgCIF and a CBF file.)S
90 348 :M
f184 sf
(3.2.1 Format of imgCIF binary sections)S
90 372 :M
f209 sf
(Each binary section is encoded as a ;-delimited string. Within the text string, the)S
90 384 :M
(conventions developed for transmitting email messages including binary attachments are)S
90 396 :M
(followed. There is secondary ASCII header information, formatted as Multipurpose)S
90 408 :M
(Internet Mail Extensions \(MIME\) headers \(see RFCs 2045-49 by Freed, et al.\). The)S
90 420 :M
(boundary marker for the beginning of all this is the special string)S
90 444 :M
(--CIF-BINARY-FORMAT-SECTION--)S
90 468 :M
(at the beginning of a line. The initial "--" says that this is a MIME  boundary. We cannot)S
90 480 :M
(put "###" in front of it and conform to MIME  conventions. Immediately after the)S
90 492 :M
(boundary marker are MIME headers,  describing some useful information we will need to)S
90 504 :M
(process the binary section. MIME headers can appear in different orders, and can be very)S
90 516 :M
(confusing \(look at the raw contents of a email message with attachments\), but there is)S
90 528 :M
(only one header which is has to be understood to process an imgCIF: "Content-Transfer)S
512 528 :M
(-)S
90 540 :M
(Encoding". If the value given on this header is "BINARY", this is a CBF and the data will)S
90 552 :M
(be presented as raw binary, containing a count \(in the header described in 3.2.2 Format of)S
90 564 :M
(CBF binary sections\) so that we'll know when to start looking for more information.)S
90 588 :M
(If the value given for "Content-Transfer-Encoding" is one of the real encodings:)S
90 600 :M
("BASE64", "QUOTED-PRINTABLE", "X-BASE8", "X-BASE10" or "X-BASE16", the)S
90 612 :M
(file is an imgCIF, and we'll need some other headers to process the encoded binary data)S
90 624 :M
(properly. It is a good practice to give headers in all cases. The meanings of various)S
90 636 :M
(encodings is given in the CBF extensions dictionary, cbfext98.dic.)S
90 660 :M
(The "Content-Type" header tells us what sort of data we have \(currently)S
90 672 :M
(always "application/octet-stream" for a miscellaneous stream of binary data\) and,)S
90 684 :M
(optionally, the conversions that were applied to the original data. In this case we have)S
90 696 :M
(compressed the data with the "CBF-PACKED" algorithm.)S
endp
%%Page: 74 74
%%BeginPageSetup
initializepage
(yaya; page: 74 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 64)S
90 81 :M
(The "X-Binary-ID" header should contain the same value as was given for)S
90 93 :M
("_array_data.)S
155 93 :M
f279 sf
(binary_id)S
f209 sf
(".)S
90 117 :M
(The "X-Binary-Size" header gives the expected size of the binary data.  This is the size)S
90 129 :M
(after any compressions, but before any ascii encodings.  This is useful in making a simple)S
90 141 :M
(check for a missing portion of this file. The 8 bytes for the Compression type \(see below\))S
90 153 :M
(are not counted in this field, so the value of "X-Binary-Size" is 8 less than the quantity in)S
90 165 :M
(bytes 12-19 of the raw binary data \( 3.2.2 Format of CBF binary)S
90 177 :M
(sections\).)S
90 201 :M
(The optional "Content-MD5" header provides a much more sophisticated check on the)S
90 213 :M
(integrity of the binary data. Note that this check value is applied to the data occurring)S
90 225 :M
(after the 8 bytes for the Compression type.)S
90 249 :M
(A blank line separator immediately precedes the start of the encoded binary data. Blank)S
90 261 :M
(spaces may be added prior to the preceding "line separator" if desired \(e.g. to force word)S
90 273 :M
(or block alignment\).)S
90 297 :M
(Because CBFLIB may jump foreward in the file from the MIME header, the)S
90 309 :M
(length of encoded data cannot be greater than the value defined by "X-Binary-Size")S
90 321 :M
(\(except when "X-Binary-Size" is zero, which means that the size is unknown\). At exactly)S
90 333 :M
(the byte following the full binary section as defined by the length value is the end of)S
90 345 :M
(binary section identifier. This consists of the line-termination sequence followed by:)S
90 381 :M
(--CIF-BINARY-FORMAT-SECTION----)S
90 393 :M
(;)S
90 429 :M
(with each of these lines followed by a line-termination sequence. This brings us back into)S
90 441 :M
(a normal CIF environment. This identifier is, in a sense, redundant because the binary)S
90 453 :M
(data length value tells the a program how many bytes to jump over to the end of the)S
90 465 :M
(binary data. This redundancy has been deliberately added for error checking, and for)S
90 477 :M
(possible file recovery in the case of a corrupted file and this identifier must be present at)S
90 489 :M
(the end of every block of binary data.)S
90 525 :M
f184 sf
(3.2.2 Format of CBF binary sections)S
90 549 :M
f209 sf
(In a CBF file, each binary section is encoded as a ;-delimited string, starting with an)S
90 561 :M
(arbitrary number of pure-ASCII characters.)S
90 585 :M
f184 sf
(Note:)S
118 585 :M
f209 sf
( For historical reasons, CIFlib has the option of writing simple header and footer)S
90 597 :M
(sections: "START OF BINARY SECTION" at the start of a binary section and "END OF)S
90 609 :M
(BINARY SECTION" at the end of a binary section, or writing MIME-type header and)S
90 621 :M
(footer sections \(3.2.1 Format of imgCIF binary sections\). If the simple header is used, the)S
90 633 :M
(actual ASCII text is ignored when the binary section is read. Use of the simple binary)S
90 645 :M
(header is deprecated.)S
90 669 :M
(The MIME header is recommended.)S
90 693 :M
(Between the ASCII header and the actual CBF binary data is a series of bytes \("octets"\))S
90 705 :M
(to try to stop the listing of the header, bytes which define the binary identifier which)S
endp
%%Page: 75 75
%%BeginPageSetup
initializepage
(yaya; page: 75 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 65)S
90 81 :M
(should match the ")S
180 81 :M
f279 sf
(binary_id)S
227 81 :M
f209 sf
(" defined in the header, and bytes which define the length of)S
90 93 :M
(the binary section.)S
90 117 :M
f184 sf
(Octet)S
162 117 :M
(Hex)S
234 117 :M
(Decimal)S
306 117 :M
(Purpose)S
90 129 :M
f209 sf
(\312\3121)S
162 129 :M
(\312\312oD)S
234 129 :M
(\312\31212)S
306 129 :M
(\312\312\(ctrl-L\) End of Page)S
90 141 :M
(\312\3122)S
162 141 :M
(\312\3121A)S
234 141 :M
(\312\31226)S
306 141 :M
(\312\312\(ctrl-Z\) Stop listings in MS-DOS)S
90 153 :M
(\312\3123)S
162 153 :M
(\312\31204)S
234 153 :M
(\312\31204)S
306 153 :M
(\312\312\(Ctrl-D\) Stop listings in UNIX)S
90 165 :M
(\312\3124)S
162 165 :M
(\312\312D5)S
234 165 :M
(\312\312213)S
306 165 :M
(\312\312Binary section begins)S
90 177 :M
(\312\3125..5+n-1)S
162 177 :M
(\312\312\312)S
234 177 :M
(\312\312\312)S
306 177 :M
(\312\312Binary data \(n octets\))S
90 213 :M
(NOTE: When a MIME header is used, only bytes 5 through 5+n-1 are considered in)S
90 225 :M
(computing the size and the message digest, and only these bytes are encoded for the)S
90 237 :M
(equivalent imgCIF file using the indicated Content-Transfer-Encoding.)S
90 261 :M
(If no MIME header has been requested \(a deprecated use\), then bytes 5 through 28 are)S
90 273 :M
(used for three 8-byte words to hold the )S
f279 sf
(binary_id)S
326 273 :M
f209 sf
(, the size and the compression type:)S
90 297 :M
(\312\3125..12)S
216 297 :M
(Binary Section Identifier \(See _array_data.)S
f279 sf
(binary_id)S
469 297 :M
f209 sf
(\) 64-bit,)S
216 309 :M
(little endian)S
90 321 :M
(\312\31213..20)S
216 321 :M
(The size \(n\) of the binary section in octets \(i.e. the offset from)S
216 333 :M
(octet 29 to the first byte following the data\))S
90 345 :M
(\312\31221..28)S
216 345 :M
(Compression type:)S
216 369 :M
(\312\312CBF_NONE)S
342 369 :M
(\312\3120x0040 \(64\))S
216 381 :M
(\312\312CBF_CANONICAL)S
342 381 :M
(\312\3120x0050 \(80\))S
216 393 :M
(\312\312CBF_PACKED)S
342 393 :M
(\312\3120x0060 \(96\))S
216 405 :M
(\312\312CBF_BYTE_OFFSET)S
342 405 :M
(\312\3120x0070 \(112\))S
216 417 :M
(\312\312CBF_PREDICTOR)S
342 417 :M
(\312\3120x0080 \(128\))S
90 429 :M
(\312\312... )S
126 429 :M
(\312\312\312)S
90 453 :M
(The binary data then follows in bytes 29 through 29+n-1.)S
90 477 :M
(The binary characters serve specific purposes:)S
90 513 :M
(*)S
126 513 :M
(The Control-L \(from-feed\) will terminate printing of the current page on)S
90 525 :M
(most operating systems.)S
90 549 :M
(*)S
126 549 :M
(The Control-Z will stop the listing of the file on MS-DOS type operating)S
90 561 :M
(systems.)S
90 585 :M
(*)S
126 585 :M
(The Control-D will stop the listing of the file on Unix type operating systems.)S
90 609 :M
(*)S
126 609 :M
(The unsigned byte value 213 \(decimal\) is binary 11010101. \(Octal 325,)S
90 621 :M
(and hexadecimal D5\). This has the eighth bit set so can be used for error checking on 7)S
508 621 :M
(-)S
90 633 :M
(bit transmission. It is also asymmetric, but with the first bit also set in the case that the bit)S
90 645 :M
(order could be reversed \(which is not a known concern\).)S
90 669 :M
(*)S
126 669 :M
(\(The carriage return, line-feed pair before the START_OF_BIN and other)S
90 681 :M
(lines can also be used to check that the file has not been corrupted e.g. by being sent by)S
90 693 :M
(ftp in ASCII mode.\))S
endp
%%Page: 76 76
%%BeginPageSetup
initializepage
(yaya; page: 76 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 66)S
90 93 :M
(At present three compression schemes are implemented are defined: CBF_NONE \(for no)S
90 105 :M
(compression\), CBF_CANONICAL \(for and entropy-coding scheme based on the)S
90 117 :M
(canonical-code algorithm described by Moffat, et al. \(International Journal of High Speed)S
90 129 :M
(Electronics and Systems, Vol 8, No 1 \(1997\) 179-231\)\) and CBF_PACKED for a CCP4)S
513 129 :M
(-)S
90 141 :M
(style packing scheme. Othercompression schemes will be added to this list in the future.)S
90 177 :M
(For historical reasons, CBFlib can read or write a binary string without a MIME header.)S
90 189 :M
(The structure of a binary string with simple headers is:)S
90 213 :M
f184 sf
(Byte)S
162 213 :M
(ASCII)S
162 225 :M
(Symbol)S
234 213 :M
(Decimal)S
234 225 :M
(Value)S
306 213 :M
(Description)S
90 237 :M
f209 sf
(\312\3121)S
162 237 :M
(\312\312;)S
234 237 :M
(\312\31259)S
306 237 :M
(Initial ; delimiter)S
90 249 :M
(\312\3122)S
162 249 :M
(carriage)S
201 249 :M
(-)S
162 261 :M
(return)S
234 249 :M
(\312\31213)S
306 249 :M
(The CBF new-line code is carriage)S
474 249 :M
(-)S
306 261 :M
(return, line-feed)S
90 273 :M
(\312\3123)S
162 273 :M
(line-feed)S
234 273 :M
(\312\31210)S
90 285 :M
(\312\3124)S
162 285 :M
(\312\312S)S
234 285 :M
(\312\31283)S
306 285 :M
(\312\312)S
90 297 :M
(\312\3125)S
162 297 :M
(\312\312T)S
234 297 :M
(\312\31284)S
306 297 :M
(\312\312)S
90 309 :M
(\312\3126)S
162 309 :M
(\312\312A)S
234 309 :M
(\312\31265)S
306 309 :M
(\312\312)S
90 321 :M
(\312\3127)S
162 321 :M
(\312\312R)S
234 321 :M
(\312\31283)S
306 321 :M
(\312\312)S
90 333 :M
(\312\3128)S
162 333 :M
(\312\312T)S
234 333 :M
(\312\31284)S
306 333 :M
(\312\312)S
90 345 :M
(\312\3129)S
162 345 :M
(\312\312)S
234 345 :M
(\312\31232)S
306 345 :M
(\312\312)S
90 357 :M
(\312\31210)S
162 357 :M
(\312\312O)S
234 357 :M
(\312\31279)S
306 357 :M
(\312\312)S
90 369 :M
(\312\31211)S
162 369 :M
(\312\312F)S
234 369 :M
(\312\31270)S
306 369 :M
(\312\312)S
90 381 :M
(\312\31212)S
162 381 :M
(\312\312)S
234 381 :M
(\312\31232)S
306 381 :M
(\312\312)S
90 393 :M
(\312\31213)S
162 393 :M
(\312\312B)S
234 393 :M
(\312\31266)S
306 393 :M
(\312\312)S
90 405 :M
(\312\31214)S
162 405 :M
(\312\312I)S
234 405 :M
(\312\31273)S
306 405 :M
(\312\312)S
90 417 :M
(\312\31215)S
162 417 :M
(\312\312N)S
234 417 :M
(\312\31278)S
306 417 :M
(\312\312)S
90 429 :M
(\312\31216)S
162 429 :M
(\312\312A)S
234 429 :M
(\312\31265)S
306 429 :M
(\312\312)S
90 441 :M
(\312\31217)S
162 441 :M
(\312\312R)S
234 441 :M
(\312\31283)S
306 441 :M
(\312\312)S
90 453 :M
(\312\31218)S
162 453 :M
(\312\312Y)S
234 453 :M
(\312\31289)S
306 453 :M
(\312\312)S
90 465 :M
(\312\31219)S
162 465 :M
(\312\312)S
234 465 :M
(\312\31232)S
306 465 :M
(\312\312)S
90 477 :M
(\312\31220)S
162 477 :M
(\312\312S)S
234 477 :M
(\312\31283)S
306 477 :M
(\312\312)S
90 489 :M
(\312\31221)S
162 489 :M
(\312\312E)S
234 489 :M
(\312\31269)S
306 489 :M
(\312\312)S
90 501 :M
(\312\31222)S
162 501 :M
(\312\312C)S
234 501 :M
(\312\31267)S
306 501 :M
(\312\312)S
90 513 :M
(\312\31223)S
162 513 :M
(\312\312T)S
234 513 :M
(\312\31284)S
306 513 :M
(\312\312)S
90 525 :M
(\312\31224)S
162 525 :M
(\312\312I)S
234 525 :M
(\312\31273)S
306 525 :M
(\312\312)S
90 537 :M
(\312\31225)S
162 537 :M
(\312\312O)S
234 537 :M
(\312\31279)S
306 537 :M
(\312\312)S
90 549 :M
(\312\31226)S
162 549 :M
(\312\312N)S
234 549 :M
(\312\31278)S
306 549 :M
(\312\312)S
90 561 :M
(\312\31227)S
162 561 :M
(carriage)S
201 561 :M
(-)S
162 573 :M
(return)S
234 561 :M
(\312\31213)S
306 561 :M
(\312\312)S
90 585 :M
(\312\31228)S
162 585 :M
(\312\312line-feed)S
234 585 :M
(\312\31210)S
306 585 :M
(\312\312)S
90 597 :M
(\312\31229)S
162 597 :M
(\312\312form-feed)S
234 597 :M
(\312\31212)S
306 597 :M
(\312\312)S
90 609 :M
(\312\31230)S
162 609 :M
(\312\312substitute)S
234 609 :M
(\312\31226)S
306 609 :M
(Stop the listing of the file in MS-DOS)S
90 621 :M
(\312\31231)S
162 621 :M
(\312\312end-of-)S
162 633 :M
(transmission)S
234 621 :M
(\312\3124)S
306 621 :M
(Stop the listing of the file in unix)S
90 645 :M
(\312\31232)S
162 645 :M
(\312\312)S
234 645 :M
(\312\312213)S
306 645 :M
(First non-ASCII value)S
90 657 :M
(\312\31233 .. 40)S
162 657 :M
(\312\312)S
234 657 :M
(\312\312)S
306 657 :M
(Binary section identifier \(64-bit little-)S
306 669 :M
(endien\))S
90 681 :M
(\312\31241 .. 48)S
162 681 :M
(\312\312)S
234 681 :M
(\312\312)S
306 681 :M
(Offset from byte 57 to the first ASCII)S
306 693 :M
(character following the binary data)S
90 705 :M
(\312\31249 .. 56)S
162 705 :M
(\312\312)S
234 705 :M
(\312\312)S
306 705 :M
(Compression type)S
endp
%%Page: 77 77
%%BeginPageSetup
initializepage
(yaya; page: 77 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 67)S
90 81 :M
(57 .. 57+ n-1)S
162 81 :M
(\312\312)S
234 81 :M
(Binary data)S
234 93 :M
(\(n bytes\))S
90 105 :M
(\312\31257 + n)S
162 105 :M
(\312\312carriage)S
207 105 :M
(-)S
162 117 :M
(return)S
234 105 :M
(\312\31213)S
306 105 :M
(\312\312)S
90 129 :M
(\312\31258 + n)S
162 129 :M
(\312\312line-feed)S
234 129 :M
(\312\31210)S
306 129 :M
(\312\312)S
90 141 :M
(\312\31259 + n)S
162 141 :M
(\312\312E)S
234 141 :M
(\312\31269)S
306 141 :M
(\312\312)S
90 153 :M
(\312\31260 + n)S
162 153 :M
(\312\312N)S
234 153 :M
(\312\31278)S
306 153 :M
(\312\312)S
90 165 :M
(\312\31261 + n)S
162 165 :M
(\312\312D)S
234 165 :M
(\312\31268)S
306 165 :M
(\312\312)S
90 177 :M
(\312\31262 + n)S
162 177 :M
(\312\312)S
234 177 :M
(\312\31232)S
306 177 :M
(\312\312)S
90 189 :M
(\312\31263 + n)S
162 189 :M
(\312\312O)S
234 189 :M
(\312\31279)S
306 189 :M
(\312\312)S
90 201 :M
(\312\31264 + n)S
162 201 :M
(\312\312F)S
234 201 :M
(\312\31270)S
306 201 :M
(\312\312)S
90 213 :M
(\312\31265 + n)S
162 213 :M
(\312\312)S
234 213 :M
(\312\31232)S
306 213 :M
(\312\312)S
90 225 :M
(\312\31266 + n)S
162 225 :M
(\312\312B)S
234 225 :M
(\312\31266)S
306 225 :M
(\312\312)S
90 237 :M
(\312\31267 + n)S
162 237 :M
(\312\312I)S
234 237 :M
(\312\31273)S
306 237 :M
(\312\312)S
90 249 :M
(\312\31268 + n)S
162 249 :M
(\312\312N)S
234 249 :M
(\312\31278)S
306 249 :M
(\312\312)S
90 261 :M
(\312\31269 + n)S
162 261 :M
(\312\312A)S
234 261 :M
(\312\31265)S
306 261 :M
(\312\312)S
90 273 :M
(\312\31270 + n)S
162 273 :M
(\312\312R)S
234 273 :M
(\312\31283)S
306 273 :M
(\312\312)S
90 285 :M
(\312\31271 + n)S
162 285 :M
(\312\312Y)S
234 285 :M
(\312\31289)S
306 285 :M
(\312\312)S
90 297 :M
(\312\31272 + n)S
162 297 :M
(\312\312)S
234 297 :M
(\312\31232)S
306 297 :M
(\312\312)S
90 309 :M
(\312\31273 + n)S
162 309 :M
(\312\312S)S
234 309 :M
(\312\31283)S
306 309 :M
(\312\312)S
90 321 :M
(\312\31274 + n)S
162 321 :M
(\312\312E)S
234 321 :M
(\312\31269)S
306 321 :M
(\312\312)S
90 333 :M
(\312\31275 + n)S
162 333 :M
(\312\312C)S
234 333 :M
(\312\31267)S
306 333 :M
(\312\312)S
90 345 :M
(\312\31276 + n)S
162 345 :M
(\312\312T)S
234 345 :M
(\312\31284)S
306 345 :M
(\312\312)S
90 357 :M
(\312\31277 + n)S
162 357 :M
(\312\312I)S
234 357 :M
(\312\31273)S
306 357 :M
(\312\312)S
90 369 :M
(\312\31278 + n)S
162 369 :M
(\312\312O)S
234 369 :M
(\312\31279)S
306 369 :M
(\312\312)S
90 381 :M
(\312\31279 + n)S
162 381 :M
(\312\312N)S
234 381 :M
(\312\31278)S
306 381 :M
(\312\312)S
90 393 :M
(\312\31280 + n)S
162 393 :M
(\312\312carriage)S
207 393 :M
(-)S
162 405 :M
(return)S
234 393 :M
(\312\31213)S
306 393 :M
(\312\312)S
90 417 :M
(\312\31281 + n)S
162 417 :M
(\312\312line-feed)S
234 417 :M
(\312\31210)S
306 417 :M
(\312\312)S
90 429 :M
(\312\31282 + n)S
162 429 :M
(\312\312;)S
234 429 :M
(\312\31259)S
306 429 :M
(Final ; delimiter)S
90 465 :M
f184 sf
(3.3 Compression schemes)S
90 489 :M
f209 sf
(Two schemes for lossless compression of integer arrays \(such as images\) have been)S
90 501 :M
(implemented in this version of CBFlib:)S
90 525 :M
(1. An entropy-encoding scheme using canonical coding)S
90 537 :M
(2. A CCP4-style packing scheme.)S
90 561 :M
(Both encode the difference \(or error\) between the current element in the array and the)S
90 573 :M
(prior element. Parameters required for more sophisticated predictors have been included)S
90 585 :M
(in the compression functions and will be used in a future version of the library.)S
90 609 :M
f184 sf
(3.3.1 Canonical-code compression)S
90 633 :M
f209 sf
(The canonical-code compression scheme encodes errors in two ways: directly or)S
90 645 :M
(indirectly. Errors are coded directly using a symbol corresponding to the error value.)S
90 657 :M
(Errors are coded indirectly using a symbol for the number of bits in the \(signed\) error,)S
90 669 :M
(followed by the error iteslf.)S
90 693 :M
(At the start of the compression, CBFlib constructs a table containing a set of symbols,)S
90 707 :M
(one for each of the 2^)S
195 704 :M
(n)S
0 3 rm
( direct codes from -2^)S
0 -3 rm
307 704 :M
(\(n-1\))S
331 707 :M
( .. 2^)S
355 704 :M
(\(n-1\))S
379 707 :M
(-1, one for a stop code, and)S
endp
%%Page: 78 78
%%BeginPageSetup
initializepage
(yaya; page: 78 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 68)S
90 81 :M
(one for each of the maxbits-n indirect codes, where n is chosen at compress time and)S
90 93 :M
(maxbits is the maximum number of bits in an error. CBFlib then assigns to each symbol a)S
90 105 :M
(bit-code, using a shorter bit code for the more common symbols and a longer bit code for)S
90 117 :M
(the less common symbols. The bit-code lengths are calculated using a Huffman-type)S
90 129 :M
(algorithm, and the actual bit-codes are constructed using the canonical-code algorithm)S
90 141 :M
(described by Moffat, et al. \(International Journal of High Speed Electronics and Systems,)S
90 153 :M
(Vol 8, No 1 \(1997\) 179-231\).)S
90 177 :M
(The structure of the compressed data is:)S
90 201 :M
f184 sf
(Byte)S
198 201 :M
(Value)S
90 213 :M
f209 sf
(\312\3121 .. 8)S
198 213 :M
(\312\312Number of elements \(64-bit little-endian number\))S
90 225 :M
(\312\3129 .. 16)S
198 225 :M
(\312\312Minimum element)S
90 237 :M
(\312\31217 .. 24)S
198 237 :M
(\312\312Maximum element)S
90 249 :M
(\312\31225 .. 32)S
198 249 :M
(\312\312\(reserved for future use\))S
90 261 :M
(\312\31233)S
198 261 :M
(\312\312Number of bits directly coded, n)S
90 273 :M
(\312\31234)S
198 273 :M
(\312\312Maximum number of bits encoded, maxbits)S
90 287 :M
(\312\31235 .. 35+2^)S
0 -3 rm
(n)S
0 3 rm
(-1)S
198 285 :M
(\312\312Number of bits in each direct code)S
90 301 :M
(\312\31235+2^)S
0 -3 rm
(n)S
0 3 rm
198 299 :M
(\312\312Number of bits in the stop code)S
90 315 :M
(\312\31235+2^)S
0 -3 rm
(n)S
0 3 rm
(+1 ..)S
90 329 :M
(35+2^)S
0 -3 rm
(n)S
0 3 rm
(+maxbits-n)S
198 313 :M
(\312\312Number of bits in each indirect code)S
90 343 :M
(\312\31235+2^)S
0 -3 rm
(n )S
0 3 rm
(+)S
90 355 :M
(maxbits-n+1 ..)S
198 341 :M
(\312\312Coded data)S
90 379 :M
f184 sf
(3.3.2 CCP4-style compression)S
90 403 :M
f209 sf
(The CCP4-style compression writes the errors in blocks . Each block begins with a 6-bit)S
90 415 :M
(code. The number of errors in the block is 2^n, where n is the value in bits 0 .. 2. Bits 3 ..)S
90 427 :M
(5 encode the number of bits in each error:)S
94 463 :M
f184 sf
(Value in bits 3 .. 5)S
209 463 :M
(Number of bits)S
106 475 :M
(in each error)S
137 487 :M
f209 sf
(0)S
245 487 :M
(0)S
137 499 :M
(1)S
245 499 :M
(4)S
137 511 :M
(2)S
245 511 :M
(5)S
137 523 :M
(3)S
245 523 :M
(6)S
137 535 :M
(4)S
245 535 :M
(7)S
137 547 :M
(5)S
245 547 :M
(8)S
137 559 :M
(6)S
242 559 :M
(16)S
137 571 :M
(7)S
242 571 :M
(65)S
90 595 :M
(The structure of the compressed data is:)S
90 607 :M
f184 sf
(Byte)S
198 607 :M
(Value)S
90 619 :M
f209 sf
(\312\3121 .. 8)S
198 619 :M
(\312\312Number of elements \(64-bit little-endian number\))S
90 631 :M
(\312\3129 .. 16)S
198 631 :M
(\312\312Minumum element \(currently unused\))S
90 643 :M
(\312\31217 .. 24)S
198 643 :M
(\312\312Maximum element \(currently unused\))S
90 655 :M
(\312\31225 .. 32)S
198 655 :M
(\312\312\(reserved for future use\))S
90 667 :M
(\312\31233 ..)S
198 667 :M
(\312\312Coded data)S
endp
%%Page: 79 79
%%BeginPageSetup
initializepage
(yaya; page: 79 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 69)S
90 84 :M
f220 sf
(4. Installation)S
90 120 :M
f209 sf
(CBFlib should be built on a disk with at least 40 megabytes of free space. First create the)S
90 132 :M
(top-level directory \(called, say, CBFlib_0.6\).   CBFlib_0.6.tar.Z is a compressed tar of)S
90 144 :M
(the code as it now stands.  Uncompress this file, place it in the top level directory, and)S
90 156 :M
(unpack it with tar:)S
90 180 :M
(     tar xvf CBFLIB_0.6.tar)S
90 216 :M
(To run the test programs, you will also need to put the MAR345 image example.mar2300)S
90 228 :M
(in the top-level directory.   The image can also be found at)S
90 252 :M
(http://biosg1.slac.stanford.edu/biosg1-users/ellis/Public/)S
90 276 :M
(After unpacking the archive, the top-level directory should contain a makefile:)S
90 300 :M
(\312\312Makefile)S
162 300 :M
(\312\312Makefile for unix)S
90 324 :M
(and the subdirectories:)S
90 348 :M
(\312\312src/)S
216 348 :M
(CBFLIB source files)S
90 360 :M
(\312\312include/)S
216 360 :M
(CBFLIB header files)S
90 372 :M
(\312\312examples/)S
216 372 :M
(Example program source files)S
90 384 :M
(\312\312doc/)S
216 384 :M
(Documentation)S
90 396 :M
(\312\312lib/)S
216 396 :M
(Compiled CBFLIB library)S
90 408 :M
(\312\312bin/)S
216 408 :M
(Executable example programs)S
90 420 :M
(\312\312html_images/)S
216 420 :M
(JPEG images used in rendering the HTML files)S
90 444 :M
(For instructions on compiling and testing the library, go to the top-level directory and)S
90 456 :M
(type:)S
90 480 :M
(     make)S
90 504 :M
(The CBFLIB source and header files are in the "src" and "include" subdirectories. The)S
90 516 :M
(files are:)S
90 540 :M
f184 sf
(src/)S
198 540 :M
(include/)S
306 540 :M
(Description)S
90 552 :M
f209 sf
(cbf.c)S
198 552 :M
(cbf.h)S
306 552 :M
(CBFLIB API functions)S
90 564 :M
(cbf_alloc.c)S
198 564 :M
(cbf_alloc.h)S
306 564 :M
(Memory allocation functions)S
90 576 :M
(cbf_ascii.c)S
198 576 :M
(cbf_ascii.h)S
306 576 :M
(Function for writing ASCII values)S
90 588 :M
(cbf_binary.c)S
198 588 :M
(cbf_binary.h)S
306 588 :M
(Functions for binary values)S
90 600 :M
(cbf_byte_offset.c)S
198 600 :M
(cbf_byte_offset.h)S
306 600 :M
(Byte-offset compression \(not)S
306 612 :M
(implemented\))S
90 624 :M
(cbf_canonical.c)S
198 624 :M
(cbf_canonical.h)S
306 624 :M
(Canonical-code compression)S
90 636 :M
(cbf_codes.c)S
198 636 :M
(cbf_codes.h)S
306 636 :M
(Encoding and message digest functions)S
90 648 :M
(cbf_compress.c)S
198 648 :M
(cbf_compress.h)S
306 648 :M
(General compression routines)S
90 660 :M
(cbf_context.c)S
198 660 :M
(cbf_context.h)S
306 660 :M
(Control of temporary files)S
90 672 :M
(cbf_file.c)S
198 672 :M
(cbf_file.h)S
306 672 :M
(File in/out functions)S
90 684 :M
(cbf_lex.c)S
198 684 :M
(cbf_lex.h)S
306 684 :M
(Lexical analyser)S
90 696 :M
(cbf_packed.c)S
198 696 :M
(cbf_packed.h)S
306 696 :M
(CCP4-style packing compression)S
endp
%%Page: 80 80
%%BeginPageSetup
initializepage
(yaya; page: 80 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 70)S
90 81 :M
(cbf_predictor.c)S
198 81 :M
(cbf_predictor.h)S
306 81 :M
(Predictor-Huffman compression \(not)S
306 93 :M
(implemented\))S
90 105 :M
(cbf_read_binary.c)S
198 105 :M
(cbf_read_binary.h)S
306 105 :M
(Read binary headers)S
90 117 :M
(cbf_read_mime.c)S
198 117 :M
(cbf_read_mime.h)S
306 117 :M
(Read MIME-encoded binary sections)S
90 129 :M
(cbf_string.c)S
198 129 :M
(cbf_string.h)S
306 129 :M
(Case-insensitive string comparisons)S
90 141 :M
(cbf_stx.c)S
198 141 :M
(cbf_stx.h)S
306 141 :M
(Parser)S
90 153 :M
(cbf_tree.c)S
198 153 :M
(cbf_tree.h)S
306 153 :M
(CBF tree-structure functions)S
90 165 :M
(cbf_uncompressed.c)S
198 165 :M
(cbf_uncompressed.h)S
306 165 :M
(Uncompressed binary sections)S
90 177 :M
(cbf_write.c)S
198 177 :M
(cbf_write.h)S
306 177 :M
(Functions for writing)S
90 189 :M
(cbf_write_binary.c)S
198 189 :M
(cbf_write_binary.h)S
306 189 :M
(Write binary sections)S
90 201 :M
(cbf.stx)S
198 201 :M
(\312\312\312)S
306 201 :M
(bison grammar to define cbf_stx.c \(see)S
306 213 :M
(WARNING\))S
90 225 :M
(md5c.c)S
198 225 :M
(md5.h, global.h)S
306 225 :M
(RSA message digest software from)S
306 237 :M
(mpack)S
90 261 :M
f184 sf
(WARNING:)S
155 261 :M
f209 sf
(  Do not rebuild the parser, cbf_stx.c, from the bison grammar, cbf.stx,)S
90 273 :M
(unless absolutely necessary. There is a problem with the file bison.simple in the standard)S
90 285 :M
(bison release. If you must rebuild cbf_stx.c using bison, you will need)S
90 297 :M
(cbf_PARSER.simple as a replacement for bison.simple. See the cbf_PARSER.simple)S
90 309 :M
(instructions.  In the "examples" subdirectory, there are 2 additional files used by the)S
90 321 :M
(example program \(section 5\) for reading MAR300, MAR345 or ADSC CCD images:)S
90 345 :M
(img.c)S
216 345 :M
(img.h)S
342 345 :M
(Simple image library)S
90 369 :M
(and the example programs themselves:)S
90 393 :M
(makecbf.c)S
216 393 :M
(Make a CBF file from an image)S
90 405 :M
(img2cif.c)S
216 405 :M
(Make an imgCIF or CBF from an image)S
90 417 :M
(cif2cbf.c)S
216 417 :M
(Copy a CIF/CBF to a CIF/CBF)S
90 441 :M
(The documentation files are in the "doc" subdirectory:)S
90 465 :M
(CBFlib.html)S
216 465 :M
(This document \(HTML\))S
90 477 :M
(CBFlib.txt)S
216 477 :M
(This document \(ASCII\))S
90 489 :M
(CBFlib_NOTICES.html)S
216 489 :M
(Important NOTICES -- PLEASE READ)S
90 501 :M
(CBFlib_NOTICES.txt)S
216 501 :M
(Important NOTICES -- PLEASE READ)S
90 513 :M
(CBFlib.ps)S
216 513 :M
(CBFLIB manual \(PostScript\))S
90 525 :M
(CBFlib.pdf)S
216 525 :M
(CBFLIB manual \(PDF\))S
90 537 :M
(CBFlib.rtf)S
216 537 :M
(CBFLIB manual \(RTF\))S
90 549 :M
(cbf_definition_rev.txt)S
216 549 :M
(Draft CBF/ImgCIF definition \(ASCII\))S
90 561 :M
(cbf_definition_rev.html)S
216 561 :M
(Draft CBF/ImgCIF definition \(HTML\))S
90 573 :M
(cbfext98.html)S
216 573 :M
(Draft CBF/ImgCIF extensions dictionary \(HTML\))S
90 585 :M
(cbfext98.dic)S
216 585 :M
(Draft CBF/ImgCIF extensions dictionary \(ASCII\))S
90 597 :M
(ChangeLog)S
216 597 :M
(Summary of change history)S
90 609 :M
(MANIFEST)S
216 609 :M
(List of files in this kit)S
endp
%%Page: 81 81
%%BeginPageSetup
initializepage
(yaya; page: 81 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 71)S
90 81 :M
f184 sf
(5. Example programs)S
90 117 :M
f209 sf
(The example programs makecbf.c and img2cif.c read an image file from a MAR300,)S
90 129 :M
(MAR345 or ADSC CCD detector and then uses CBFlib to convert it to CBF format)S
90 141 :M
(\(makecbf\) or either imgCIF or CBF format \(img2cif\).  makecbf writes the CBF-format)S
90 153 :M
(image to disk, reads it in again, and then compares it to the original. img2cif just writes)S
90 165 :M
(the desired file.  makecbf works only from stated files on disk, so that random I/O can be)S
90 177 :M
(used. img2cif includes code to process files from stdin and to stdout.)S
90 201 :M
(makecbf.c is a good example of how many of the CBFlib functions can be used. To)S
90 213 :M
(compile makecbf on an alpha workstation running Digital unix or a Silicon Graphics)S
90 225 :M
(workstation running irix \(and on most other unix platforms as well\), go to the src)S
90 237 :M
(subdirectory of the main CBFlib directory and use the Makefile:)S
90 261 :M
(     make all)S
90 297 :M
(An example MAR345 image can be found at:)S
90 321 :M
(     http://biosg1.slac.stanford.edu/biosg1-users/ellis/Public/)S
90 357 :M
(To run makecbf with the example image, type:)S
90 381 :M
(     ./bin/makecbf example.mar2300 test.cbf)S
90 417 :M
(The program img2cif has the following command line interface:)S
90 441 :M
f322 sf
( img2cif     [-i  input_image]                               \\)S
90 452 :M
(             [-o  output_cif]                                \\)S
90 463 :M
(             [-c  {p[acked]|c[annonical]|[n[one]}]           \\)S
90 474 :M
(             [-m  {h[eaders]|n[oheaders]}]                   \\)S
90 485 :M
(             [-d  {d[igest]|n[odigest]}]                     \\)S
90 496 :M
(             [-e  {b[ase64]|q[uoted-printable]|              \\)S
90 507 :M
(                   d[ecimal]|h[exadecimal]|o[ctal]|n[one]}]  \\)S
90 518 :M
(             [-b  {f[orward]|b[ackwards]}]                   \\)S
90 529 :M
(             [input_image] [output_cif])S
90 552 :M
f209 sf
( the options are:)S
90 576 :M
( -i  input_image \(default: stdin\))S
90 588 :M
(     the input_image file in MAR300, MAR345 or ADSC CCD detector)S
90 600 :M
(     format is given.  If no input_image file is specified or is)S
90 612 :M
(     given as "-", an image is copied from stdin to a temporary file.)S
90 636 :M
( -o  output_cif \(default: stdout\))S
90 648 :M
(     the output cif \(if base64 or quoted-printable encoding is used\))S
90 660 :M
(     or cbf \(if no encoding is used\).  if no output_cif is specified)S
90 672 :M
(     or is given as "-", the output is written to stdout)S
90 696 :M
( -c  compression_scheme \(packed, canonical or none, default packed\))S
endp
%%Page: 82 82
%%BeginPageSetup
initializepage
(yaya; page: 82 of 82)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 728 rC
90 753 :M
f209 sf
(CBFlib 0.6)S
477 753 :M
(Page - 72)S
90 81 :M
( -m  [no]headers \(default headers for cifs, noheaders for cbfs\))S
90 93 :M
(     selects MIME \(N. Freed, N. Borenstein, RFC 2045, November 1996\))S
90 105 :M
(     headers within binary data value text fields.)S
90 129 :M
( -d  [no]digest  \(default md5 digest [R. Rivest, RFC 1321, April)S
90 141 :M
(     1992 using"RSA Data Security, Inc. MD5 Message-Digest)S
90 153 :M
(     Algorithm"] when MIME headers are selected\))S
90 177 :M
( -e  encoding \(base64, quoted-printable, decimal, hexadecimal,)S
90 189 :M
(     octal or none, default: base64\) specifies one of the standard)S
90 201 :M
(     MIME encodings \(base64 or quoted-printable\) or a non-standard)S
90 213 :M
(     decimal, hexamdecimal or octal encoding for an ascii cif)S
90 225 :M
(     or "none" for a binary cbf)S
90 249 :M
( -b  direction \(forward or backwards, default: backwards\))S
90 261 :M
(     specifies the direction of mapping of bytes into words)S
90 273 :M
(     for decimal, hexadecimal or octal output, marked by '>' for)S
90 285 :M
(     forward or '<' for backwards as the second character of each)S
90 297 :M
(     line of output, and in '#' comment lines.)S
90 357 :M
(The test program cif2cbf uses the same command line options as img2cif, but accepts)S
90 369 :M
(either a CIF or a CBF as input instead of an image file.)S
endp
%%Trailer
end
%%EOF
