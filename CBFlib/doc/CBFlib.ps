%!PS-Adobe-3.0
%%BoundingBox: 54 72 558 720
%%Creator: Mozilla (NetScape) HTML->PS
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%Pages: 58
%%PageOrder: Ascend
%%Title: CBFlib Manual
%%EndComments
%%BeginProlog
[ /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
 /two /three /four /five /six /seven /eight /nine /colon /semicolon
 /less /equal /greater /question /at /A /B /C /D /E
 /F /G /H /I /J /K /L /M /N /O
 /P /Q /R /S /T /U /V /W /X /Y
 /Z /bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft /a /b /c
 /d /e /f /g /h /i /j /k /l /m
 /n /o /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /space /exclamdown /cent /sterling /currency /yen /brokenbar /section /dieresis /copyright
 /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf
 /threequarters /questiondown /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde
 /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
 /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
 /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
 /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] /isolatin1encoding exch def
/c { matrix currentmatrix currentpoint translate
     3 1 roll scale newpath 0 0 1 0 360 arc setmatrix } bind def
/F0
    /Times-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f0 { /F0 findfont exch scalefont setfont } bind def
/F1
    /Times-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f1 { /F1 findfont exch scalefont setfont } bind def
/F2
    /Times-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f2 { /F2 findfont exch scalefont setfont } bind def
/F3
    /Times-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f3 { /F3 findfont exch scalefont setfont } bind def
/F4
    /Courier findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f4 { /F4 findfont exch scalefont setfont } bind def
/F5
    /Courier-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f5 { /F5 findfont exch scalefont setfont } bind def
/F6
    /Courier-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f6 { /F6 findfont exch scalefont setfont } bind def
/F7
    /Courier-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f7 { /F7 findfont exch scalefont setfont } bind def
/rhc {
    {
        currentfile read {
	    dup 97 ge
		{ 87 sub true exit }
		{ dup 48 ge { 48 sub true exit } { pop } ifelse }
	    ifelse
	} {
	    false
	    exit
	} ifelse
    } loop
} bind def

/cvgray { % xtra_char npix cvgray - (string npix long)
    dup string
    0
    {
	rhc { cvr 4.784 mul } { exit } ifelse
	rhc { cvr 9.392 mul } { exit } ifelse
	rhc { cvr 1.824 mul } { exit } ifelse
	add add cvi 3 copy put pop
	1 add
	dup 3 index ge { exit } if
    } loop
    pop
    3 -1 roll 0 ne { rhc { pop } if } if
    exch pop
} bind def

/smartimage12rgb { % w h b [matrix] smartimage12rgb -
    /colorimage where {
	pop
	{ currentfile rowdata readhexstring pop }
	false 3
	colorimage
    } {
	exch pop 8 exch
	3 index 12 mul 8 mod 0 ne { 1 } { 0 } ifelse
	4 index
	6 2 roll
	{ 2 copy cvgray }
	image
	pop pop
    } ifelse
} def
/cshow { dup stringwidth pop 2 div neg 0 rmoveto show } bind def
/rshow { dup stringwidth pop neg 0 rmoveto show } bind def
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
gsave
/rowdata 132 string def
1.4 694 translate
61.6 24.5 scale
88 35 4 [88 0 0 -35 0 35]
 smartimage12rgb
dddddddeedeeddddddeeeddddddeeeddddeeddddedddddeedddddddddddddeeddddddddddddddd
dddddddddddddddddddeeddddddeeeeeeddddddeeeddddddddddddeeedddeeedddddddeddddddd
dddeeeddddddeeecddeeedddddddedddddeddddddddddddddddddddddddddddddddddddddddddd
ddddddeeecccdeddeeddd666566565eeedddcdddedeeedddddddeedddddddddddddddddddddddd
deddddddddddddddddddddeedddddddddddddddddddddddddddeeeeeecccdddeeecddddddddddd
eeeddddeeddddeeeeedeeeeeddddddddddddddddddcccfffcccddddddddddddeeedddddddddddd
deeddddeededdddddddddddddddddddddddddddeeedeecdd999555555666deedddcccbbbbcbbbb
bbbbbbbbbbbbbbbbcbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbcccdddeffeeecccdddeeedddeeeddddedddddddddddddddddddddddddeeeddddddeeeeeeddd
eeeeeeddddddeeeccceeedeededdddeeedddddddddddddddddddddddddddddddddddddddcdd999
999455666555dddeeeccc999aaa9aa9999999aa999aaaaaa9aa9999999999999a99aa9aa9aa9aa
9aa9999a99999999999a99a99a9999999999cdcccccccddd999888888cccdddcdc888888999ccc
dddddddddcdcccc899888888cccccccccdddbbbcdd888999888888899888ccccccccccccdddddd
dddddddddddddddddddddccc999899899666666555eeedddbcbaaabccaaa9999aa9aa999cddbbb
ccc9aaaaa999ccccdccccccccccdddcddccccdcccccccccccddcddcdcccc999ddddddcccdddbbb
888888999cdcccccdc888999888ccccccccccccdddcdc999888899cccdddccccdccdc999888787
898888899898ddddddddddddcccccccccccccccccccccccccccccc888999999566566666eeeddd
bcbaaadddcccaaa999999aaacccddddddccc999aaacdddddcddcccccccddcddccccddcddcddcdd
dddcddcccccccdc888cccdddcccddd999888888ddddddddd888888888dddcddccccccdddccc888
888888cdccccccccdc888888888999888888888999ccccccdddccccdccdccdccdccdccdccdccdc
cccccc999888999555666555ddddddccc999cccdddccc999999aaaaaaccccccddd8889aabccccc
cddcccccccdccddcccccccccccccccccccccbcbbbbaaacccdddbbbdddccc888888888ccccccccc
899999888cccddddddcccccccdc888898888ccccccddd888999888999cccdddcccccccccdddddd
dddccccddcddcddcddcddcddcddcddcccddd888999888666566555eeedddccc9aaccccccdddcdc
aaa999999999dddccc999aaaaaabcbcddcddccccccccccccdddcddcddcddcddcccbcbbbbcccaaa
ccccddcccccc899888888ddddddccc888888888dddcccccccccccccdd888899888ddddddccc898
888888dddccccccccccdcdddcccccccddcccccccccccccccccccccccccccccccdd898899999555
666666eeedddcccaaacccdddccccccccc9999aa999dddcccddd9999a9cccdddccccddccccccddd
ccccdccccccc9aa9a9cccddd999aaadddccccccddd888899888ccccccddd888999888cddcccddd
cccdddcdc888888888ccceeeccc888899999ccccddcdddddcccdddccccccdddbcbcccccc888999
777ddddddcddcdcccc899899899666566566dddeeeccc8999aacddccccdddddccc999aaa999cdd
cccaaa999dddcddccccccdddccccccdddccccdd9a9cccdddddd899dddccccccddddddccc888888
888ddddddccc888888898ccccdcdddccccddddd888888888cccdddccc888888899dddcdccccccc
cccdddcdddddbccaaa888888888899899dddcccccccdcccc899899899666566566ddddddbccaaa
9999999a9dddcccccc999999999cccccc999aaabcccccdeebcccccdeeccccdcccc999dddcdd888
9a9dddccc9aadddcccbbbddd888888888cccdddccc888888898cccccccdcdddcdcccc788888999
dddccccdd999888888dddcccdddccccccdddcccccc999777888888999888999ccccdcdedcdcccc
899899899666566566deeeeebcb9999a9aaa999999cccccccddaaa9aa9aadddcdc999dddcccccc
dddcddccccccccc999dddccc999dddcdd999aaacccdddcccdddddd888898888ccccccddd888888
898ddddddddddddcccddd999898888dddcccddd888888888cdcddddddccccdcdddcccddd898888
787999ccccccddddddcccbcbcdcccc899899899666566566deedeeccc899aaa9999a99999aaabb
bccbccaaa898aaaccc9aacddcccccccccdddcccaaa9aacccddd999dddddd999dddcccaaabccddd
cddccc888888888dddcccddd888898888cccccccccdddcccccc888888999ccccddccc888999898
cccddddddcdcdddccccccddd888888999ccccccddddddcccddddddcdcccc899899899666566566
eeedddcccaaaccc999aaaaaa999999aaaccccccaaa9999aa999ccccddcccdddcccaaaccccccaaa
899cddccc999ccccccabb888ddddddbbbddd888888888dedcccccc888899888999888cccddd898
888999999777cccdddccc888888888999bbbccccdccddcccdddddd888999898dddcccdddcccccc
dddcdccdcccc899899899666566566eeeeeebcb999ddddddccc8999aa999999999aaa888999aaa
9aa999dddcccbccbbbbcccdd999cccddd899abbdddcdd999999dddcddccceeeccc788888888ddd
cddccc999888888888999888777888999888788999cdccccccc9aa888888888999888888898999
cccccc888888888cddcddcdccccccccdcccccdcccc899899899666566566dddeeebcbaaacccccc
dddcddcccccc9aa999999aaa9999999aa999ccc9999aaccccdc999dddcdd999dedbccccc9aacdd
ccc9aacccdddcccddd898888999cccddddddccc888888899888888888999888888999ccccdcccc
dddbbb899999888888888888888888cdccdd888888888cccdddccccdddddccccdccdcccc899899
899666566566eeedeecccaaaccccddcddccccccddddddcccaaa9999999aa9aa888aaadddccc9a9
9aaccccdd999cccddd999999dddccc99a99accddddccbccb999889898ccbcdbddbccedce988887
88999a888888998cccdddcccccdddedceddecccccd998887899889999999bcccdd89889799accc
ccccddcceccddddccccdcccc899899899666566566ddddddbbb9aaccccddcddcddcddccccccccc
cddcccabb9999aaaaaccccccaaacccdddaaa899dedccc999cdddddcccded99a99accddddcdcddc
bccccccdbddccdbcdbccdccdccbddcddddddcccccccccddccccdddccdccdccddceccdddeccccdc
ccdccdccdccccdddddccbcdbcccddecddcddccdccddddcdccdcccc899899899666566566eeeeee
ccc999aaa9999999999aa9999999999aa9aa999898999999999aaa9aa9a99aa999899aaaaaa898
9999aa9a9899999aa9ccecceccbcdccdddddcddccdccccdccddccddddccdcdccdccdcdddccdccd
cccccddddcccdddccccccccccdddddccdddeccccddcdbccbcddcddcdccddccdcccccccccccdccc
cdcccc899899899666566566ddddddbcb999aaa9a99999999aa9aa9aa9999999999aaaaa9aa9aa
999999aaa9aa9999aaaaa9999999aa9aa9999999aa999aa9ccecceccbcdccddbccccdcdddddccc
ccddddccccddccbccccdcccccccddddddcdddddccccddcddcdcccccddcccccdccdcccdddcdccdb
cddccdcddcccccdccdcdcddcccdcddcdcccc899899899666566566eeedeebccaaacccdddcddccc
cddcccccccdccddcddcccccccdcccccddcddbcccdcdddbccccccddcccccccdccddcccddd9a89a8
cceccecdccdccdd9ab99cbbedeecddbcdcdd99abcdcdccdccddcdccddcddcddbcccdccdcccccdc
cdccddcddcddcdeccdcddcddcdbcdbcceddedddcccccdccdcdccdcccdccdcdcccc899899899666
566566ddddedbcc9999aa9999999999999999999999aa9aa999999aaa999999aaaaaa999999aaa
9aa9999aaaaa8999999aa9999a99a8cceccecdccdccdd89acdfccfcddcddccdcde99adefcdcccb
cdccdccddcdccdccdccdcdedccccdccdccdccddcddcdeccecddccdcdbddcccdccdccccdccdddde
ddccdcccdccdcdcccc899899899666566566dddeeeccc999aaa999999aaa9a99a99a9999999999
9a9aaa899aaa999898aaa9aa8999a99999aa999aaaaaa9aa999aaa9a99a9ccdccdcddbcccdf89b
cdfbcfbcdcdecdfbce9aaacccddcdccdfbceccfbcfccfccfbbcddecddbcccdfbceccfccfbcdcde
bcfbcfcdfcdfcddcdccdccdcbcfccfccfcceddccdccdcccc899899899666566566eeedddbbb9aa
cccdddcddccccddcccccccdccddcddccccccdddcccccccddcdccdccddccccdccddcccdddbcccdd
cdcccc9989a9cddcddcddbcccdf89bbcfcdfbdecdeabe9acbcdcdecdccddccf99c89d89d99d89c
9abccdbcc9aabce99b99d89d89abcd9ad89c89c89bbcccdccdccdc99c89c99b99ccdccdbcdcccc
899899899666566566ddddeebcc999aaa9aa9a99aa999999999999999999999999999999999999
9999999999999999999999999999999999999a99aacdcbcbcddcddbcf89d89a8ab89b89a89d89d
bdccddccebce89acddcddcddbcdbdd89bbcecdf88b89bcdfbcdbdd89e89ebddbdcbce89bcdfbce
ccf78ecedbdcbcdcde89bcdfcdcccc899899899666566566deeeeeccc9999aa9999999a9999999
9999999999999999999999999999999999999999999999999999999999999999999999aacdbcdc
cddcddcdf89dbcdbcebdecdebcf9aebddbddcdf9acbcccdebccbcccdebdd9accdfcdf88bbcecde
cddcdd89ebcfbdccedbce89bbdebdfbcf99fbcccdccdfcde9acbcfcdcccc899899899666566566
deedddbbb9aacccdddcddccccddcddcddcddcddcddcddcddcddcddcddcddcddcddcddcddcddcdd
cddcddcddcddcddcdd99a9aacdbcdbccdcddbcf88dcedcddbcdbddbcf88dbdccdcbcf88bcddcdd
bdbcdbcddcdc88bccfbbf89dcdebcdcdbcdc89cbdfcdebdeccf89ecdcbdc89e78d8ab8ab67c89e
cdebcdcdcccc899899899666566566ddddeeccc9999aa9999999aa999999999999999999999999
99999999999999999999999999999999999999999999999999a9aacdbcdbccdccdaae99ebdcbdd
bddcdeccf89ecdccdcbcf89ccddbcccdbceccdcbcc89ccdf99dbcfcdebcdcdbbdb89cbcfbdebcd
bcf99ecdcbdc89ecdfbddbcdcdfbcfbddbddcdcccc899899899666566566eeededbbb9aacccddd
cddccccddcddcddcddcddcddcddcddcddcddcddcddcddcddcddcddcddcddcddcddcddcddcddcdd
99a99acdccdbcddcdd89cbbfcdccddcddcdcccf99dcdccdccde9abbcfddfbbfccfbbf99ebcecdf
889cdeccfcdfccf99dbcdddebcccdd89cbcfbdbcdc89dccfbcdcddbcf89c8aacddcdcccc899899
899666566566ddddedccc9999aa9999999aa999999999999999999999999999999999999999999
99999999999999999999999999999999a99addcccbcddcdd99cddfcdccddcccbbbaae99dccccdc
bcdcde99c77b99e99f89dccfcdfbce9aacddccebceccf99dcdeccecccddd99cccfcdbcdccdf89c
89a9ab89c89cbcdbddcdcccc899899899666566566eeedeecccaaaccccddcddccccccccccccccc
cccccccccccccdccdccdccdccdccdccdccdccdccdccdccdccdccdccdccdc9aa99acddccccddcdc
bbdcdfcddcddcdddddccecceccccdccddbcccdddeebccccddddccccddcddccccddcdccccdecbcb
ccccccddbddbcccccdddccccbceccfcddcdcccdcddcddcddcdcccc899899899666566566deddee
bcc999aaa9a99999999999999999999999999999999a99a99a99a99a99a99a99a99a99a99a99a9
9a99a99a99a99aa99acddcdccdcbccddfbcecddcccccccddcceddfcccddccddcddcddccccddcdd
bcccddccccddcdccdccdccdccdccdccccedeccbddcccdccdcdccdcccfccfccccdcccdccdcddcdd
cdcccc899899899666566566eeeeeebbb666666565666666666666666666666666666666666666
666666666666666666666666666666666666666666666666777787888888888888888888888888
888888888888888888888888888888888888888888888888888888888888888888888888888888
888888888888888888888888888888788888888899899666566666eeeccc999777888888787777
787787787787787787787787787787787787787787787787787787787787787787787787777788
888888888788787788888888888888888888888888888888888888888888888888888888888888
888888888888888888888888888888888888888888888888888888888888788888888888898666
566666ddd999777777888888788777888888888888888888888888888888888888888888888888
888888888888888888888888888888888888888788888888888888888888888888888888888888
888888888888888888888888888888888888888888888888888888888888888888888888888888
888888888888788788788888888666566666
grestore
64.4 692.6 moveto
12 f0
( ) show
gsave
/rowdata 132 string def
68.6 694 translate
61.6 24.5 scale
88 35 4 [88 0 0 -35 0 35]
 smartimage12rgb
6da4c95eb4d93ea2ea4da4da5c95da4ea3da5da5da3d93ea4da4da3d94da4da4da5da5d95ea4c9
4ea3d93d93ea5da4d93ea3d96eb4c95da5da3d94da6ca6da2e93ea3ea3d96da6da4ea4da4da4da
4c95da3d94da5c95c94eb3ea4da4d95ca5da5da4da4d95ea4d94d92d93ea5da5da3ea3ea6ca6ca
4da4da4ea3c94da4da4c90850750745ca6db3c94ea2ea2ea3c95eb5da5da4ea3d94da5da3da3ea
4d94d94da4ea4da4d95d95da4c95ea3ea3ea4ea3d94d95ea3d94ea4c95ea4c94c94d94ea5c96ca
3ea2ea3d94fb5c96ca3c94da4da5ea5da4d94ea4da5da6da3d93d94da4da6da4c94c94da5da4d9
5da5ea2d92e95da5da3ea3ea6ca6ca4da4da3d95eb5ea4d91850740740854ea4ea8cacfe4d9aff
4d9aff4ea9ff4c9aff5daaff4c9aff6daaff5daaff4c9aff6daafe4c9bff3c99ff5ea9ff5c9bff
4ea9ff2e92ea2fa2fa4fb2d94fa3d94d95da6b9cffeffeffaffaffdfeeffbffbff7b96b92ea1e9
3ea3ea4fb2d92e93fa2ea2ea3d93d93ea3d93ea3e94da4da2ea2ea3ea3ea3ea3ea3d93d93d9095
0850630850744ea5ebdff5972a72b72b72b72b81a74d91a63b82b72a73b83a83a72b73b83b83b8
3a73a73a73b82b72b81a63b84b83a71b71b71d80b70c70d80a61b71b71b73b8affcff5a8687efe
2a72a7eff6983975b8cffcff0d80c71c80b70b71c80c80c70c70d81b72c81b70b71c81c81b71b7
0c70c70c70c71b71b72c81b80950850850850750745da4da8db5a83b8aff1c88ff4a7cff0b71c8
9ff1b7aff3a78fe1b70c70c70c70b61d80c80c70c70d80b60d80c80b60c7aff3a70b60b70c70c8
1c81c83a7bff9ff2b80b70c70d80c7dff4871d88ff1b72b80b70c7cfe5971b71b80d80c70d80c7
0c70c73a73a75877a90a61b70c70c70c70c70c70c70c70c71c80b70850950850840740745eb5da
6b9cff3b82b71c80b7cff5a80b71c81b72c8aff2a71c80b70c80c80d80c80b70c70c70b70c70d8
0c70c70b71c83a72a71c81c80b71c80b70b7bff4a71a71a71d80c70c70c7597dff0b70b79ff1a7
0c70d86a8dff2c80a60d80d80c70c70c70c73a7bffdffdff9ff2c80c70c70c70c70c70c70c70c7
1b70b70a60840950740740746da5dabff4a80c70d81b89ff1a72a79ff1b70d80d80a79ff0a71b7
0c70b70c70e80b60d80c70d80c70d80c70c71c80b7bff3a70c70c70d80c72a7aff0d70c72c80b7
0c80b70c70e82b72b8dff597497dff4a73a71c80a6bff5b90c70b72c81b82b73b8effdfe0d70d8
dfeeff0c70c70d70d70c70c70c70c70b71c80850950840960740745da6eb6cabff0d80c71b81b8
2b89ff1b71b80c70c71c81b79ff1b70c80c70d80c70d80c70c70b70d80c70c70c78ff1b73a73a7
0c70d80c70c7aff2a70d70d80b71b70c80c70d80c72b89ffcffdffdffcffbffbff0b71c83a7bff
0c70c81b71b82b79fedff7a80c70d7fffeff0c70c70c70c70c70c70c70c70b70c7095095085084
0740856eb5da6da2a71b71b80d80c72b81a62d98ff2a72b70c70c83b82a71c70b70c70c70c70c7
1c80b61c80c78fe1c82b81a70c78ff0c80c7497cff1b71b71c71c80c60d70d80c71b71b77ff0b7
4a7cff0d80c70d80c7dffdff3965b8cff4a70c80c7597dff8ff0b70c70d80b71c80c70c70b71c8
1b72b80d70d70c70c80950950850840740745da5daaff3b88fe1b70c70d81b72c80b61c8aff3b8
0c70c79fe3b71c80b70c70c70c70b71b71c80b71c82c80b71a7aff0c70c70b70c84a7cff9ff2c8
0b70b70e90c70b60d81a79ff0c81d8497cff0e80c70c70d8486dffbffafecffcff0c70d8dfedff
0b71c80c70c70b70c70c70c70c71c81a61b70c70d70c70c80950950850840740746eb6da7dbafe
2b82b7aff2a70c70b72c88ff2b72b82b89ff2b72b70c70c70d80c70c70c70c70b78ff0c80c70c7
1c81b71a79ff0d70d82b79fe2b7aff1c71b72a73b83a7afecff4971b71b7677fffafe5b93a73a7
aff2b80b70c8396bff0c81c8ffffee2c81b81c81b72b72b81c80b70c70e80d80d80c70d80c70c8
0950950850840740745c95da6ca4a82c89ff3b83b88ff1c80a61b73c99fe1a72b89ff2b70b70c8
0d80b60d80c70c71c80c70b78ff0b71b71b72b81a70c70c72a7aff3b82b78ff1c83b79febff3a7
5a7cff1b72c8ffffff4a8bfebffbff2a72b80c80c75b8bff0b70b7ffffff1b70a71b78ffaff2b7
0b71c80e80d70b60c70c70c70c70c80950950850840740747eb5ca6dabff1a71a79ff2b82a7aff
0c80c79ff2b83b82a73b82a71c81c80c70c80b70b79ff1b71b71c81c81c89ff0a63a7aff0c70d8
4a7cff0b60c7efffffaff3c80c70d80d80d7cffcfe0c70c70b71c8cff5a80d80c70b70c84a7afe
0e90d7cffcff2b72b8ffffff0b60c71c81b70b70b70d80d80c70c80c70c8095095085084074074
6ca6dabff2a72b89ff1b71b7aff2a70c70c71b71a7aff3b89fe3b80b60b70c70c88ff0b71b71b7
9ff1b71c80a61b72c83b82a70c80c7497cff0b71c8798efe3b82a70c70c70d70c7497cff0d80d8
0b70c7bfe5a80d80d80c80c84a7cff0d70c7597cffaff9fffff8870d80d81b71c80c70b60d80c7
0b70c70c70c80950950850840740745eb4da7da4a80c71d80c70c82b7aff2b89ff1c88ff0a71b7
2a7aff1c81c81d80b71b71c8aff2b71b71b79ff2c80a61b8aff1a70d80d74a7bff0e80c73a7aff
0d80c70d80d80b71c80c70c8dffdff3a7bff0b70c70c70c70c70b74a7cff0b70d80d70d80a71b7
0c71c80c70c71b79ffdff5a80b60c81c80c70b70c80950950850740740745ea5ea7cacff0c70c7
0d80c72b72b71a73c80b70b78ff1b7aff1a61c70b77ff0c71c80b71a72b89ff2b71b71b79ff1b7
2b81a70d70d84a7cff0c70d73a7aff0d80c70d80c71c80b70c70d8597cffbff4a80c80c80d80c7
0c80c74a8bff0c80c70e80c62c81b70c70c70c70d72c89ffcfe5a80c70c70b70c70b70c8095095
0850740740745da5dabff3a80b70c80d80c70b71c80c80c70b78ff2a72a71b71b79ff2b70c70c7
afe3b80c70c70d80c7bff3a70c70d7cff4970c70d82a7aff0c70c73a7aff0b71c70c70c70d70d7
0c70c74a7cff0c70c70c70c70c70c70c70c73a7bff0c70c71b71b70c70c70c70c70c70c7feefff
0c70d80c80c70d70c70c80c80950950950850740745da6ea7ebaff0b70c70c70d80b71c81c80b7
0b70b79fe3b89ff1c81a62b80d80b73b8aff0c70c80c70d83974a80d80c7497cff0c70c73b8aff
0d80c73a7aff0b71c70c70c70d70d70c70c74a7cff0c70c70c70c70c70c70c70c73a7bff0c70c7
1b71b70c70d80c80c70d80d7ffffee0d70b60c70c70c70d80b70b70950950840840740845da5ea
7ca4a89ff1b7cff597bff3a7aff2b8bff3a71c88ff3a73a7aff2a7aff3b81a72b74a7bff2b72b8
9ff1c8296bff2b81a71c81b7397bff0b60d82b7aff2b72b70d70d70c70c70c70c73a7bff0c70c7
0c70c70c70c70c70c73a7bff0c70c70c70c70c70d70c70c73b88fdbfe5a81c81c70c70c71b71a7
1c80b70960960850840740745da5eb7dabff1b72c8cfe5a8397bff1a72b74a8bff0b71b73a7aff
2b72a73b83b8aff2b7bff3972b89fe0b71c8bff3a72a7aff0a61c84a8cff0d80b72b7aff2b72b7
0d70d70c70c70c70c73a7bff0c70c70c70c70c70c70c70c73a7bff0c70c70c71c80c70d70b70c8
196affcff4970b70b70e90d81a73c80c80b70950950840850740746eb5dabff3a82b81a71c80b7
4b84a80a72c82b82b81a72b70b72c80c87ff0a61b71a72b80d70d81b72c81b71b70c80c7aff3b8
0c80b6597cff1b71b84a7bff0c70c70c70c70c70c70c70c73a7bff0b70c70c70c70d70d70b71c7
4a7bff0c70c70c70d70c70d80c70c7697dfe8ff0b70c70c80c70d70d80c71c80b7095095084085
0740755da5da7db3a89ff2b78ff1b7bff3979ff1b79fe1b73c89ff1c88fe0b70d82c89ff2b89ff
0c60e89ff1a72c89ff0c70d82a7aff0c80c75a8dff0a61b74a7bff0c70c70c70c70c70c70c70c7
3a7bff0b70c70c70c70d70d70b71c74a7bff0c70c70d70d70d70d70c70c7dffdff1b71b70c70c7
0d80d80c70d80b71c80950950850740740746da5da7dabff0c70d80b60d80c80d81b72c90c80c7
bff2a72a63b80d80c7bff4a70c80b62c89ff3b89ff0d80b79ff2b8aff2a70c70c70c70c7dff597
3a7bff0c70d70c70c70c70c70c70c74a7bff0c70c70c70c70d70d70c70c7597cff0c70c70c70c7
0c80c70c70c7bffbfe0c70c80c80b75975873a73a71b72d90840850950740740755da6ebbff4a7
0c70c70d86ff0c70c71b79ff0c70d82a73b83b8aff0d80c74a83970c70d81b71b72b73b80c70c7
3c81a72a7aff0c70c70c70c7cfedff3a7bff0c70d70c70c70c70c70c70c74a7bff0c70c70c70c7
0d70d70c70c7597cff0c70c70c70c70c70c70c70c73a74a80c70c70b71d8dffdffaffbff9ff8ff
0960850950740740746da5da7ebbff1b89ff1b81b7aff2a77ff0c7397bff0b78ff2a73b83a7bff
1b78ff4a7bff2b7aff1963b8aff2b73b8aff2a72a70c70c70c70d81b78fe697dff0c70c70c70c7
0c70c70c80c73a7bff0c80c70c70c70c70d70c70c7598dff0d70c70c70c70c70c70c70c70c70c7
0d80b61b71b7dffdff0d70c71b71b80850950850740740746da6eb5c94b81b71b71b79ff3a73b8
0c80c7bff3970b71b7aff2a7bff4b80a61c8bff4a72b72b74c99fe2b72b8aff2a72b7aff0c70b7
0c70c72c81b8dffcfe0d80d80c70c70d80c70b70c84a7bff0b60d80b71d80c70d70c70c7597dff
0c70d80c70c70c70c70c70c70c70c70c70c71b79ffdfe5970d80d81b71b8085095085074074074
5da5da8dbcff1b70a73b83a72a72a72a72b72b81b72c91b70b61c83b83b72a73b80c70c73b8196
1b72c81c70c71b71b7aff2b70d80c70d80c70b70b71c88ff3a73b80b60c70c70c70b71c82a7aff
0c81d81b71b70c80c70c70c85a8bfe0d80c70c70c70c70c70c70c70d70d70c70c7798dfeeff687
3963a70b71c80850950850840740746eb4dabff4979ff1b7bff3b8aff2a7aff2b88fe1b78ff1b7
8ff0c72a7aff2b79ff0d86ff2b7aff2b79ff0b70b79ff1b72b71a70c70c70b70d80c70c80b71c7
afe4b80d80c70c80c71c80b72a7aff0c70b71b71b70c70c70c70d8497cff0d80c70c70c70c70c7
0c70c70d70d70d80c7effeffdfeeffbffbfe0b71c80850950850840740745da5da6db4a81a71b7
0c70c71a72a71b72c80c70c83c82b72b82c80b71b70d80c72a72a70b71c80b71d81a71b71b71b8
3b8aff0c70d82c80a60d80c70c70d81a79fe1c81b70b71c72b81a78ff0b78fe9ff1a62a70c80c7
0c70c72b7aff0c70c80c70c70c70c70c70c70c70c70b71c8effeff0c70c70b70c80b70c8095095
0850840740746ea4c96dbaff1a79ff0d80d8aff4c90a68ff0c80c89fe2b81a69ff1b78ff0c70c7
bff3b82c88ff0b70b69ff2b78ff1b79fe3b80d80d70a62c80c70d80c70c73c82a78ff1c81b70b7
2a7aff0b71c72c81b7aff3b80b70c81c80b79fe3c80b60d80c70c70c70c70c70c70c70c70b70b7
dfeeff0c80c80c70c70b70c80950950850840740745da7fcafe4a80c80b71b71b71b71b70c80c7
3c81a71c81c80c70c82b72b71c80b60d80d71a72b81b71b80d80c72b71b71b79ff0b60b71d90c8
0c70c70c70d80a62c80c87fe4a84a8bff4b80c70c72a72a72a7aff0c70c71b79ff1c71c80c80b7
0c70c70c70c70c70c70c70c73a7bffcff3960c70d80b70c70c70c80950950850840740746eb5da
7dbbff0b70c89ff1b71b79ff0b70c79ff2b81c88ff0c70c7aff2a70b78ff0c70c79ff2b82c88fe
0c70c71b79ff2b72b80c70c70c70b60d80c70c70c71c81c80b60c8bffbffbff3a70c70d83b82a7
2a7aff0c70c89ff1b70c70b70c70c80c70c70c70c70c70c70c70c74a7bffbfe4a70d80c71c80c8
0c70c80950950850840740746da6da6da0750645ca0640745c90740855c90740745c90740745c9
0740745c91750645c90745c90740745c90745c90740854b8085074085074085074085074074085
0740741864b86b96b92642751642647ca6b96ca4a8186074074074084074074074074074074074
0740740740740740740740740740740740840850850850850740745da6da064085074064186074
075085063075085064085074074175064175075063175175064074175053185175074074064296
0740740850740850740740740750850740740741851643865987ca7ca6a85a8275174164074074
074085084074074074074074074074074074074074074074074074074074074084085085085085
0740746da185063074074074063085063085074074075074074074074074074075074074085063
074074074074074074063085074075074074085074074074074074085074074074074074175074
175074064174175074074074074074074074074074074074074074074074074074074074074074
074074074074074084074085085084074074
grestore
131.8 692.6 moveto
12 f0
( ) show
gsave
/rowdata 132 string def
135.8 694 translate
61.6 24.5 scale
88 35 4 [88 0 0 -35 0 35]
 smartimage12rgb
dbddacaccbcccbacbbcccbccccadcbcbccbcbbbccccbccbcbcbbdbcbbcbcccdbbcccacbacbddbd
cbbcbcbcbbccbacdcdbcaccbdacebdccbbbb8dd59a695ad97ef6df8ea4a6fe0ff03a57fadacdac
7ef39b3898ceccaccacbccbccbccbccb9dcabcbbcbbcbbcbcbbcbbcbccbcbccbccbccbccbccbcc
cbccbccccbbbcccbbbcccccccccbbbdbddbcaccbdccbacbabbcbbccbaccacbccbccccbbccbccbc
acabcbdccdcdaaccbddcbcbacbccaccbccccbccacbdcebabccbbcadacdacbbbccb9ee489ceb695
29a29b5b79fbff0ff08fb3b6dacdbc29b7ef5ab9dfbcaccaccccbcccccccdcbba9bcbbcbbcbbcb
cbbcbbcbccbcbccbccbccbccbccbcccbccbccccaaabbbcccbbbcccbbb8889ca9caccbccbccccbc
bccbcccbccbccbccbc9dd8cbdccccbcbdcbdbbabba9db9eb9ccadd8ef7df9cd9de7dc8dcadcbdc
7df7df9cf9df9de8de0978ffcfabeaded787785decdf6cf6ef38907a0690fe1fe1374495cccabb
dcccbb9db9daaabddebbcbbcbccbccbccbccbcbbcbccbccbccbccbbcbbcbbccbccccccccbbbccc
cccccc777444adbbdbcdbeedffffffffffffffffefffffffdffcfffffffeffffefffeffecffcfe
6999cc28a49c5898cd498499688acc4ad39d48b9df38949a2b91a8795694787bcb785785680df7
ee2ff4cf6be5fe1ff2afc5a6ffffffffffffdfedfeffffffffffffffffffffffffffffffffeffe
ffeffeffffffffffffffffffffffffffffff555444abbbccefdffffffffefecffcea9fbafdbfec
ffeffeffeffeffdffdfdffdffdfb58fd4fc4fe3fe3fe0ff1ef0df0fc6fb5fc1fd3fc3fb2fc5fc4
fe2fe2fe2fd1fe0fe0ff0ff068a002450230883ef9df5de5be8692ffe7855a35a468bdfffffeff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff333333bccabb
ccbffffeddcca74741733622931d65cbaffeffeffe974531913924725835930930a80fe3fe0fe0
ef0ef0a20b30940940b30a30b30920650fe2fe2fd1fe0ff1fe0ff068a579ef5ef5671440450340
693be8675decae8af968ceffefffffffffffffffffeffeffffffffffffffffeffeffffffeffeff
ffffffffffffffffff333444dbacbafffffff99b11e01d00b10b20c00d10b20f52fedffec65932
d10d00d30c10a20a20f01f01fe1fe1ee2990e01d00b20a20a20a20a20c30840fd2fe0ff0ff1de0
ff0ef0497597ed9dc8ff0fe0dd7cc6540880ff0ff0df3df3588dfffedffeffeffeffeffeffffff
fffffffffffffffffffffffffffffffffffffffeeeffffff444444cbadcbbbcfffb11c11d00f45
fb5fb5f42e10a10c20fdcfedc64820d00f43fb2f60fb8c51f01f01740fe1ff3880d00e01e60fb5
e70fc5fc5e50fe3fd2ff0ff0ef0ff1ef0ef0597486ffbfe9fe0ff0ffaee8ee4100ef0ef0df37a0
dffdffffeffeffeffeffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffff
888333cbddceffc973d10d10a80fe3ffffffffc885931921b91ff7e54b21c10fb68ccdff980dd5
d54a21e70fc1677accd01e02d70fd5fe0ff1fe0fe0ef1ff1ef1ef1ff0ef0ff2ff3486587fe3fe3
ff4ff1ee1ef1ff9dd5000ee8ce97947debffffffffeffdffffffffffefffffffffffffffffffff
ffffffffffffffffffffffffffffff444333bacbadec8873d20c10fe3fd3fffeefffcffcfcbfca
fe6fd6f98910c10f50bff599dd5990a20a20d60fd2accbcce01d01d70fc4ff1fd0fe0ff0ef0ef0
de0ff2ef0ff0fe2ee16a8153ee3ff5fe1fe1ff3de0dd6dd6de8110ce97944aa3aaabbfffeffeff
fffffffffffeffffffffffffffffffffffffffffffffffffffffffffffff444333bdcadbfdda33
e00f32ee7ff9feffffeffeffffeffeffdffec24f67d00e01c10f52c00c00e00f41ff4ed2578bdd
d02d02f54d00f52d20f53b10ff0fe0fe0ff1fe0fe0fe1fd0684684200860fe7fd6ef3ff6ff0fe0
fd7b82140df8fe0ee0be969468bbdfefffffffffffffeffeffffffffffffffffffffffffffffff
ffffffffffff4444449babdcf99922f00e00ee7ff9ffffefeffeffffdffeffeffef8aa12e00e01
b10c20d11c00e00e00870ff4689accd02d02c00d00c10b00c20f53b90fe0ff1fe0fe0fe0fe1fe1
794ceafe8530530ec5ee3de3ff0fe0eb5fd7360130ff0ff0cfabe957aeffffffffffffffffeffd
ffffffffffffffffffffffffffffffffffffffffff444333bccbbbfdd833d00f32ef6ff8ffffff
ffeffefeeffefffefef55c22a20e70ee7992fc6c81c00d10a80fe56907a0c00d10d70d60c70e90
b60c70fe1fe1ff0ee0ff1ff2fe0ff19c6cf9cc5ee7690250450ee9ffcdea420100ee4110ff3ff3
beb596796585eff687ffffffffffffffeffeffeffeffffffffffffffffffffffffffffff444444
bccbccfee722d10d10de5ff7ffffffffedcbebba77abaffff99a00a30fc5cc6ffab81fd6f54c10
640fd4cf6df6c00c00e70fb4fe1fd0fc4fd5ff2ff1ff0ff0ff2fe1ff0ff17a4be8ee7ff9df4df4
772440230000864fdbee5880770ff3596aebbeb696acb687fffdefffffffffeffeffeffeffffff
ffffffffffffffffffffffff555444bbacccdcaba9e01e01e70fe8effefffeca64d10e11fd8db6
f54b21920fc4efe686fd1fe1f33e00a20e72ceb686f12e00b90fe368a68abf8491686787fd1fe2
ff0fe0ff0ef0691cf8fe2fe2ff8ed5ff4ff4450df4ef0ef0fe2b70590cf5487aedcf4df4cf9efb
effeffeffeffffffffffeffeffffffffffffffffffffffffffffff444444ccbbbaffedcaf02e01
e71d60effacdea8731d10c00fe9ffaf98a10b30e70bebacab80fe1e00f00a20fb7786acad00e00
970fe39cd689bf85a3ffffffb70fd2fe0ff1ef0ef0ae6bf7ff5fe2fe7fe6ff5ef3340ef5ef0ff0
fd1fe2020bf4598598be2cf3cf9683689578effeffffffffffeffeffffffffffffffffffffffff
ffffff444333bbbcdcbacffffaa823b10c20e00e00d10d10830fd6de9ffca33a23e00f02f00f00
d11d00f10d00fe1fe1689acdf44e00b80ff1eff689cf9693baf77bff4dd2ff0fe0ff0ff0596bfb
ff3ff5ee5ee5fe3ff5540fd4ff1fe0ff1fe0420a73fe2fd2688788ee3ef3de9794ffffffffefff
ffffffffdffdffffffffffffefeffeffeffe334444cccabaffffeffddfeec20b10e00f10c00f52
fc6fc6ffcffcfaa922f01e01f00f00b00d11f40f60fe1a9068adffd00d00c90fe1eff589df9683
fffcbfcc1ff5fe0fe0ff0ff0485dfdee1ff3ee4ff7ff3ee2530fe5fe0ff0fe1ff1b84963b80b90
677bcc890ef3bd8efbfffbbccbabbaffffffffdccabbccbdbbcbbcbcbcdbbcaded555323bbcccd
acaefeeffeffeeeffffe8871fd9fd8dcbffeffcffcffffffed6fe7ffade8ff4ee2ef3de2d10c10
b72ffabd7cf9edadc9fff77bcf67a1dffdff7a0cf0fe0ff0fe1ff15a1bf7fe8ff9ff4ff3ff3ff5
350df4fe1ff1fd0fd0f42c10f00f00c10c00b71fd79ca697fef834d20f42ffdffdb10b10f11d00
f00f00e00d00a10f65965643bbdbbcefdefdeffeffffffffff9ffaffbffaffeffeffcffcffffff
ff9ff9cc7ffb880ff3ef2ff3c10c10fd8950693cf998687577b87ccf669068b68bdf1df1ff0fe0
fe1ff29e4bf6ff9ed7ee3ff5ff3ff3240df4fe1fd0fd0940c10c10f00f43f44d11730720cfeadb
a57724c00d20db9ffdf51c20e00e00f00f00e00e00b21e54965532dbccbccccfffffffffffffff
ffeffdffeffeffffffffffffffdffdffffffcff487fd4fd3ee3ff4fc7fb6de4ef6ee6ee6fe4fd4
fb3fc3fe4fd3fe0fe0fb5fc6fd3fd2ff2fe2795ceafc1fe4e60fb5fe8fd6910fc7ef1ff1f63c20
a30d60fe8ed8fe1c80c01d11d62d62979979d00f51ff8ff9c11c11a20fb6fe7fe7de6ee6ef9ef8
875431cbbdccffeffffffffffffeefffeffeffdffdffffffffffffffdffdeffeffcffcffb80fd3
ff4dd2a20b30780890880550740a80b30b30730840fe0c90930930940c70fd1fe2685cebe80820
a20b20d92730920e61ef0ef1b10b10a30fc5982dc6fd0fc0e22c01a30fb7879535f20d00ee7ff9
f55c11a20fc7ff8ff9ff8ff8ffaffa763542bdaab9cbdfffffffffffeffffeffffffffffffeffe
efffffeffefffeffefeff789ef1df0fe1fe1e00e00b80ff7c85b74b00d11c62830e10d00c30a10
e72920c00d01ff3fe3b64821e00e00c81840d00e10c10f53ec8a74f00e00c90fd0795684ff2ff2
ff0ee0becacaf9aa13c10f52ffbffbf24d02a10fb5fedfedfecfecfedffd434433bcabcaffffff
ffffefffffffffffffffffffffeefefffffffffffffeffefeffabcbe0ef1fe1fd0f10d00a70fe5
feb841d11f34fd8c62f43e00b10fb7fb7fa6e01d01a90fe2b64831e00f44fd5a60f42e00c10f53
973420f00f00fd0fe0ce9694ee2dd0ff0ff0acb697d45a13c10f52ed9ffbe13c01b20b20832721
730831a76ffd434434bcbabacccfffffffffffffffeffeffeffeffffffffffffffffffffffffff
cffcff790df2fe0ff0d00e00b71fb5b69725c00f53aec697f62b00a30fc4acbfffd00e10d70fc3
e41b10840fd2880ff1fc3930d20f51fd2c80c01c01c90fd0fe7ee7697beb8d94a5790ef4fc7830
d00e00de7ffaf42c10d10d00d20c10b20b20930fc7531531bcbbdcffffffffffffffffffeffeff
effeffffffffffffffeeefffefffffcff5abdf3df3fe0ff0e00f32b71fc6fef725e20f31dff697
f41d20a30fc4fff787d00e00d70fd3f52b10c80fe3fe1ff2fc3a40c00f61fc1830d11d11fe0fe0
870881586cfdafb4a5de3df3fe9930e10f30ef8ff9f53c10c00f44fa5f61fc6f60fc7fc7531430
cbcbbbcbaffeffffffffffffffeffeffffffffffffffeffeffffffffffefdffdff980fe2ef0ee0
c01d02c80c80b60c70a10f63ee1990fb6b30840fc4680ce3d00e00f60fb4a10a20e72fb6fe0fe0
fc5930c10f51960750d01d01c73c736a2cf79de478e42f54c40fc5daa633a00e42fe8ff9c22a10
930fd5ffffffdfdefeefeefe434444ccccccffeffdffffffffffffffeffeffffffffffffffeffe
ffffffffffffcff699fe2ff3ff0ff0d12d02c80fd5fd4830b20e42ee1ff2e60a20830fd5df4cf3
e11d00f70fc5d51a20a30fc7fe0fe0fc5820c20f51fe5fd4f02e02c63a51ad6cf85999deb10b10
e60fc4a76733b10d32fd7ff9d44b22920fc4ffffffefeefeefeefe334434bbbbbbbbbfffffffff
ffffffffffffffffffffffffffffffffffffffeffedffdff780ef4ff0fe0d10c00d80fd2fd5930
b20f72fe0fe0f65b10840fc2ff1ef0f00f01860ed4b76732d00e00fb7f61b00c11a20e64ff0fe0
c70930e00f43976976f42b10d20c00ee6dd6a57b68d10f41ffdffdf45e01920fd6fffeffffffff
feefff455334bcccccfffffffffffffffffeffffffffffffffffffffffffffffffffeffedff588
ff5ee3ff0fe0d10d10d90fc1fc4940a20e61fe0fe0d33c11830fe4de0ff1f00e00a90ff6b65b76
e00e00b10b10c21b00920d53fe0ff0fc4d70e00e00643532b10b10c10f43ff8cc4fef835d00d10
debffde01e01b40fc4efffffffffffffffff778344daccabcbcffffffffffffeffffffffffffff
fffffffffffffffefeffffffffffff37b59c599589b74a63a72c94487588e71d7169b68ba79857
b80fd46b5594c70d80ef3890788233b60b60840d81fa4d20b20e60de9894bec597888776910a30
e70e70fe7fe7fffefeffca75730c83fcaffd895884730fd4fffefffffffeffeffe443433dbcebd
fffffffffffefffffffffffffffffffffffffffffffffffffffffffeefffcffcffdffdfffebffc
fd8fe9dffdfffc6fa49ce58adacfffb80fd4af9bfafc2fd3de2ef2344233720d71fd5fd5fa4c20
b20fb4883ffb5979ca887ffffebfb8fc2fc3dc5ff9fffffffecffcffafc7ffdffdffcffcfd4ff6
ffffffffefffffeffe433444bbbcccbbbbbb888bbbbbb888bbbccc777ccc777bbb888bbb888bbb
ccc888bbb888bbbbbb888bbb888bbbbbb888cccbbbbbaccabbabcbbca786ada696df0ef0bf5bf6
773eeafd4840e10f42e60f70c00c00930fd3696acaebdc9ccdfabc785ccabbbbbbbbb888bbbccc
888bbb888bbbccc777bbbcccbbb888bbbccc888cccbbbbbb444333bbb777333444333444444333
444333333444333333333444333555444333444333444444333333333444444333333444442442
343343453342685685ef0cf05a06a0884eeafc3c80d00e10a20910d00e21c70fd4575242635524
234345342442444444444333444444222444333444444333555444333444333444333444444444
333444888444333444444444444333333333444444444333444444444444333444444444333333
44433344433333344433344444433334434423334425958ccd98a6588044887887fe0fe0d64d64
e80d70fd5fc3962630465132444444332443434334333333333444444333444333444444333444
333444333444444444444333444333444444
grestore
199.2 692.6 moveto
12 f0
( ) show
0 683.5 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
gsave
/rowdata 468 string def
140.7 565.2 translate
218.4 112 scale
312 160 4 [312 0 0 -160 0 160]
 smartimage12rgb
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffeffeefffffffffffffeffeffffffefffffffffffffffff
ffffffeffeffffffffffffffffffffffffffffffffffffffffffffaff29d0be0aeeffffffffffe
ffffffeffeffffffffffffffffffffffffffffffffffffffffffffeffeffffffffdffdffffffff
ffffffffffffeffefffffffffeffefffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffeffeffeffffffffffffffeffeffffffffffffffffffffffff
ffffffeffeffffffffffffffffffffffffffffffffffffffffffff29c29d0be0be789fffffefff
ffffffeffeffffffffffffffffffffffffffffffffffffffffffffeffeffffffffdffdffffffff
ffffffffffffeffefffffffffeffefffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffeffeffffffffffeffeffffff
ffeffeffeffeffffffffffffffffffffffffeffeffffffffbff4aa0af09f0af0bf0bf0aeffeffe
feffffffeffdffffffffffffffffffffffffeffeffffffffffffffffffffffffffffeffeffffff
ffffffffffffeffeffeffeffffeffeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffeffffffffffffffffffffffffffffffffeffeffffff
ffeffeffeffeffffffffffffffffffffffffeffeffffffffaff4aa0af0af0af0bf0ae0aeffeffe
ffffffffeffdffffffffffffffffffffffffeffeffffffffffffffffffffffffffffeffeffffff
ffffffffffffeffeffeffeffffeffeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffefffffffffffeffefffffffffffffffffffffffffffff
ffeffeffffffeffeffffffffffffffffffffffdffdcffdff0bf0ae0be0addfb4830be0be2ad8ff
ffffedffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffeffeffffffeffeffffffffffffffffffffffdffddff48a0ae0bf0ad0adae96a40be0ad1ad1ad
feefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffefffffdffcffcffbffdffdffffeffeffffffffffff
ffffffffffffffeffeffeffeffffffffffffffffff09d0bf0bf0be990ef4ff0ff03aa3a91be0ad
effdffdffeffeffeffffffffffffffffffffffffffffffffffffffeffeffffffffffffffeffeff
ffffffffffffffeffefeffefffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffcff59a59959acffdffffeffeffffffffffff
ffffffffffffffeffeffeffeffffffffffffffffff0ae0ae0ae0aeee4ff5ee0ff08ff2a909d0ad
688dffeffeffeffeffffffffffffffffffffffffffffffffffffffeffeffffffffffffffeffeff
ffffffffffffffeffefeffefffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff9ff29d0ae0ae0be0addffcffffffffffdffd
ffffffffffffffffffeffeffffffffffefffbff39c19c2bd393afaff0ff0ff0fe0ef67800bd0bd
09f0afffeffeffffffffffffffeffeffeffefffffffffeffffffffffffffffffffcffcffbffcff
ffffffffffffefeefeffffffeffeffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffeffffffffeefee3bf19c0ae0ad0ad0ae589dffffffffffdffd
efffffffffffffefffeffeffffffffffffff39c39c2ad08b5b5afaee0ff0fe0ff0de5de60ad0bd
1bf09fefdffeffffffffffeeffeffeffeffeeffefeffffffffffffffefffffeefecff49849a389
ffffffffffffefeefeffffffeffeffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffeffeffffff09d1ae1aa3cc0bd0ad2ae1ad08e9ffeffeff
effeffffffefffffffeffeffffffffdffdff0bf0af3aa2aafd0ff0df0ef1df0ef1fe2ff3afb394
0af0bf3ab9ffffeffefffffffffeefffffffffeffeffeffeeffeffdffdffaff2af1be0ac1af0af
fffeffffffffefdefdffeffeeffeffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffefffffffeffeffffff09d1ae1aa7ff0ac0ac1ad1ad1af1af797dfe
effeffffffffffffffeffeffffffffcff5890af0bf1997ffff0fe0ef1df1ef0ef0fe2ff39fa5a5
0af0af2ab2abffeffefffffffffffffffffffedffefffffeeffeffdff48a19f19f0ad0bd09f09f
789fffffffffefdefdffeffeeffeffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffeffeffeffecffbff0be0be792ce7cf97a42973980ae0ae0ac1bd
3acaffcffdffffdffdffeffedffdff2be19d0bd0bd7a1df7ef0ff0ff0ef0ff0ff0fe0fd0ff3ee1
0ba1bb09c0aedffdffdffefffffffffeffffffffefeffeffaff29a1ac1ac1ae1ae1972a80bf0af
289cffffffffffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffeffeffeffecff6ab0ae0ad792df8bf8ae79fe3a81bf0ad0ad1ad
29b29b69adffffdffdfecffedff57919d2ae0ac0bdbe5cf6ee0ff1ee0ff0ff0ff0ff1fe0ff1ff2
5ff0ba0ae0ad699dffeffdffefffffffffffffffffdff68939b39b0ac0ac09d1ae2a87fd0af0af
4abbffffffffffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffbff38c0bf0bf880ff3ff0ff0ee0ff2cf37a01ab2bc
09c0be0af0afbffaffeffeff9ff2af0ac09c9a1de4ff1ef0ff0ff0fe0fe0ff0ff0fe0fe0ff0fe0
ef67800ae0ae09d1addffdffffdffddfefffaff19c0af0af0ad0be2aa2bb690cf5ff0ff01ac2ad
1ab9ffffffffeffeffffffffffeffeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffbff38c0bf0bfff4dd2ff0ff0ef1ef1df4df46ff0ab
0ae0ad0ae0bf38a4abeffeff19e19e1bd0acde5df5ee0ff1ff0fe0ff0fe0ff0ff0ff0fe0fe0ff0
ce4ef60ae0bf1ae1addffcffffdffdfff68719c2ad0af0bf0be0ae1aa7ffcf5cf4ff0ff01ac1ac
19a9ffffffffeffeffffffffffeffeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffeffffff
effeffffffffffffffffffffffeffeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffeffef8ff1ba19f29fff0ff0ff1ff1ff0ff0ff1ff1ff1fe0
df48a01ad1ad0be0bd1ad0ac2af19f1983badf0ef0ff0ff0ef0ef0fe0fe0fe3fe3fe0fe0fe0ff0
ef0ef0bec5870af0af09c9ff9ff1ac0ae0af0af0af1a72b77a0df4fe1fe1ef1ef1ff0ef01ac1ac
0af0afffffffffdffdffffffffefffffffffffffffffeffeffffffffeffeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffeffffff
effeffffeffeffffffffffffffeffeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffeefeffef8ff0ba29f18fff0ff0ff0ff0ff0ff0ff1ff1ff1ff1
ef6be31ad1ad0ad0cf1ac1ac08f1af3ba7eedf0ef0ff0ff0ff0ef0fe0fe0fe2fe2fe0fe0ff0ff0
ef0ef0bec7a80af0af1ad2ae2ac19b1af0ae0bf0ae2b77fdcf4cf4fd0fe1ef1ef1ef0ff11ad1ac
09f0afffffffffdffdffffffffffffffffffffffffffeffeffffffffeffeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffeff
effeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffeffeffeffeff0bd0bd1ad1adff0ff0ff0ff0ff0ff0ef0ef0ff0ee0
df0ff0ff0ff06a64850cf0bf29c2acfe0ff0ff0ff0fe1fe2ff1ff1ff0ff0ef1df1ef0ff1ee2ef2
fe0fe0ff1ed02a91981bc0ab09d1bf2a9298790cf4ff1ff1ee0ff1ff0df0ff0fe0ff0ff08e94a5
0af0afffeffeffffffeffffffffeffffffffffffffffeffeeffeffffffffffffffeffeffefdefd
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff
effeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffeffeffeffeff0ac0bd1ad1adff0ff0ff0ff0ff0ff0ef0ef0ff0ff0
ef0ef0fe0fe0aeabfc0af0af2ad29cff0fe0ff0ff0fe1fd1ff1ff0fe0ff0df1df0ef0ff0ee2ef2
ff0ff0ff1ff19ff2991bc2bd0ae09d2a98fedf5df5fe0ff1ff1fe0df0ef0ff0fe0fe0fe0afb394
0af0afffeffefffffffffffffffeffffffffffffffffeffeeffeffffffffffffffeffeffefdefd
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdffeeffeff
ffeffefffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffeffeffffffff2ad19c4a79fcef1ef1ff0ff0fe0fe0ff0ff0fe1fd0
fe0fd0ff1fe0ff0ff0ff1ff1ff0ff0ff0ff0fe2fe2ff0ff0ff0ff0ff0ff0ee0ff1fe0ff0ef0ef0
ff0ff0ef0ff0bf37b06925818a1df6ff1ef0ff0ff0ff0ee0ff0ff0df0df0ff1ff1fe0ff0bf75a2
0ad0bebffdffffffffffffffffffffeffefffffffffffffffffffffffffffffffffffffffeffef
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffdeffeff
ffeffeffffffffffffffffffeffeffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffefffffeffeff19c19c396afcff2ff2ff0ff0fe0fe0ff0ff0fe1ff2
fe0fe0fe0fe0ff0ff0ff1ee0ff0ff0ff0ff0ff3fe2ff0fe0ff0fe0fe0fe0ee0ff2ff0fe0ef0ef0
ff0ff0ef0ff0bf4bf3cf8cf9df6df6ef0ef0fe0fe0ff1ff0ef0ef0df0ef1fe1ff1ff0ff0bf75a2
0ad0be7aadffffffffefffffffffffeffefffffffffffffffffffffffffffffffffffffffeffef
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9ff3ad0af0af
1aa1ab09c1ad0af0af0ae0ae0ad0ad1ad1ad0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae
0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae
0ae0ae0ae0ae0ae0ae0ae0ae0bc0bc1be0ad0bf0bf0bd0ad0ae0ae0ad0ad19f19f0ae0ae1ae1af
0ac0bc0bf0cf0be0ad29e18d0bd0ac0bf0ae1af09e0bf0af0af0af1ae1ae5a39e7ff0ff0ff0ff0
ff1ff1ff0ff0ff2ff2ff0ff0fe1fe1fe2fe2ff2fe1fe0fe0fe0ff1ff0fe0fe1ee1ff0ee0df48a0
0ae0ae38bcffffeffeefffffffffffffffffffdffddffdffffeffeffffffeffeffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffaff29c09f0af
1ab2ab09c1be0af0af0ae0ae0ad0ad1ad1ad0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae
0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae
0ae0ae0ae0ae0ae0ae0ae0ae0bc0bc0ad0ad0af0bf0bd0ad0ae0ae0bd0bd19f19f0ae0ae09e1ae
0ac0bc0bf0be0ae0ae19e29e0ad0bd0bf0bf09e1af0bf0bf0af0ae1ae0ad5a3bf8ff0ff0ff0ff0
fe1ff1ff0ff0ef1ef1ff0ff0fe1ff2fe2fd1ff1fe1fe0ff2ff0fe0ff0fe0ff1ff1ee0ff0df4ce3
0bf0ae49ccffffeffeffffffffefffffffffffdffddffdffffeffeffffffeffeffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff38b1ae09d
5b44924a53a44a64a63a43a44a44a45a55a55a45a45a45a45a45a45a45a45a45a45a45a45a45a4
5a45a45a45a45a45a45a45a45a45a45a45a45a45a45a45a45a45a45a45a45a45a45a45a45a45a4
5a45a45a45a45a45a45a45a45955956956956a36a36946944a54a53a43a45a35a35a55a54a44a4
4a44a45a45a45975974a44a44a34a35a35a35965965945a44a25b309d0be48b014fe8fd7fd5fd4
ff1ee0ff0fe0fe1fe1ff0ff0ff0ff0ee0ff0ff0fe0ff0ff0fe0ff0fe1fe2ef0ef0ff0ef0ef0ef0
1af09f39cbffffffffefeffefffffffffffffffefffffffffeffffdffdffaffaffcffcffffffef
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff38a1ae1ae
af8af8afa9fa9fb9fb9fa9faafaafaafaafaafaafaafaafaafaafaafaafaafaafaafaafaafaafa
afaafaafaafaafaafaafaafaafaafaafaafaafaafaafaafaafaafaafaafaafaafaafaafaafaafa
afaafaafaafaafaafaafaafabfbbfbbfabfabf8bf8bf9bf9afaafa9fa9fabf9bf9afaafaaf9af9
afaafabf9bf9afcafc9f99f99f99f9bf9bf9bfbbfbbfabfa9f89f70bf0ae38b013100200200fe5
ee0ff0ff0ff0fe1fe1ff0ff0ee0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe2fe1ff0ee0ff0ef0ff0ff0
09f1af39cbffffffffefeefdffffefffffffefffffeeffffffffffdff5893ac18a59a69bfeffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff49b1ac1ad
ff0ff1ff0ff0fe0fe0ff0ff0fe0fe0fe1fe1ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff1ff1ef0ef0ff1ff1ff0ff0ff0ff0ff0ff0ef1ef1ef0ef0
fe0fe0fe0fe0fe1fe1ff0ff0fe0fe0fe0fe0ff0ff0fe0ff0ef1df00af0ae38d015100100100100
000110000000ee6ef7fe6fe5ff1fe1ff0fe0ef0ef0ef0ff0ff0ff0ff1fe1ff1ff1ee0ff1fe1ff1
09d09c19e3bfbffcffaffaffcffcffdffdff0bf0af0ad0bd0ae0af0bd0bd0ad0bf1bf09dffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbff49b1ac1ac
ff0ee0fe0fe0fe0fe0ff0ff0fe0fe0fe1fe1ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff1ff1ef0ef0ff1ff1ff0ff0ff0ff0ff0ff0ef1ef1ef0ef0
fe0fe0fe0fe0fe1fe1ff0ff0fe0fe0fe0fe0ff0ff0fe0fe0df0df00ae0ae39d015100000100100
000000000000010010100100ff1fe1ff0ff0ef0ff0ef0ef0ee0ff0ff1fe1ff1ee0ff0ff1fe1ff2
1ad1ad19e19ecff49a3a92a949b49b48859909f0bf0ad0ad0bf0ae0ac0ce0bf0ae0ae0bfffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffaff2ad0af0af
ff0ff0ff0ff0fe0fe0ff0ff0fe0fe0ff0ff0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0
fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0fe0
fe0fe0fe0fe0fe0fe0fe0fe0ff0ff0ff0ff0ef0ef0ff0ff0fe0fe0fe0fe0ff0ff0fe2fe2fe0fe0
ef0ef0ef0ef0ef0ef0df2df2df0df0fe2fe2fe1fe1ff1fe0ef0ef00bd0bd49b013ee6110010120
010010011000000010000011001001000000fe9dc7fe6fd5ff4fe3ff0ff0fd0ff0ff0fe0ff0fd0
9f93a319e09d1bd0ad0af0af19d19d1be0ae0bf0af4a44a47936935a34920af0af0ae0aeeffdff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffaff2ad0af0af
ff0ff0fe0ff0fe0fe0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff1ff1ff0ff0ff0ff0fe0fe0fe0fe0ff0ff0fe2fe2ff0ff0
ff0ff0ff0ff0ff0ff0df2df2ef0ef0fe2fe2fe1fe1fe0fe0ef0ef00ad0bd49b013ff7ff8ef6de6
be9ffc000000000000000000002001000101100210200200200fe3ee0ff0ff0ff0fd0fe0ff0ff0
8f84b41ae19d0ac0ad0bf0af19d2ae0ad0ad0bf0bf9faaface8df9af9af90af1bf0ad0bfeffdff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff4990ad0ad
ff0ff0ff1ff1fe2fe2ef0ef0fe0fe0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0fe0fe0ff0ff0fe0fe0fe1fe1ef0ef0ff0ff0ff0ff0
fe2fe2ff0ff0ff0ff0fe0fe0fe0fe0ff0ff0ef0ef0ff0ff0ff2ff20ae0ae58a012ee3fe4ee1ff4
ff6fe5fc1ff5fe3fe3100100000000010000012000000000000000000000000cd9fe9ee9fe2fe2
bf45a05a35a4594493590df7ee0ee0ff0fe0ff3fe2df0cf0fe0fd0ef1ef009f09f48acfffeffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff4991ae1ae
fe0fe0ff1ff1fe2fe2ff0ff0ff1ff1ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0fe0fe0ff0ff0ff0ff0ff1ff1ef0ef0ff0ff0ff0ff0
fe2fe2ff0ff0ff0ff0fe0fe0fe0fe0ff1ff1ff0ff0ff0fe0ee1ee10be0be59a012fe4ff5ff2ff2
ed4ff7fd2fe3fe3ff5ed6ed6ddaffc000000000000000001000000000000000010000100fe2fd2
bf5bf4af9af8bfabfbcf5bf5ff0ff0fe0ff0ee1fe2df0cf0fe0fe0ef1ef01af1af49acffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff58c0ae0ae
ef0df0ff0ff0fe0fe0ff1ff1ff1ff1fe0fe0ff0ff0ff0ff0ff0ff0ff0ff0ff1ff1ff0ff0ff0ff0
fe0fe0ff0ff0ff0ff0fe0fe0ef0ef0fe0fe0ef0ef0ff0ff0ff1ff1ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0fe0fe0fe0fe0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0ff0ef00ad0ad49b013ee2ff3fd5ff7
ff3ff3df2ff4fe3fe4fe2ff5fe4fe4ee1ff4fe5ee5ff4110100100100100100100001001000dd7
ff1fd0fe0ff0ef0ef0ef1ef0fe0fe0ff0ff0ff0ff0ff0ff0fe0fe0cf7cf719f19f59bcffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff58c0ae0ae
ef0df0ff0ff0fe0fe0ff1ff1ff1ff1fe0fe0ff0ff0ff0ff0ff0ff0ff0ff0ff1ff1ff0ff0ff0ff0
fe0fe0ff0ff0ff0ff0fe0fe0ef0ef0fe0fe0ef0ef0ff0ff0ff1ff1ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0fe0fe0fe0fe0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0ff0ef00ad0ad49b013ff3ff5fe5fe5
ee3ff5ef2df2fe4ff6fe2ff2fe4ff6ff1ee1ff5ff7ee3ff4ee8ff9ffa100100100001001010000
fd0fe1fe0fe0ef0ef0ef0ff1fe0fe0ff0ff0ff0ff0ff0ff0fe0fe0be669119f2af489dffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbff39b0ac0bc
ef1ef1fe1fe1ff0ff0fe2fe2ef0ef0ef1ef1ff2ff2fe0fe0fe1fe1ff0ff0fe1fe1ef0ef0ef0ef0
ff0ff0ff0ff0ff0ff0fe1fe1ff0ff0ff1ff1ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0fe1fe1fe1fe1fe1fe1ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff1fe10ad0ad49b013ee2fe3fe3ff5
ee2ff3ff4ff6fe2fe3fe3ff5ee2ff3ff3ff5ee2ff3ee3ff5ff5ff5ee5ff8de3ef3000000000001
100ed9ff0ff0ff1fe1ff0ff0fe0ff0ff0ff0ff1ff1ef0ef0ff0ff0bfa3920bf0be6aacffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffeffeffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbff39b0ac0bc
ef1ef1fe1fe1ff0ff0fe2fe2ef0ef0ef1ef1ff2ff2fe0fe0fe1fe1ff0ff0fe1fe1ef0ef0ef0ef0
ff0ff0ff0ff0ff0ff0fe1fe1ff0ff0ff1ff1ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0fe1fe1fe1fe1fe1fe1ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff1fe10ad0ad49b013ff3ff5fe3ff3
ff3ff5ee3ff4fe3ff5fe3ff3ff3ff4ee2ff3ff2ff4ff4ee3ee5ff7dd5ee6ff4ff6cd8010000001
100100ff0ff0ff1ff1ee0ff0ff0ff0ff0ff0ff1ff1ef0ef0ff0ff09f84b30ae0bfbffdffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffeffeffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffeffeffffffffffffffffffffffffff
ffffffffffffeffeffffffffffffffffffffffffffffffffffffffffffffffffffbff39a0ae0ae
ff0ef0fe0fe0df1df1fe0fe0ff0ff0ff0ff0ff0ff0fe0fe0fe0fe0ff1ff1fe0fe0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0ef2ef2fe1fe1fe1fe1ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ef0ef0ef0ef0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe2fe20ad0ad49b013fe3fe3ee2ff5
ee2ff3fe4ff6fe3fe3fe2ff4ed4ff5ff2ff3fe4ee4ee0ff3ff4ee3ee3ff5ee3ff3ff3ff5010000
000000000ed9ff0ff0ff0fe0ff0ff0fe0fe0fe2fe2ef0ef0fe0fe09fc4a70ae0beffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeffeffffffffffffffffffffeffeffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffeffeffffffffffffffffffffffffff
ffffffffffffeffeffffffffffffffffffffffffffffffffffffffffffffffffffbff39a0ae0ae
ff0ef0fe0fe0df1df1fe0fe0ff0ff0ff0ff0ff0ff0fe0fe0fe0fe0ff1ff1fe0fe0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0ef2ef2fe1fe1fe1fe1ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ef0ef0ef0ef0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe2fe20ad0ad49b013fe3ff5ef2ff3
fe3ff5fd3fe4fe3ff5fe2ff3fe5ff6ee1ff1ff4ff6ff2ee1ee3ff6fe3ee3ff4ff5ee2ef3dd9000
010000110000ff1fe0ff0ff0ff0ff0fe0fe0fe2fe2ef0ef0fe0fe09fc4970be0adefffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeffeffffffffffffffffffffeffeffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffeffeffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff4990af0af
ff0fe0fd1fd1ff0ff0fe0fe0ff0ff0fe0fe0ff0ff0ff0ff0df0df0ff0ff0fe0fe0fe1fe1ff1ff1
ff0ff0fe0fe0ff0ff0ef0ef0ef2ef2ff0ff0fe0fe0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe00bd0bd39b013fe3fe3ee3ff6
fe2ff3fe2ff5fe3fe3fe3ff6fe4fe4fe4ff6ee2ff3ee2ff5ff3ee2fe3ff5ee4ff4ff3ff5ef3ff3
000000000000ff4ee3ee0ff0ff0fe0ef0ef0ef1ef1ef0ef0ff0ff02bc1ab0ae0aeffffffefffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffeffeffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffeffeffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff4990af0af
ff0fe0fd1fd1ff0ff0fe0fe0ff0ff0fe0fe0ff0ff0ff0ff0df0df0ff0ff0fe0fe0fe1fe1ff1ff1
ff0ff0fe0fe0ff0ff0ef0ef0ef2ef2ff0ff0fe0fe0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe00bd0bd39b013fe3ff5fe4ff4
fe2ff5ff3fe2fe3ff5fe4fe4fe3ff6fe4fe4fe3ff5ff3ee2ff3ff5ff3ff3fe4ff6fe3fe3ef3ff5
ddc000000000110ff4fe0ff0fe0ff0ef0ef0ef1ef1ef0ef0ff0ff019b2bc09d1bffffffeffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffeffeffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffffffffffff
ffffffffffffdffeffffffffffffffffffffffffffffffffffffffffffffffffffcff59d0af0af
ff1fd0ff0ff0df0df01bd0ac0bd0bd0af0af0be0be1ad2ae09f1afff0ff0ff0ff0ff1fe01bf0ae
0af0bf1ae0ad1af0ae0af0ae0ae0aeef0ef0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0fe1fe1fe0ff1ff1fe0ff1fe0fe0fe0ff0fe0fe0ff1fe0ff1ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0ff0ff0ff0ff0ff00ae0bf3ad014fe2ff3fe4ff7
ef2ff3df2ff5ef2ff2ee3ff6ef3ff3ee4ff7ef3ff3ee3ff6ef3ff3ee3ff6ff3ee2ff2ff4ee2fe3
ff6100000000000000ef3ef3ee0ff0ff0ff0ff0ff0fe0ff0ee2ff30af0ae38ebffffffffffffff
ffffffffffffffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffefffff
fffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffef
fffefffffeffeffeffffffffffffffffffffffffffffffffffffffffffffffffffcff48c0bf0bf
fd0ff0ff0fe0ef0df00ac0ac0bd0bd09f0af0ae0ae19d2ae0af0afee0ff0ee0ff0ff1ff109e09d
0cf0af0ad1ae0ae0af0af1bf0af0aeef0ef0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0fe1fe0ff2fe1fd0ff1fe0fe0ff0fe0ff1ff0fe0fe0fe0fe0ff0ff0
ff0ff0ff0ff0ff0ff0ee0ff0ff0ff0ff0ff1ff0fe0ef0ff0ee0ff00bf0bf29c025ff2ff5fe4fe4
ee2ff5ef2df2ff2ff4ee3ee3ee3ff5ee4ee4ef3ff5ee3ee3ee2ff5ef3ee3ee2ff5ee1ee2ff4ff5
ee6fe6000000000000010ef3ff0ff0ff0ff0fe0ff0ff0fe0ff3ef30ae0ae39ebffffffffffffff
fffffffffffffffffffffeffffffffffffffffffffffffffffffffffffffffffffffffffefffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffeeefffefefff
fffffffffffffffffffdefdefdefdefdefdefeefeefeefeefeefeeffeffeffeffecff59a0be0bd
ff0ff0dd0ff1ff0ff00af0af19c2be48b49c49d39c4ad28c0af0afff0ff0df0df0fe1ff21af09e
2ab29b49a49b38b48b39d28c1ae1aefe0fe0ff0ff0ff0ff0fe1fe1ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0fe0ff1ff0ee0ff0ff0ff0ef0ff0ff0fe0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0fe0fe0fe0ff0ff0ef0ff02af1ae48a014ff3fe2fe5ff6
fe4fe4ef5ff7ff2fe2ff3ff5fe4fe4fe4ff6fe4fe4ff3ff5fe4fe4fe4ff6fe5fe4fe3ff5fd2fe3
fe1ff3fe9100000000111000ff5ee3fe0ff0ff0ff0ef0ff0cf7cf60ac0bc58cdffefefffffffff
ffefffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffeeffffffffffffeeeffffff
ffefffffffffffffffa22a22a22a22922922822822732722743632ffefedffeffecff3780bd0bd
ff0ff0ff0ee0ee0ff00af0af2bd9ffcffcffbffbffaff4ad0bf0afff0ee0ef0df0fe2fe10af1af
2abaffcffcffcffcffaff39d1ae1aefe0fe0ff0ff0ff0ff0fe1fe1ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff1ff0ff0ee0ff0ff0ee0ff0ff0ff0ff0ff0fe0ff0ff0fe0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0fe0ff1ff1ff0fe0ff1ff019e2af58b003fe2ff5fd4fd3
fe4ff6ee4de4ff2ff5fe2ee2fe4ff6fe3ed3fe4ff6fe3ee2fe4ff6fe3ed3fd4ff6fe3fe2fd3ff6
fe1fe1ed7ffa000000000100110ff4ff1ff0de0ff0ee0ff0df76910bd0ac58cdffffffffffffff
fffffffffffeffffffdfefffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffeffeffeffeffefeffeffefed
fedfddc01d12e01e00c10c10c00c00d00d00d00d00e01d00e01f12d00e01e02e01fefa7768979a
fe0fd0ff1ff1ef0ff00ad0ad38acffffffffffeffecff4890ad0adff1fe0ff0ef0fe2fd158b48b
a66feefeefeefeefeefeea77878878fb5fb5fc6fc6fc5fc5fb5fb5fc4fc4fc4fc4fc4fc4fc4fc4
fc4fc4fc4fc4fc4fc4fc4fc4fd3fc2fd2fe3fd1fe2fe0fe0fe0ff0ff0ff0ef0ef0ff0ef0ff0ff0
ff0ff0ff0ff0ff0ff0ff0fe0fe0fe0fe1fe1ff2fd0fc5fb4fd5fc5968979b67400fc5fc4fb6fe8
fc7fc7fc7fe9fc5fb4fc7fe9fc5fc5fc9feafc4fc3fc7fe9fc5fc5fc8fe9fc5fc5fb7fd9fc5fb4
fb7feafc4fc4fb8500300300000100fd4fd4ff1ff0ff0ff0fb8c63788777b67fdefdcfecfddfdd
fdefddfeefeefffffffffefffffffffffffffffffffffffffddfddfedfedfedfedfddfddfddfdd
feefeefffffffffefeffffffffffffffffffeffeffffeffffddfeefddfddfedfdcfedfedfedfed
feefedfddffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffefeeffdfeffeefeffe532
821922d12b00e00e01c10c10c00c00d00d00d01d01d00e01d00d00e01e01d00d0163363324668a
fd0ff2ee0ff2ff0ff00ad0bd49bcffffffffffeffecff5990be0adfe0fe0ff0ef0fe1fe248b258
734733733833722722743522444545a30a30930930930930a20a20a30a30a30a30a30a30a30a30
a30a30a30a30a30a30a30a30940940840fd2fd1fe2fe0fe0ff0ff0ee0ff0ff0ef0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff1fe0fe1fe1fd1960a20a30830940535535834612830940920a30
930820810a30930a40920930930930810a30930a40920a30a30920810a30930a30920920a40930
930820a30a30920920724723000100300fc4ff0fe0ff0fe0830820444344713834831831912911
923822744feeeeeffffffeffffffffffffffffffffffffff922922822822822822922922922a23
822822633fedffffffffffffffffffffffffeffefffffeed844722811822832832932821711821
722832755feeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffeffefffefffffeffeefdea12d01c01
e00d00d00d10d00d10d00d00d00d00d00d00e00e00d00e00d00d00d00d00d00d10d02d02b00b10
d30fb4fd3fc2ff1fe00af1af399bfffffffffffeffcff4990bf0affe1ff1ff0ff0ff0ff0768324
e00d00d00e00e00f00d01e01c00c00d00d00d00d00d00d00f00f00d00d00d00d00d00d00d00d00
d00d00d00d00d00d00d00d00e01f02c00d00c10c10920fc5fc2fe4fe1fd1ff0fe0ee0ff0ff0ff0
ff0ff0ff0ff0ff0ff0fe0fe0ff1fe0fe1fe2fd1740e00e00c00c00c10c00d00e00c10c10d00e00
d00d11f00f00d00d00d00d01d00e10d01d01d00d00d00e00d00e10e00d00e00d00d00d00d00c00
c10c10e00d00f00f00c20c20100100000ef9de0ef1ff0ff0f01e00c10c10d00d00c10c10e01e00
b12b12722feeffffffefffffffffffffffffffffffffffffd00d00d00d00d00d00d00d00d00e01
d02d02822fedffdffdeffeffffffffffffffffffffffefeec01c11e01f01d00d00e00e00e00f01
d11c01811fddffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffeffefffffffffeffefa01b12c01d01
d00d00d00d00d10c00d00d00d00d00d00d00e00e00e00d00e00d00d00c00d10c00d02c01c21c10
b10c20940fd3fe0fe11af0af399bffffffffffffffcff3990af0bfff1fe1ff0ef0ff0fe098a546
d00e00e10d00f00f00d01d00c00d10d00d00d00d00d10d10f00f00d00d00d00d00d00d00d00d00
d00d00d00d00d00d00d00d00e01e01d00e00c10b10b30a20940fc2ff2fe1ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0fe0ff1fe1fe1fe1fe2850e00e00c11c11c00c00e10e00c10c10d00d00
d01d01e00f00d00e10d00d00d00d00d00d01d00e10d00d00d00d00d00d00d00d00e00e00d01d01
c10b10e01d00f00f00b10c10100100000000ff2ff1ee0ff0e01e01c10c00d00d00d10c00e00e00
b12b12822c66ffffffefefffffffffffffffffffffffffffe00e00d00d00d00d00e00e00f01e00
d01c01822fedffdffeeffefffffffffffffffffffffeeffeb01c11e00e00d00d00f00f00e00d00
c00d11811fddffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffeffefffffffffecffcc10b00e00e00d02d02
d01d01e00e00e00e00d02d01d00d01d00d00e00d00e00e01e00e00e00d00d00d00e01e01d00d00
c10c10f01f01fb4fc40ad0ad29caffffffefffeffecff48b0af0afff0ff0ff0fe0ff0ff077b437
e00e00e00e00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00
d00d00d00d00d00d00d00d00e01e01d00d00d00d00e01e01e01e01b20fb6fe1fe1df0ef0ef0ef0
ff0fe0fe1ff2ff0ff0ff0ff0ff0ff0ff0ff0fc5a20e00e00d00d00d00d00d00d00d00d00d00d00
d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d01d01d00d00d01d01e00e00c10c10
e00e00d10d10d00d00e00e00ef1ef1ff0ff0fe6fd6ef0ff0d01e02d00d00e00e00d00d00d00d00
d10d10a20fb8ef0ef0fe0ff02bc8ffbffbffbffbffffffffd00d00e00e00d00d00e00e00c01c01
c01c01930fc5fe0fe0ff0ff1ffffffffeffeffffffffffffd00e10d01d01e00d00d00e00d00d01
d00d00930fc4fe0fe0ff0ff0ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffeffffffffdfeefffffffffec731c10d10e00e00d02d02
d01d01e00e00e00e00d02d02d01d01c00d00d00e00d00e00e01e01e00d00d00d00e01e01d00d00
c10c10f01f01b30b301bd0ad39cafffeffefefeffecff48b0af0afff0ff0ff0fe0ff0ff077b437
e00e00e00e00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00
d00d00d00d00d00d00d00d00e01e01d00d00d00d00e01e01f02e01b20b20fe0fe1ef0df0ff0ef0
ff0ff0fe1fe1ee0ff0ff0ff0ff0ff0ff0ff0fc5a20e00e00d00d00d00d00d00d00d00d00d00d00
d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d01d01d00d00d01d01e00e00c10c10
e00e00d10d10d00d00e00e00ef1ef1ff0ff0fd6200ff0ff0e02d01d00d00e00e00d00d00d00d00
d10d10a20fb8ef0ef0fe0ff01ab2bc39a28a39a39affffefd00d00e00e00d00d00e00e00c01c01
c01c01930fc5fe0fe0ff0ff1ffffffffeffeffffffffffffd00e10d01d01e00d00d00e00d00d01
d00d00930fc4fe0fe0ff0ff0ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffeeffffeefeec01c01d00f00c10c10d00d00
e00e00d00d00c00c00d00d00d00e10e00f10d00d00d10d00d11c00c01c00d00d00c10c10f02f02
d00d00c10c10c00e10b10fb66a6cfcffefffffffffbff39b0ae0aefe0fe1ff0fe0ff0ff086a537
d00d00d00d00d00d00d00d00d00d00d00d00e00e00e00e00e00e00e00e00e00e00e00e00e00e00
e00e00e00e00e00e00e00e00d00d00d00d00d00d00d00d00d00c00d00e00b20b20fd3fd2ff0ee0
ff0fe0fe0ff1ff0ff0ff0ff0ff0ff0ff0ff0fc5a30d00d00d00d00d00d00d00d00d00d00e00e00
e00e00e00e00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00e00e00c10c10
e02e02d01d01d01d01e00e00ef0ef0ff0ff0ed6100100ed6d01d00d00d00e00e00d00d00d00d00
d00d00b20fb5ff0ff0ef1ff10ad0bd19e2af0bc0bc1bd0adc10c10e00e00d00d00d00d00d00d00
f00f00b20fc5ff0ff0ff0ff0ffffffffffffffffffffffffd00e00d00d00e00d00d00d00d00d01
d00d00930fc4fe0fe0fe0fe0ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffeffffffffffefdd733d11d11e00e00c10c10d00d00
e00e00d00d00c00c00e00e10d00e00d00e00d00e00d10c00d10c00d11d01d00c00c10c10f02f02
d00d00c10c10e10d00a10c30aeadfdffeefeffffffbff39b0ae0aefe1fe1ff0fe0ff0ff086a537
d00d00d00d00d00d00d00d00d00d00d00d00e00e00e00e00e00e00e00e00e00e00e00e00e00e00
e00e00e00e00e00e00e00e00d00d00d00d00d00d00d00d00d00e10e11c00c20b20fd3fd3ff0ff0
ff0fe0fe0ff1ff0ee0ff0ff0ff0ff0ff0ff0fc5a30d00d00d00d00d00d00d00d00d00d00e00e00
e00e00e00e00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00e00e00c10c10
e02e02d01d01d01d01e00e00ef0ef0ff0ff0fe7100100100e01e01d00d00e00e00d00d00d00d00
d00d00b20fb5ff0ff0ef1ff10bd0ad1af09e0bc0cc0ac0adc10c10e00e00d00d00d00d00d00d00
f00f00b20fc5ff0ff0ff0ff0ffffffffffffffffffffffffd00e00d00d00e00d00d00d00d00d01
d00d00930fc4fe0fe0fe0fe0ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffcdfeed10d10e00d00f11d00d10d00e00e00
d00d00c01c01d01d01d00e10e01e02e00d00d01e01d03c02d12c01e00d00e00e00f00f00d00d00
c00c00d03d03c00d10e00e00fd2fd2fd4ff7feffffaff2a809f0afff0ff0ff0fe0ff0ff0968635
d00d00d00d00d00d00d00d00e00e00e00e00e01e01e00e00e00e00d00d00d00d00d00d00d00d00
d00d00d00d00d00d00d00d00e00e00e00e00d00d00c10c10d00d00e00f01e00e00c10fa7fd1fe1
ff0ff0fe0fe0ff0ff0ff0ff0ff0ff0ff0ff0fc5a30d00d00d00d00d00d00e00e00e01e01e01e01
e01e01d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00e00e00e00e00d10d10
e00e00d00d00d01d01e00e00ff0ff0ff0ff0fe8100100100d00d00d00d00e00e00d00d00d00d00
c10c00930fc4ef0ef0fe0fe0ed0ff1df7df719f19f0be0bde00e00d00d00b10b10d00d00d00d00
d00d00830fd5ff0ef0ff0ff0ffffffffffffffffffffffffd00e00d00d00e00d00e00e00e00e01
e00e00930fc5fe0fe0ff0ff0ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffeefffefeffffee812b00c00f01e00d00e00e20c00e00e00
d00d00c01c01d01d01e00d00e01e01e01e00e01c00c02d03c01c01d00d00e00f00f00f00d00d00
c00c00d03d03d00d10e00e00840fd2fd4fd4feffffaff2a809f0afff0ff0ff0fe0ff0ff0968635
d00d00d00d00d00d00d00d00e00e00e00e00e01e01e00e00e00e00d00d00d00d00d00d00d00d00
d00d00d00d00d00d00d00d00e00e00e00e00d00d00c10c10e10c00f12d00e00e00c10d10ff2fe2
fe0ff0ff1fe0ff0ff0ff0ff0ff0ff0ff0ff0fc5a30d00d00d00d00d00d00e00e00e01e01e01e01
e01e01d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00e00e00e00e00d10d10
e00e00d00d00d01d01e00e00ff0ff0ff1ff0dc6210100100d00d00d00d00e00e00d00d00d00d00
c10c00930fc4ef0ef0fe0fe0ff0ff0de68912af19e0ad0ade00e00d00d00b10b10d00d00d00d00
d00d00830fd5ff0ef0ff0ff0ffffffffffffffffffffffffd00e00d00d00e00d00e00e00e00e01
e00e00930fc5fe0fe0ff0ff0ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffeffda01c12f10e00c00c10d01d11e00f00e00e00
d00d00d00d00c10c10d10a00b30a20830940a30930c20d40c00e00e02d01c01c01c02c02d10d10
e00e00d00d00f02d00c10c10c00c10fd1fd1fe7ff8bff39b0bd0bdff0ff1ff0fe0ff0ff0879535
d00d00d00d00d00d00d00d00e00e00e00e00d00d00c10c10c10c10d00d00d00d00d00d00d00d00
d00d00d00d00d00d00d00d00f01f01d00d00d00d00e00e00d00e00c00d00d10c00d00d00fc2fe4
fe0fe0ff0fe0fe0fe0ff0ff0ff0ff0ff0ff0fc5a30d00d00d00d00d00d00e00e00e01e01e00e00
d00d00c10c10d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d01d01d01d01
e00e00d00d00d10d00d10d10fe0fe0ee0ff1ff8100100100d00d00d00d00e00e00d00d00d00d00
d10d10930fc4ff0ff0ef0ff0fe0ff09fd3970af0af28bbffd00d00e01e01d01d01e00e00e00e00
f00f00b20fb5fe0fe0ff0ff0ffffffffffffffffffffffffd00e00c00d10d00d00e00e00d00e00
d00d00830fd5ff0ff0ff0ff0ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeeefffffeffeb12b12e00e00c00c00e11c00e00f00e00e00
d00d00d00d00c10c10c10c10fc5fc5fc3fd4fc3fc4fb3fa3e10d00d01d01c01d01c02c02d10d10
e00e00d00d00d01e02c10c10c00c10840fd1fd6ff8bff3ab0bd0beff0ff0ff0fe0ff0ff0879535
d00d00d00d00d00d00d00d00e00e00e00e00d00d00c10c10c10c10d00d00d00d00d00d00d00d00
d00d00d00d00d00d00d00d00f01f01d00d00d00d00e00e00e01d00e10d00c00c00e00d00940fc2
ff1ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fc5a30d00d00d00d00d00d00e00e00e01e01e00e00
d00d00c10c10d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d01d01d01d01
e00e00d00d00d10d00d10d10fe0fe0ff1ee0ed6210100100e10d00d00d00e00e00d00d00d00d00
d10d10930fc4ff0ff0ef0ff0ff0fd04b83970af0af49cbffd00d00e01e01d01d01e00e00e00e00
f00f00b20fb5fe0fe0ff0ff0ffffffffffffffffffffffffd00e00c00d10d00d00e00e00d00e00
d00d00830fd5ff0ff0ff0ff0ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffefed933d01d01d10d10d00d00e00e00e00e00d00d00
d00e00d10c00a40fc2ef0ef0fe1fe1fe1fe0fe0ff0ef0ff0fe0ff0fd2840b20b20d01e01c10c00
e02e02d10d10e01e01d00d00d02c01c30fb6fe1ff2dfd5950ad0bdff1ff1ff0ff0ff0ff077a446
d00e00d00d00d00d00e00e00e00e00d10c00b10c20a30a20a40930a20a20a20a20a20a20a20a20
a30a20a20b30a20a20b30a20c00c10c10b00d00e10e01e01e01e01d00d00c10c10d00d00a20fd7
fe0fe0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fc4930e00e00d00d00d00d00d00d00e00d00d10d00
b20c20a40930a30a30a30a20a30a30a30a20920a30a30a30920a30a30a30a30a30b30a20a20a30
b30a20b30920a30a30920a30ff0fe0ff1ee0fe4110100100d00d00d00d00e00e00d00d00d00d00
d00d00a20fc6ff0ff0ef1ef1afe3970af0bf0af0bf2aaaff832822913a23a31810a40920830840
a30a30840fd2ff0ff0ff0ff0ffffffffffffffefffffffffd00e00c00d10d00d00c10c10c00c10
d00d10930fc5ff1fe0ff1ff0ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffeffffed710d01d01d10d10d00d00e00e00e00e00d00e01
d00e00d10d20fc1fd3ff0ef0fe0fe0fe1fe0fe0ff0ff0ef0ff0ff0fe2fd1fb6b20d01d00c10c10
e02e02d00c00e01e01d00d00d02d02910b30fe1ff2aea6a60be0adff1fe1ff0ee0ff0fe088a336
e00e00d00d00d00d00e00e00e00e00d00c00d30f96fb5fb4fc3fc4fc5fc5fc5fc5fc5fc5fc5fc5
fb5fc6fc6fb4fb4fd6fa4b30c10d20b00c10d00c00f02e01e01e01d00d00c10c10d00d00b30fa4
ff1ff0ff0ff0fe0fe0ff0ff0ff0ff0ff0ff0fc4930e00e00d00d00d00d00d00d00d00e01d10d00
c30fa5fc4fc4fc4fc4fc4fc4fc5fb4fc5fc5fd5fb4fc4fb4fd6fd5fb4fc5fc3fc3fb5fd6fb4fc5
fb5fb5fb5fd6fb5fb6fc6fb6fe0ff0ee0ff1fe4110fe7ed6e11d00d00d00e00e00d00d00d00d00
d00d00a20fc6ff0ff0ef1ef13974a80af0af0af0bf19aafffedfeefdefcdfdcfcafc6fc6fd4fc4
fc4fb4fd3fd3fe0ff0ff0ff0ffffffffffffffefffffffffd00e00c00d10d00d00c10c10c00c10
d00d10930fc5ee0ff1ee0ff0ffffeeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffeffeb00d22d00d00d00d00e00e00d00d00e00e00e00d00
b20b10fd3fd3ff0fe0fe0ff0ff0ff0df5df5debffdffffffffffffffffffffadd7c11b00e10e00
b00c10e02e02c00d10e00d00e03f04e00e00fe3fc2ef0ef018d2afef0ff0ff1fe0ff0fe0878434
e00e00d00d00e00e00e01e01e00e00c10b00a20fc5fe3fe3fe0ff1ff0ff0ff0ff0ff0ff0ff0ff0
ff0ee0ff0ff0ff0ff0ff0fe0fe1fd0a30a30d10d10d00e00d00d00e01e01e00e00d00d00b10d20
ff0fe0ff0ff0fe0ff0ff0ff0ff0ff0ff0fe0fc4930e00e00d00d00d00d00d00d00d00e11c00c00
930fc4ff2fe2ff0fe0fe0ff1fe1fe0fe0ff0fe0ff0ff0ff0ff0ff0ff0ff0ff0ee0ff1fe0ff0fe0
fe0ff1fe0ff0ff0ff0fe1ff2ef0ef0ff0ff0ee1ff2ff0ff0d00e01d00d00e00e00d00d00d00d00
d00d00930fc6ff0ff0fe0fe00ae0ae3a74a73adaff1ad2becffcffdfeeffeface7ee1ff2ef0ff0
fe0ff0ff1ff1fe0ff1ee3ee3ffeffeffffffffffffffffffd00e00c00d00d01d00c00c10d00d00
e00f00a20fc5ff1fe0ff0ff1efeffffffefeffffffffffffffffffffffffffffffffffffefffff
effeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdc733c11b01d00e10d00d00e00e00d00d00e00e00e00e00
b20fa6fd3fd3fe0ff0ff0ff0ef0ff0ff7ff7ffdffdffffffffffefffffffff9ffafbbc22c00e10
d20c10d01e02d10d00d00d00e02e02e00e00740fe3df0ef029e29eff0ff0ff1ff1fe0ff0778445
e00e00d00d00e00e00e01e01e00e00d10d10a20fb5fd2fe3fe0fe1ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ee0ff0ff0fe1fe1fc5fc5c00d10d00d00d00d00e01e01e00e00d00d00c10b00
ff0ff0ff0ff0fe0ff0ff0ff0ff0ff0ff0fe0fc4930e00e00d00d00d00d00d00d00d00e11c10d20
a40fc4fd1fd1fe0fe0fe0fe0fe0ff1ff0fe0ff0fe0fe0fe0ff0ff0fe0ff0fe0ff1ed0fe0ff0fe0
ff0fe0ee0ff0ff0ff0ff1fe1ff0ef0ff0ff1ee1ee1ff1ee0d00d01d00d00e00e00d00d00d00d00
d00d00930fc6ff0ff0fe0fe00ae0bf3a79fc39c39c09c09ccff5996975868a3cf7ff2fe2ef0ef0
ff0fe0ee0ef1fe1fe1ff4ff4ffeffeffffffffffffffffffd00e00c00d00d01d00c00c10d00d00
e00f00a20fc5fe0fd0ff1ee0efefffdfefffffffffffffffffffffffffffffffffffffffffffff
defeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffeffffde912e01e00d00d00e00e00d00d00d00d00e00e00d10c00
950fe3ef0ef0fe0ff0fe5fe5fdafebffffffffffffffffffffffffffefffffffffcff48cf10e00
d00d00d10d10f00e00e00f00d01d01d01d00930fd5fe0ff0df8691fe0ff1fe0ff0ef0ff0b85731
e00e00d00d00d00d00e01e01e00e00c00c10a30fb4fe1fe2ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
fe0fe0fe0fe0ff0ff0ff0ff0ef0df0fd2fd2d30b10d10c00d00d00e00e00e01e01e00e00e00d00
ff0ff0ff0ff0fe0fe0ff0ff0ff0ff0fe0fe0fd4930e00e00d00d00d00d00e00e00d00d00c00c10
a40fc3fe0fe1ff1ee0ff2ff4ff4ee3dd4ff7ff7010000110000000002002ef6de5df4ff6df2df2
de9ffb102001100000000110110ff4fe0fe0ff1ff0ee0ff0e00e01d00d00e00e00d00d00d00d00
d00d00a30fc4ff0ff0ff0ff00bf0bf5a4dfcbf959349eaff0ad0ad19daff09d0ae0bf8ff0ac0ab
effefffffffeffeffeffcffcffffffffffffffffffffffffd00e00c00d00d00d00e00e00e00e00
f00f00a20fc5ff0ff0ff0ff0ffeffeffefeefeefeefeefeefedfedfeefeefeefddffffeeffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffde922e00f01d00d00e00e00d00d00d00d00e00e00d10d00
fd3fd3ef0df0ff0fe0fe5ff6ffcffcfffffffffffffffeefffffffffeffeffffffcff37be00d00
e01e01d10d10f00f00e00f00d01d01e11d01930fc4ff0fe0ce7cf7ff2fe0fe0fe0ff0ef0eb8730
e00e00d00d00d00d00e01e01e00e00c10c10a30fc4ff2fe1ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ee0fe0ff0ef0ff0fd2fd2fa6b10c00d10d00d00e00e00e01e01e00e00d00e00
ee0fe0ef0ff0ff1fe0ff0ff0ff0ff0fe0fe0fd4930e00e00d00d00d00d00e00e00e01e01d10c10
a40fc4ff1ff1ff0ff1ff2ee1ee3ff6ff6ee5de6ff9000000100000103002010ff7df4df4ef3ff4
110000001001000100000eeafe3ff4ff1fe0fe0ff0ff0ff0d00d00d00d00e00e00d00d00d00d00
d00d00a30fc4ff0ff0ff0ff00bf09ebfaaf9bf86a338d39e0ad09c29d2ae0ae1bf09c0ae1bd0ac
effeffffefffffeffeffdffdffffffffffffffffffffffffd00e00c00d00d00d00e00e00e00e00
f00f00a20fc5fe0ff0ff0ff0ffeffeffeffe732732822822822822822822722833feefeeffffee
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffeffefffffffffffffffffeffb12b12f00f00d00e10e00e00d00d00d00d00d00d00a30fc5
fe1fe0ff0fe0ef0ff0fffffffffffeffffffffffffffffffeffefeffffffffffffaff4ac879545
d00d10c11c01d02e02e00e00c00b00e00d00b20fb7fe0ff0ff0fe0fe0ff0fe1fe1ef1df1fd4930
e01e00d00d00d00d00e01e01e00e00c10c10920fc4fe1fe1ef0ff0ff0ff0ff0ff0ff0ff0ff0ff0
fe0ff0ff0fe0ff0ff1ff0fe0ff0ee0fd1fe2fc6a20e10d00d00d00c10c10d00d00e01e01e01f02
ff0ff0ff0ef0ff1fe0ff0ff0ff0ff0fe0fe0fd4930d00d00d00d00d00d00e00e00d00e01d10c00
a30fc4fe1fe1ff1fe0ff2ff4fe3fe3ed2ff6ee4ff5ee6ff8000000000000000100000fff000000
001001000110110ee2ff1ee0ff0fe0fe0ff0fe0ff0fe0fe0e00e00d00d00e00e00d01d01d00d00
d01d01930fd4ff0ff0ff1ff1884ffbfe0fe0ef4ff64b43a4c01d12d00d00e10d00f01f01d00d00
d00e10821fdcfeffffffffefffffffffffffffffffffffffd00e00d00d00d00d00d00d00d00d00
c10c10740fd5ee0ff0fe0fe0fdefdec02c02e00e00e00e00e00e00e00e00c00e11b10b11911fdd
fedfdcffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffeffeffffffffffffffffffffb02b12f00f00d00d00e00e00d00d00d00d00d00d00a30fb4
fe0ff1fe0ff0ff0ff0fffffffffffeffffffffffffffffffffffffffffffffffffbff49b768546
d10d00c00c11d02e02d00e00d20c10e00e00b10c20ff1fe0fe0ff0ff0ff0fe1fe1df0df1fc4a30
e00e01d00d00d00d00e01e01e00e00c10d10930fc4fe1fe1ff0ef0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0fe0fe0ff0ff0ef0fe1fe1fb5b30c00d10d00d00c10c10d00d00e01e01e01d00
ff0fe0ef0ef0ff1fe0ff0ff0ff0ff0fe0fe0fd4930d00d00d00d00d00d00e00e00e01e01c00c10
a30fd4fe0fe1ff1ff1ff2ff2fe2ff5ff3fe3ff4ff5ef7ee6eeaffc000000000000000000000000
001001000000ef3ee2ff0ff0fe0fe0ff0fe0ff0fe0ff0ff1d00e00d00d00e00e00d01d01d00d00
d01d01930fd4ff0ff0ff1ff1ee9ee9fe0fe0ef4ee4afa9f9c01c01d00e10d00d00f01e00e00f12
c00d00821fecffffffffffffffffffffffffffffffffffffd00e00d00d00d00d00d00d00d00d00
c10c10740fd5ff0ef0fe0fe0812923c02c02e00e00e00e00e00e00e00e00d00c00c11b11921811
822fedffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffedfedd00d00e01e00d00d00d00e10d00d00e01d00b00c10ff0ff0
fe0fe0ff2ef1feaffcffffffffffffffffffffffffffffffffffffffffffffffffcff48b19f19f
b20b20d10d00e01e01e00e00e01e01d00d00a20a20ff0fe0fe3fd3fe1fe1ef0ef0fe0fe0fd5930
d00e00d00d00d00d00e01e01e00e00c10d10930fc4fe1fe1ff0ef0ff0ff0fe0ff0ff3ee2ff0fe0
ff0ff1fe0fe0ff1ff0fe1fe1ff0ff0fe0fe0fd4930d10d00e00e01c00d01d11c00e10e00c00d10
ff0ee0ff0ff0ff2fe1ff0ff0ef0ef0ff0fe0fc5a30d00d00e00e00d00d00d00d00d00d00d00d00
a20fc5fe1fe1ff0ff0ff2ff4ff4fe4ee4ff6ff4fe3ee2ff5fe3ff3ee3110000000000000100100
110000ef0ef0fe1fe1ff1ff1ff0ff0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
e00e00930fc5ff0ff0ef0ef0ff0ff0fe3ff5ee0ff0fe4ff6d00d00d00d00d00d00d00d00d00e00
d01d01a30fd9ff6ff6ff7ff6ffffeefffffffffeffffffffd00d00e00e00d01c00d00d00e00f01
c00d10b30fb5fd4fd4c10b00e00d00e00e00d10d10c10c10d00d00e00e00e00e00c10c10c00c00
e00e00ffafe9ffffffffffffffffffffffffffffffffffffffcffdffffffffffffffffffffffff
fffffffffffffffffffffffffec620d00d00e00f01d00d00d00d00d10d10d00e01d22b00ff0ff0
fe0fe0ff2ef1ffbffcffffffffffffffffffffffffffffffffffffffffffffffffcff49b2af19f
c30a10d00d10e00e00e00e00e01e01d00d00a20b30fe0fe0fe4fe3fe1fe1ef0ef0ff0fe0fd5830
e00d00d00d00d00d00e01e01e00e00c10c10920fc4fe1fe1ef0ff0ff0fe0ff1fe0ee2ff3fe0ff0
ff1ff1ff0ff0ff1ff0fe1fe1ff0ff0fe0ff1fc3a30c00d10e00f01d01d01c00c00e00d00d10c00
ff0fe0ff0ff0fd1fe1ff0ff0ef0ef0ff0fe0fc5a30d00d00e00e00d00d00d00d00d00d00d00d00
a20fc5fe1fe1ff0ff0fe2fe2ee3ff6fe4fe4ed2ff6fe3ee2ff4ff4ff5fe4ed8100000000100100
dd6ee8ef0ef0fe1fe1ff1ff1ff0ff0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
e00e00930fc5ff0ff0ef0ef0ff0ff0fe3ff3ff1ff0fd3fe4d00d00d00d00d00d00d00d00e00e00
d01d01a20fc8fe4fe4ee4ee4ffffffffffffffffffffffffd00d00e00e00d01c00d00d00e00e00
d10d10a20fb4fd5630c10d21e00f01d00d00d10d10c10c10d00d00e00e00e00e00c10c10c00c00
e00e00620ff9feffffefefffffffffffffffffffffffffffffcffdffffffffffffffffffffffff
fffffffffffffffffffffffffec710e21d00e00d00d10d00e00d00d00d00d00c00b10c20ff0ff0
fe0ff0ee4ff5ffdffdffffffffffffffffffffffffffffffffffffffffffffffffbff3990ad0be
fd0fe1ff1fe0ff1ff1ff0ff0ff0ff0ef0ef0fd3fc2ff0ff0ff1fe1fe0fe0ef0ef0ff0fe0fa9731
e00d00d00d00d00d00e01e01e00e00c10c10a30fc4ff2fe1ef0ff09f8af8bf8bf7afaafaafaaf9
afa9f9ff0ef0ff1ff1ff0ff0afc9ebcfabe9fb6a30d00e10d01d01d00e00e00e00e13d02c10c10
ff0ff0ee0ff0fe1fd0ff0ff0ff0ef0ff0fe0fc4a30d00d00d00d00e00e00d00d00d00d00d00d10
930fc4ff0ff0ff0ff1fe2ff4ff4fe3fe4ff6ff3fe3ff3ff4ff3fe3ee3ff6ef4de3000000100ee7
ff1ef1ff0ff0fe0fe0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
e00e00930fc5fe2fe2ff0ff0ee4ff6ef0ef0ee3ff5ff0ff0d00d00d00d00d00d00d00d00e00e00
d00d00a20fc6fe1ee1ff2ee2ffffffffffffffffffffffffd00d00e00e00d01d00d00e00d00d00
c10c10b20fc7f00e00f10d00d01e01c00d10e01e01d00d00d00d00d00d00e00e00e00e00d00d00
d00d00c23900fd3fd3ffdffdffeefeffffffffffffffffffffeffeffffffffffffffffffffffff
fffffffffffffffffffffffffdb932d00c00e01d00e10d00d00d00d00d00f12e01c20fa7ff0ff0
fe0ff0ee3ff5ffdffdffffffffffffffffffffffffffffffffffffffffffffffffbff39a0ad0be
fe1fe1fe1fe0fe0fe0ff0ff0ff0ff0ef0ef0fd3fd3fe0fe0fe1fe1ff0ff0ef0ff0fe0ff0c76831
d00d00d00d00d00d00e01e01e00e00c00c10a30fb4fe1fe2ff0ff04a24b35916a35a54935a44a3
5a54a4ef0ef0ff1ff1ff0ff04965a7693593b30a30c00e00d12c01d00e00e00d00d02d02c10fa7
ff0de0ff0ff0fe1ff2ff0ff0ff0ef0ff0fe0fc4a30d00d00d00d00e00e00d00d00d00d00d00d10
930fc4ff0ff0ff0ee0ff2ff2ee3ff5ee3ff4fe3ff4ff3ff3ee2ff5ff4fe4ef4ff5000000110fe8
de0ef1ff0ff0fe0fe0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
e00e00930fc5fe2fe2ff0ff0ff4ee4ff0ef0ee3ee3ff0ff0d00d00d00d00d00d00d00d00d00d00
d00d00a30fc6ff2fe2fe2ff2ffffffffffffefefffffffffd00d00e00e00d01d00d00e00d00d00
c00c00b20fa5d00f10d00d00e11d00d10d00e01e01d00d00d00d00d00d00e00e00e00e00d00d00
d00d00a11b22840fd3fdbffdffeffeffffffffffffffffffffeffeffffffffffffffffffffffff
fffffffffffffffffffffffffdc921d00d00e01e01d00d00d00d00e10d00c00d00a20fc5ff0ff0
ff0ff0ee8ffaffffffffffffffffffffffffffffffffffffffffffffffffffffffcff49b0bf0ae
ff0fe0ef0ff0ef0ef0ef0ef0ff0ff0ff0ff0fe0ff0fe0ff0ff0ff0ff0ff0ff0ff0fe0fe0969636
d00d00d00d00e00e00e01e01e00e00d10d10a20fb5fd2fe3fe0fe10bf0bf1ae09d09e1af0ae0ae
19d09dff1ff1fe2fe2fe0fe00bb0bbc57914d00d00d10d00e00e00e00e00d00d00d02e02920fd5
ef0ef0ff0ee0ff1fe0ff0ff0ff0ff0ff0ff0fc4930c10c10d00d00e01e01e01e01e00e00d00d10
930fc4ff0ff0ff0ff1fe2ff4ff4fe3ff4ff5ff4fe3ff3ff5ee2ff3ff4ff5de3ff4000000100fe6
ef0ef0ff0ff0ff0ff0ff0ff0fe1fe1ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
d02d02a30fc3ef0ef0fe0ff0ff0ee0fd3ff6ef0ef0ef1ff4d00d00d00d00d00d00d00d00e00d00
d00d00a30fc4ff0ff0ff0fe0dffcffffffffffeffeffffffd00d00d00e00d00d00d00d00d00d00
d01d01b10d20f01e00d00e00d01e01e00d00f00f00e00e00d00d00d00d00e00e00e00e00e00e00
d00d00d10d00c11b00fd0fe1ffaefaffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcca22e11e00d00d00d00d10d00d00d00d00d00e10a20fc5ff0ff0
ff0ff0ef8ffaffffffffffffffffffffffffffffffffffffffffffffffffffffffcff59c0ae0ae
ff0ff0ef0ef0ef0ef0ef0ef0ff0ff0ff0ff0fe0ff0fe0fe0ef0ef0ff0ff0ff0ff0ff1fe096a526
d00d00d00d00e00e00e01e01e00e00c10b00a20fc5fe3fe3fe0ff10cf0bf09d1ae0ae09e0ae0be
1ad1adef1ef1fd1fd2fe0fe00bb0bba25a25c00e10c00d00e00e00e00d00e00f10d01d01b30fb4
ef0ef0ff0ff0fd0fe1ff0ff0ff0ff0ff0ff0fc4930c10c10d00d00e01e01e01e01e00e00d00d10
930fc4ff0ff0ff0fe0fe2fe2ee3ff5fe3fe4fe3ff5ed2fe2ff4ff5ee3fe3ff4ff5000000210ed5
ef0ff0ff0ff0ff0ff0ff0ff0fe1fe1ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
d02d02a30fc3ef0ef0fe0ff0ff0ff0fd4fc2ff1ef1ef1ef2d00d00d00d00d00d00d00d00e00d00
d00d00a30fc4ff0ff0ff0fe0dffdffffffffffeffeffffffd00d00d00e00d00d00e10d00d00d00
c01d01c10b00e00f01e00e00d00e01d00e00f00f00e00e00d00d00d00d00e00e00e00e00e00e00
d00d00e10d00c10c11940fd0ce8ffaffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffb11a00d00d00e01d00d10d00d00e11c00c00e10c00a40fc1ff1ff1
ff0ff0ffdffeffffffffffffffffffffffffffffffffffffffffffffffffffffffbff49b0bd0be
ff0ff0ff0ff0ff0ff0ff0ff0fe2fe2fe2fe2ff0ff0ff2fe1ff0ef0ef0ef0ff0fe0ff1fe097a436
d00d00d00d00d00d00e00e00e00e00d00c00d30f96fb5fb4fc3fc4b56fdefdcfdcfedfedfee967
878878fc2fd3fb6fc6fc5fc5d02d02d00d00f00f00d10d10c10c10e00d00d10c10a00c20fd2fd2
ff0ef0ee0ff0fe1ff1ff0fe0ff0ff0ff0ff0fc4930d10d10d00d00e00e00d00d00d00d00d00d00
b20fb6fd2fd2ff1ff1ff2ff5ff4ee3ee3ff6ff3ff4ff3ff5ee2ee3ff4ff6ce1ef3010000100fd7
ff1fe0fe1fe1ff1ff1ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
d00d00a20fc6ff0ff0ff0ff0bfccfeff1fe0fe3ff5ff2ee1d00d00d00d00d00d00d00d00e00d00
d00d00a30fc4ff0ff0fe0ff0bffbffffffffffeffdffffffd00d00d00d00e00d00d00d00e00e00
d00d00e00e00c10b00d00f02e00d00c20b10c10c10b10b10c10c10d01d01e01e01d00d00d00d00
e00e00e00e00e00e00c20fa7ef0ef0fecffcffffffffeffeffffffffffffffffffffffffffffff
ffffffffffffffffffffffffb10b11e00e11d00e01d00d00d00e01d10d00d00d10fc2fd3ff1ff0
ff0ff0ffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffffbff49b0ad0be
ff0ff0ff0ff0ff0ff0ff0ff0fe2fe2fe2fe2ff0ef0ff2fe1ef0ef0ff0ff0ff0fe0ff0ff086a536
d00d10d00d00d00d00e00e00e00e00d10c00b10c20a30a20a40930823833a11a11821821644634
545434b40a30a10b20930930d02d02d00e01f00f00d10c00c10c10e00e00c10b00d30fa6fe2fd2
ef0ef0ff0ff0fe0fe0ff0fe0ff0ff0ff0ff0fc4930d10d10d00d00e00e00d00d00d00d00d00d00
b20fb6fd2fd2ee1ff1ee2ee2ee3ff5ff4ee3ff3ff5ee2ff3ff4ff5ee3ee3ef3ff4000000200fe7
fe0ff0fe1fe1ff1ff1ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
d00d00a20fc6ff0ff0ff0ff04965a7ed0ff1fe3fd2ff2ef2d00d00d00d00d00d00d00d00e00d00
d00d00a30fc4ff0ff0ff0fe049b39affefffffdffeffffffd00d00d00d00e00d00d00d00d00d00
e10e00e00e00b10c10f01d00e00e00b10c10c10c10b10b10c10c10d01d01e01e01d00d00d00d00
e00e00e00e00e00e00b10b10ff0df0fdbfecffffffffeffeffffffffffffffffffffffffffffff
ffffffffffffffffffffffffd01d01e00e00d00d00d00d00d00d00d00d00c10d10fd0fe0ff1ff1
ee0ff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff49b0ae0ae
fe1fe1ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ef0ef0fe0fe0ff1ff1ff0ff0fe0fe0ff0ff0878445
d00d00d00d00d00d00d00d00e00e00e00e00d00d00c10c10c10c10d00d00e00e00d00d00c01c01
b10b10d00d00d10d10c10c10d00d00e00e00e01e01e01e01d10c00e00e00f00f00650fe2fe0fe0
ef0ef0ff0ff0ff0ff0fe0fe0ff0fe0ff0ff0fc4930d00d00e00e00d00d00d00d00d00d00e00e00
d00d00b20b20e00e00e00e00e00e00e00e00e00e00e00e00e00e00e00e00e00e00d01d01e00e00
d00d00c10c10fe1fe1ff0ff0ff2ff2ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
e00e00930fc4fe2fe2fe1fe10bd0be19caffcf2df2fe3ff5d00d00d00d00d00d00d00d00e00e00
d00d00a30fc4ff0ff0ff0ff038bbffffffffffdffeffffffd00d00d00d00e00d00d00d00d00d00
d10d10f01f01d00d00e00e00a20a30fe2fe2fe0fe0fd2fe2930930c10d10d00e00c00c00d10c00
e00e00d01d01e00e00d02c02fe3fe3fe0fe0ffffffffeffeffeffeffffffffffffffffffffffff
ffffffffffffffffffffffffd01d01e00e00d00d00d00d00d00d00d00d00c10d10fd0fe0ff1ff1
ee0ff1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff49b0ae0ae
fe1fe1ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ef0ef0fe0fe0ff1ff1ff0ff0fe0fe0ff0ff0878445
d00d00d00d00d00d00d00d00e00e00e00e00d00d00c10c10c10c10d00d00e00e00d00d00c01c01
b10b10d00d00d10d10c10c10d00d00e00e00e01e01e01e01c00d10f01d00f00f00fe2ff3fe0fe0
ef0ef0ff0ff0ff0ff0fe0fe0ff0fe0ff0ff0fc4930d00d00e00e00d00d00d00d00d00d00e00e00
d00d00b20b20e00e00e00e00e00e00e00e00e00e00e00e00e00e00e00e00e00e00d01d01e00e00
d00d00c10c10fe1fe1ff0ff0ff2ff2ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
e00e00930fc4fe2fe2fe1fe10bd0ce2ad2ad7a0df2fe3ff4d00d00d00d00d00d00d00d00e00e00
d00d00a30fc4ff0ff0fe0ff139b38bffffffffeffeffffffd00d00d00d00e00d00d00d00d00d00
d10d10f01f01e10c00e00f10fc4fc4ff3ff3fd0fd0fd2fe2fd6fc5c00d10f11c00d10d11c00d10
e00e00d01e12e00e00d12c01740fd2fe0fe1feffffffeffeffeffeffffffffffffffffffffffff
ffffffffffffffffffffffffe00e00e00e00d00d00d00d00e00d00d00d00c10c10fe0fe0fe0ff1
ee3ff4ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff49b0ae0ae
fe1fe1fe1fe1fe1fe1ff0ff0ff0ff0ef0ef0ef0ef0fe0fe0ff0ff0ff0ff0fe0fe0ff1ff1878544
e00e00d00d00d00d00d00d00e00e00e00e00e01e01e00e00e00e00d00d00d00d00d00d00f00f00
e00e00e02e02d00d00e00e00d00d00e00e00e00e00d00d00d00d00b30a20ff2df0ff0fe0ff0ff0
ff0ff0ff0ff0ff0ff0ff0fe0ff0fe0ff0ff0fc4a30d00d00e00e00d00d00c10c10d00d00e01e01
e01e01d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00e00e00d10d10e00e00
d00d00d10d10ff0ff0fe0fe0ff0ff0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
d00d00930fd3ff0ff0ff0ff12a82a80ae0ae09e0bfaeaafbd00d00d00d00d00d00d00d00e01e01
d00d00a20fc5ff1ff0ff1fe159adffffffffdddfffffffffd00d00d00e00d00d00e01e01d00d00
d01d01d00d00d00e10840fc2fe0ff0fe0fe0ff0ff0df1ef2dd4fe6fda810c00d11d00d00c00d00
d10d00c10d10d00d00d00e21b20fb6fe0ff1fe5ff6ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffe00e00e00e00d00d00d00d00e00d00d00d00c10c10fe0fe0fe0ff1
ee3ff5ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff49b0ae0ae
fe1fe1fe1fe1fe1fe1ff0ff0ff0ff0ef0ef0ef0ef0fe0fe0ff0ff0ff0ff0fe0fe0ff1ff1878544
e00e00d00d00d00d00d00d00e00e00e00e00e01e01e00e00e00e00d00d00d00d00d00d00f00f00
e00e00e02e02d00d00e00e00d00d00e00e00e00e00d00d00e11d00910fc6de0ef1ff1fe0ff0ff0
ff0ff0ff0ff0ff0ff0ff0fe0ff0fe0ff0ff0fc4a30d00d00e00e00d00d00c10c10d00d00e01e01
e01e01d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00e00e00d10d10e00e00
d00d00d10d10ff0ff0fe0fe0ff0ff0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
d00d00930fd3ff0ff0ff0ff18fe2a80ae0ae0bf0af595595d00d00d00d00d00d00d00d00e01e01
d00d00a20fc5ff1ff0fe1fe1dffdfffeffffffffffffffffd00d00d00e00d00d00e01e01d00d00
d01d01d00d00e00d00fd3fd2ff0ff1fe0ff0ff0ee0ff2ff3ff8ff8fdafebd11c00d00e00d10d00
d10c00c10c10d01d00c00d00b10b20fe0ff1ee4ff6ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffe00e00d00d00d00d00e00e00e00e00d00d00c10c10ff0ff0fe0ff0
ee5ff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffaff3a90bd0bd
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0ff0ff0ff0ff0ff0ff0ff1ff1878535
d00d00d00d00d00d00d00d00d00d00d00d00e00e00e00e00e00e00d00d00d01d01c10c10e00e00
d00d00e01e01d01d01e00e00b10b10e00e00d00d00d00d00e00e00c20fb6fe2fd1de0ef1ff0ff0
ff0ff0fe0fe0ff0ff0ff0ff0ff0fe0ff0ff0fc5a30d00d00e00e00e00e00d00d00d00d00e01e01
e01e01d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00e01e01d10d10e00e00
d02d02d00e00ef0ef0fe1fe1ff0ff0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
d10c10a30fc4ef0ef0ff0ff0ff1ff1cf57b009f09f09d1bfd00d00d00d00d00d00d00d00e00e00
d00d00a30fc5ff0ff0ff1ff1ffffffffffffffffffffffffd00d00e00e00d00d00e00e00e00e00
e02e02c10c10a20fc6ef0df0df0df0fe1fd0edbffdffefffffffffffffeffde812e12d01d00e00
c00d10d00d00c00d10e22c00e00e00ff0ff0ef0ff0ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffe00e00d00d00d00d00e00e00e00e00d00d00c10c10ff0ff0fe0ff0
ee5ff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffaff3a90bd0bd
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0ff0ff0ff0ff0ff0ff0ff1ff1878535
d00d00d00d00d00d00d00d00d00d00d00d00e00e00e00e00e00e00d00d00d01d01c10c10e00e00
d00d00e01e01d01d01e00e00b10b10e00e00d00d00d00d00e00e00c10c10840fe2ef1ef0ff0ff0
ff0ff0fe0fe0ff0ff0ff0ff0ff0fe0ff0ff0fc5a30d00d00e00e00e00e00d00d00d00d00e01e01
e01e01d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00e01e01d10d10e00e00
d02d02d00e00ef0ef0fe1fe1ff0ff0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
d10c10a30fc4ef0ef0ff0ff0fe1fd0bf5bf50af0af3cf08cd00d00d00d00d00d00d00d00e00e00
d00d00a30fc5ff0ff0ee1ff2ffffffffffffffffffffffffd00d00e00e00d00d00e00e00e00e00
e02e02c10c10a20fc6df0ef0ef0ef0fd0fe1ffdffdffeffffffffffffffffdda34d00d00e00f00
c00c10d10d00c00c00c00c00d00e00ff0fe0ff0ff0ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffeffeffe00e00d00d00d00d00e00e00e00e00d00d00c01c11ff0ff0ff0fe0
ee6ff9ffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff48b0ae0ae
fe1fe0ff0ff0ff0ff0ff0ff0fe1fe1fe1fe1ff0ff0fe1fe1ff1ff1ff0ff0ef0ef0ef0ef0879535
d00d00e00e00d00d00d00d00d00d00d00d00d00d00d00d00d00d00e00e00e01e01d10d10e00e00
d00d00d00d00c02c02d00d00f00f00e00e00e02e02d00d00d21c00e02d02d00d00fa3fc4ff0ff0
fe0fe0fe1fe1ff0ff0ff0ff0ff0fe0ff0ff0fc5a30c10c10e00e00e01e01d00d00d00d00e00e00
d00d00c10c10d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00c10c10e01e01
d00d00d00e00ef1ef1fe2fe2ff0ff0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
e01e01930fc6fe1fe1ff0ff0ff0ff0fe1fe1ff1de02a82b8d00d00d00d00d00d00d00d00e00e00
d00d00a30fc4ff0ff0ff2ef1ffcffcffffffffffffffffffd00d00e00e00d01c01d00d00d00d00
d00d00d00d00fe1fd0fe0fe0ee1ff3ee9ffbfffefefffffffeffffdffdffffdfecd11c00f01f00
d01d01e00e00d11e11c01d12f00f00ff0ef0ff0ff0ef8ff9ffffffffffffffffffffffffffffff
ffffffffffffffffffeffeffe00e00d00d00d00d00e00e00e00e00d00d00c01c11ff0ff0ff0fe0
ee6ff9fffffffffffeffffffffffffffffffffffffffffffffffffffffffffffffcff48b0ae0ae
fe1fe0ff0ff0ff0ff0ff0ff0fe1fe1fe1fe1ff0ff0fe1fe1ff1ff1ff0ff0ef0ef0ef0ef0879535
d00d00e00e00d00d00d00d00d00d00d00d00d00d00d00d00d00d00e00e00e01e01d10d10e00e00
d00d00d00d00c02c02d00d00f00f00e00e00e02e02d00d00c00b00d02d02d00d01c30b20ff0ff0
fe0fe0fe1fe1ff0ff0ff0ff0ff0fe0ff0ff0fc5a30c10c10e00e00e01e01d00d00d00d00e00e00
d00d00c10c10d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00c10c10e01e01
d00d00d00e00ef1ef1fe2fe2ff0ff0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
e01e01930fc6fe1fe1ff0ff0fe0ff0fd0fe1ef0ef07fd2a8d00d00d00d00d00d00d00d00e00e00
d00d00a30fc4ff0ff0ef1ef1ffcffcffffffffffffffffffd00d00e00e00d01c01d00d00d00d00
d00d00d00d00fd0fe1fe0ff0ef2ee1ffbffbefffffffffefffffffdffeffffdffdc10c10f00f00
d00e01f00e00c00d00d12b01f00f00ff0ef0ff0ff0de7ffaffffffffffffffffffffffffffffff
ffffffffffffffffffffeffed01d01d00d00d10d10c00d00e00e00c10d20c00c01ff2fd0ff0ff0
fe6ff8ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffaff39b19f1af
fe1fe1fe0fe0ef0ef0ff0ff0ff0ff0ff0ff0fe1fe1fe1fe1ff0ff0ef0ef0fe0fe0ff0ff0967634
d00d00d00d00d00d00d10d10d00d00e01e01d10d00c20b10d10d00d00d00e01e01d01d01d00d00
d00d00e00e00d00e01c00c10d11c00e00f01c00c00f02e01c10c10e00e00f00f00c10c10fb6fc6
ef0ef0ff0ff0ff1fe0fe1fe1ff0ff0ff0ff0fc5a20d10d10e00e00e01e01d00d00d00e00f00f00
e01f01d00d00e00d00d00d00d00d00d00e00d00d00d00d00d00d00d00d00d10d00d00d00f10d00
e01d00c10b10fd1fe2ef0ef0ff0ef0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
d10d00930fc5fe1fe1ff0ff0ff0ff0ff0fe0ff0fe0fe0fe0d00d00d00d00d00d00d00d00d00d00
d00d00a30fc5ff0ff0ff0ff0ffffffffffffffdffeffffffd01e01d00d00d00d00d00d00d00d00
e00e00a10c30ff0fe0fe1fe1ef3ff3ffffffffffffffffffffffffffffffffffffb11c22d00d00
d10d00d00d00e00e00e02e02d00d00a30fc3fe1ff1fe5ff8efffffffffffffffffffffffffffff
ffffffffffffffffffffeffee01d01d00d00d10d10c00d00e00e00c10c10d02d02fd0fe1ff0ff0
fe6ff8ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffaff39b19f1af
fe1fe1fe0fe0ef0ef0ff0ff0ff0ff0ff0ff0fe1fe1fe1fe1ff0ff0ef0ef0fe0fe0ff0ff0967634
d00d00d00d00d00d00d10d10d00d00e01f01d00c00b10b10d10c00d00d00e01e01d01d01d00d00
d00d00e00e10d00e01c10d10c00d11e01e01e10d10e00e01c10c10e00e00f00f00c10c10a10fb5
ef0ff0ef0ee0ff1ff1fe1fe1ff0ff0ff0ff0fc5a20d10d10e00e00e01e01d00d00e00d00f00e00
f01e01d01e11e00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00e10d00d00d00e00
e01e01c10b10fd1fe2ef0ff0ef0ef0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
d10d00930fc5fe1fe1ff0ff0ff0ff0ff0fe0ff0fe0ff0ff0d00d00d00d00d00d00d00d00d00d00
d00d00a30fc5ff0ff0ff0ff0ffffffffffffffeffeffffffd01e01d00d00d00d00d00d00d00d10
d00d00c30fa4ff0ff1fe1ff1ee2ff4fffffffffffffffffffffffffffffffffffffcca11d00e10
d00d10d00d00e00e00e02e02d00d00a30fc3ff1ff1fe5ff8efffffffffffffffffffffffffffff
ffffffffffffffffffffffffc00d01d00d00d10d00d00d00e00d00d10c00d01d11fd0ff0ff0ff0
fd8ffaffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff4990ae0ae
ff0ff0ff0ff0ef0ef0ff0ff0ff0ff0ff0ff0ef0ef0fe1fe1ff0ff0ef0ef0fe0fe0ff1ef086c539
d00d00d00d00d00d00d10d10d00d00e00e00b10d20a30a30b30a20940940930930930930840840
930a40a20a20a20a20930a30d00d10e00e00e01d01d00f01b10b10d00d00d00d00d01d01d20b10
ff1ed0ff0ff0fd0ff0fe1fe1ff0ff0ff0ff0fc5a20d00d00e00e00e01e01d00d00d00d00e00d00
d10c00a10b20e00d00d00d00e00e00d00e00d00d00e11d00e00d00e10d00d01d00d02d03e00e00
d00d00c10c10fd2fd2fe0ff0fe0ff0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
e01e01930fc5ff0ff0ff0ff0ff0ee0fe0fe0cf5ef70af0bfd00d00d00d00d00d00d00d00d00d00
d00d00a30fc5ff0ff0ff0ff0effeffdefffffedffeffffffd00e01d00d00d00d00e10d00d00e10
d01c00b30fc5ff0ff1fe0ff1de6ff9fffffffffffffffffffffffffffffffffffffdda11d00d00
d00d00d00d00e00e00e02e02d00d00930fc4ff0ff1fe3ff5ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffd01d11e10d00d00c00d00d00e00e00c00d10c00c01ff1fe0ff0ff0
fd8ffaffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff4990ae0ae
ff0ff0ff0ff0ef0ef0ff0ff0ff0ff0ff0ff0ef0ef0fe1fe1ff0ff0ef0ef0fe0fe0ff1ef086c539
d00d00d00d00d00d00d10d10d00d00e01e00d20f96fc4fc4fb5fc6fd3fd3fc4fc4fc4fc4fd4fd4
fb5fc6fb3fc4fc6fb6fc4fc4e10d00e00d00e02f03f01e01b10b10d00d00d00d00d01d01b10b10
fe0ff1fe0ff0fe0fe0fe1fe1ff0ff0ff0ff0fc5a20d00d00e00e00e01e01d00d00d10d00e00d00
c00e20b20b20d00d00d00d00d00d00d00d00d00d00e00d00e00d00d00d00e02d01e03d02d00d00
e00e01b10c20fd1fe2fe0ff0fe0ff0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
e01e01930fc5ff0ff0ff0ff0fe0ff0ff2fe1df67900af0bfd00d00d00d00d00d00d00d00d00d00
d00d00a30fc5ff0ff0ff0ff0effeffffffffffeffeffffffd00e01d00d00d00d00d00d00d00d00
e11d00b20fb4ff0ff0fe0fe1ee7ff9fffffffffffffffffffffffffffffffffffffbbb22e10c00
d00d00d00d00e00e00e02e02d00d00930fc4ff0ff0fe3ff5ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffc11a00d00d00e10d00e00d00d00e01d00e10c00c00fc0fd0ef0ef0
ee8ffaffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbff39b0af0af
ff1ff0ef0ef0fe1fe1ff0ff0fe0fe0ff0ff0ef2ef2ff0ff0fe0fe0ff1ff1ff0fe0ef0ef0879535
d00d00e00e00e00e00d00d00d00d00d00d00a30fc5fe1fe1fd1fe1fe0fe0fe0fe0fe0fe0fe0fe0
ff0ff0fe0fe0fe0fe0ff0ff0fe0ff0fd2750b11a00e00e00c10c10e00e00d00d00f00f00d00e10
840fd3ff1fe0ff1fe0ff0ff0ff0ff0ff0ff0fc5a20d00d00e00e00e00e00d00d00c00d00c00d10
b30fa5fd2fd2ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff1ff0ff0ff0ef0ef0ef2ef2fe0ff1
fe0fe0ff1fe0ff0ff0ef0ef0ff1ff0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
d01d01a20fc6ef0ef0ff1ff1ff0ff09ff3990cf0bf09e1afd00d00d00d00d00d00d00d00d00d00
d00d00a30fc5ff0ff0ff0ee049bcffbffbffefffffffffffd00e00d00d00e01d01d00e01d10c00
d01d00b30fc4ff0ef0fe0ff0ffdffdffffffffffffffffffffffffffffffeffefffdd811d10d00
e01e00d00d00e00e00e01e01d00d00930fc5ff0ff0fe1ff2ffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcdd33d00d00d00c00d00e11d00d00d00d00d11c00a60fd0ef0ef0
ee8ffaffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbff39b0af0af
ff1ff0ef0ef0fe1fe1ff0ff0fe0fe0ff0ff0ef2ef2ff0ff0fe0fe0ff1ff1ff0fe0ef0ef0879535
d00d00e00e00e00e00d00d00d00d00d00d00a30fb5fe1fe1fe2fe1ff0ff0fe0fe0fe0fe0ff0ff0
ff0fe0ff0fe0fe0fe0ff0ff0fe0fe0fe2ff3a00c22e00e00c10c10e00e00d00d00f00f00c00d10
840fc2fe0ff0fe0ff0ff0ff0ff0ff0ff0ff0fc5a20d00d00e00e00e00e00d00d00d00d10c00d10
a20fc6fd2fe2ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ee0ff0ff0ff0ef0ff0ff0ff0ff2ef2ff2ed0
fe0fe0fe1fe1ef0ff0ff1ef0ff1fe0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
d01d01a20fc6ef0ef0ff1ff1ff0ff03993990ae0cf1af1aed00d00d00d00d00d00d00d00d00d00
d00d00a30fc5ff0ff0ff0ff038a38a49bcffdfffffffffffd00e00d00d00e01d01e01e01d10d00
d01c00a20fc4ff0ef0ff0ff0ffdffdffffffffffffffffffffffffffffffeffefffdd810d00d00
d00d00d00d00e00e00e01e01d00d00930fc5ff0ff0fe1ff1ffffffffffffffffffffffffffffff
fffffffffffffffffffffffffdd901c00d11e10e00d00d00d00d00e00e00d10c00910fc2ff0ef0
ee6ff8ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff49a0ae0ae
fe2fd1fe0fe0fe2fe2ff0ff0ff0ff0ef0ef0fe1fe1ff0ff0fe0fe0ff0ff0ff0ef0ef0ef0a69725
d00d00d00d00e00e00d00d00d00d00e10d00a30fc4ee0ff0ff0ff00af0af19e19e1ae1ae0bd0bd
0ad0adcf0df0fe3fe4ef0df00bf0bf1ac0ac97c537c00e01e00e00f00f00d10d10e00e00e01e01
a20fc6ff1fe0fe0fe0ff0ff0ff0ff0ff0ff0fc5a20d00d00e00e00e00e00d00d00d00d00c10c10
a30fc4fe0fe0ff0ff0fe1fe1ff2ff2ff2fe2ff2ff2fe1ff2fe1ff2ff2fe1ee1ff3ed7ed7fe4ee3
ff0ff0fe0ff0ff0ff0ff0ee0ff0ff0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
c10c10a30fc4fe1fe1fe0fe00bf09d0ad1be2aa199790df4d00d00d00d00d00d00d00d00d00d00
d00d00a30fc5ff0ff0ff0ff02ad2ad09c9ff79adffffffffd00d00d00d00e01d01d00d00d00d00
d11d01a30fc4ef0ef0ff0ff0ffffffffffffffffffffffffffffffffffffeffefffdc932d11d10
e00e00d00d00e00e00d00d00d00d00930fc5ff0ff0ff0ff0ffffffffffffffffffffffffffffff
fffffffffffffffffffffffffdd911d11c00d00e00e00e00d00d10e00f00c00c00b30fc2ff0ef0
ee6ff8ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff49a0ae0ae
fe2fd1fe0fe0fe2fe2ff0ff0ff0ff0ef0ef0fe1fe1ff0ff0fe0fe0ff0ff0ff0ef0ef0ef0a69725
d00d00d00d00e00e00d00d00d00d00d10c00930fd5ff0ff0ff0ff00bf0bf29f29f1ae1ae0bd0bd
1ad0addf0df0fd3fe4ef0ff00af0af1ac1ac86a537e01d01e00e00f00f00d10d10e00e00e01e00
a20a20fe0fe0ff1fe0ff0ff0ff0ff0ff0ff0fc5a20d00d00e00e00e00e00d00d00d00d00c10c10
a30fc4ff0ff0ff1ff1fe1ff1ff2ff3ff3fe2ff2ff3ff2ff2fe1ff3ff2fe1ff2ff3100100110fe4
ff0fe0fe0fe0ff0ff0ff0ff1fe0ff0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
c10c10a30fc4fe1fe1fe0fe00ad0bf0bd09c2aa8ffdf4df4d00d00d00d00d00d00d00d00d00d00
d00d00a30fc5ff0ff0fe0ff019c1ac1ad1ad588effffffffd00d00d00d00e01d01e01d00e10d00
d00d00a30fc4ef0ef0ff0ff0ffffffffffffffffffffffffffffffffffffeffefffed821d00d00
d00e00d00d00e00e00d00d00d00d00930fc5ff0ff0ff0fe0ffffffffffffffffffffffffffffff
fffffffffffffffffffffffffdd822c11d12d00d00f10d00d00d00e00e00d00c00d20fa6fe1ff1
ef1ef1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff48c0be0cf
c10c10e00e00d01d01d00d00c10c10f01f01a10c20ff0ff0ff2fd1ff0fe0ef1ef1ff0fe0fd3930
e11d00d00d00d00d00d00d00e00e00d00d00a30fc4ff0ff0ff0ff0ff0ff0ff0ff0ff1ff1ff1ff1
ff0ff0ff0ff0fe0ff0fe0ff0fe0ff0ff0ee0ff1fe0d00d10d00d00c00c00d00d00d01d01e01e01
c10c10fe0fe0fe0fe0ff0ff0ff0ff0ff0ff0fc5a30d00d00d00d00e00e00d00d00e01e01d00d00
a30fc5ff0ff0ff1fe1ff2ff4ff3fe3fe2ff5fe2ff3fe2ff5ff3ff3ee3ff5fe3ff4000000110ee6
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
d02d02930fd3fe0fe0fe0ff00cd0cd494595ff0fe0ee4ff6d00d00d00d00d00d00d00d00d00d00
d00d00a30fc5ff0ff0ff0fe00ae8ff0ae0ae688effffffffd00e00d00d00d01d01d00d00d10d10
c00d00b30fb4ef0ef0ff0fe0ffffffffffffffffffffffffffffffffffffeffefffdda22d00d00
e01d00d00d00e00e00d00d00d00d00930fc4ff0ff0ff0fe0ffffffffffffffffffffffffffffff
fffffffffffffffffffffffffee833b00b00e11d00d00e00d00d10e00e00d11d00b00d20fe1fe0
ef1ff2eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff48c0be0ad
c10c10e00e00d01d01d00d00c10c10f01f01b20b10ee0ff0fe2ff2ff0fe0ef1ef1ff0ff0fc3930
e00d00d00d00d00d00d00d00e00e00d00d00a30fc4ff0ff0ff0ff0ff0ff0ff0ff0ef1ef1ff1ff1
fe0fe0fe0ff0ff0ff0ff0ff0fe0fe0ef0ee0ff1ee0d10d10d00d00c00c00d00d00d01d01e01e01
c10c10fe0fe0fe0fe0ff0ff0ff0ff0ff0ff0fc5a30d00d00d00d00e00e00d00d00e01e01d00d00
a30fc5ff0ff0fe1fe1fe2fe2ee2ff5fe3fe3ff3ff5ff2ff2fe2ff5fe3ee3ee3ff5100100010ff7
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
d02d02930fd3fe0fe0fe0ff00bd0ceaeabfbfe0fe0ff6ee4d00d00d00d00d00d00d00d00d00d00
d00d00a30fc5ff0ff0ff0fe00ad0ad0ae0aedffdffffffffd00e00d00d00d01d01d00d00c00d10
d00d00a20fb4ef0ff0ff0ff0ffffffffffffffffffffffffffffffffffffeffefffdd921d10d00
d00e00d00d00e00e00d00d00d00d00930fc4fe0fe0ff0ff0ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffefeec22c22d00d00e10e00d00d10e00e00d11e11d00d00fd4fc3
ef0ff0ffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffffbff29a979646
d00d10d00d00e01e01d00d00c10c10e01e01c20fb4ff1ff1ff0fe0ff0ff0ef1ef1fe0fe0fb5a20
d00d00d00d00d00d00d00d00e00e00e00e00a30fc5ff0ff0ff0ff0ff1ff1ff0ff0ff0ff0ff0ff0
ff2ff2fe2fe2fe0fe0fe0ff0ff1ff1ef0ef0ff0ef0d01d00d02d02d00d00d00d00c10c10e00e00
d00d00fe0ff0fe0fe0ff0ff0ff0ff0ff0ff0fc5a30d00d00d00d00d00d00d00d00e01e01d00d00
a20fc5ff0fe0ff1ff1fe2ff4ff4fe3ff4ff5ee3ef3ee2ff5ee2ff3ff4ff5ff5ee5000000000dd7
ff0ee0ff0ff0ff0ff0ff0ff0fe0fe0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
e00e00a30fc4fe1fe1ff0ff0783ffbff0ef0ff4ff6de0ff0d00d00d00d00d00d00d00d00d00d00
d00d00a30fc5ff0ff0fe0ff00ae0ad1bf1aeeffeffffffffd00e00e00e00d00d00d00e00d00d00
e00d00b20fc6ff0ee0fe0ff0ffffffffffffffffffffffffffffffffffffffeffffcbb22d00e10
d00d00d00d00e00e00d00d00d00d00830fd3ff0ff0ff0ff0feefffffffffffffffffffffffffff
ffffffffffffffffffffffffffeffeb11b01d00d00d00e00d10d00e00e00c00c00d00d11930fc3
ff0ff0ffdffeffffffffffffffffffffffffffffffffffffffffffffffffffffffbff29a868535
d00e10d00d00e01e01d00d00c10c10e01e01c20fa3fe0ff0fe0ff0ff0ff0ef1ef1fe0fe0fc5a20
d00d00d00d00d00d00d00d00e00e00e00e00a30fc5ff0ff0ff0ff0ff1ff1ff0ff0ff0ff0ff0ff0
fd1fe1fe1fe2ff0fe0fe0fe0fe0fe0ff0ff0ef0ef0c00d00d02d02d00d00d00d00c10c10e00e00
d00d00fe0ff0fe0fe0ff0ff0ff0ff0ff0ff0fc5a30d00d00d00d00d00d00d00d00e01e01d00d00
a20fc5ff0fe0ff1ee0ff2ff2ee3ff5ee3ff4ff3ff5ef2ff3ff3ff5ee3ff4ee4ff7000000010ef9
ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
e00e00a30fc4fe1fe1ff0ff0cd8ee9ff0ef0ee3fe4ff0ff0d00d00d00d00d00d00d00d00d00d00
d00d00a30fc5ff0ff0ff0fe00ae1be09d8ffeffeffffffffd00e00e00e00d00d00d00e00d10d00
d00d00c20f94ff1ee0ff0ff0fffffffffffffffffffffffffffffffffffffffefefdda11d00d00
d00e11d00d00e00e00d00d00d00d00940fc2ff0ff0ff0ff0ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffefffa01b22d00d00d00d00e10d00d00e00d01d00d00d00c20fa6
ff0fe0ed5ff8ffffffffffffffffffffffffffffffffffffffffffffffffffffffcff49af02f01
c00d11c11c00e00e00e00e00d00d00d00d00930fc4ff0ff1ff1ff1ff0ff0ff1fe1ff0fe0fc6940
d00d00d00d00e00e00d00d00e00e00d00d00a30fc5ff0ff0ff0ff0fe0fe0ff0ff0ff0ff0fe0fe0
ff0ff0fe1fe1ff0ff0ff0ff0fe0fe0ff0ff0fe0ff2d10d10d01d01e00e00e00e00e01e01d00d00
e00e00ff0ff0fe0fe0ff0ff0ff0fe0ff0ff0fc5a30d00d00d00d00d00d00d00d00e00e00d00d00
a30fc5ff0ff0fe1ff2fe2ff5fe5fe4fe5ff6fe4fe4fe3ff5fe3ff4fe5ff6fe3ff4100000000ee7
ff0ff0ff0ff0ff0ff0ef0ef0ef0ef0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
d00d00a30fc3fe2fe2ff0ff0ff0ff0ed2ff5ff1ff1ee1ff4d00d00d00d00d00d00d00d00d00d00
d00d00a30fc5ff0ff0ff0ed01ad9ff29d3aeffffffffffffd00e01e00e00c10c10d00d00d00d00
e00e00b10d20fe0fe1ff1fe0ffdffdfffefeffffffffffffffffffffffffffffffc12c11e00e00
d10c00d00d00e00e00d00d00c00c00fd0fe1ff1ef0fe1fe1fffffeffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcda01d00d11d00d00d00d00d00e00d11d01e11d00b10d20
fe0ff0ff7ff8ffffffffffffffffffffffffffffffffffffffffffffffffffffffcff389e01f01
c00d01c11c10e00e00e00e00d00d00d00d00930fd5ee0ee0ff1fe0ff0ff0ff1fe1ff0fe0fb4930
d00d00d00d00e00e00d00d00e00e00d00d00a30fc5ff0ff0ff0ff0fe0fe0ff0ff0ff0ff0fe0fe0
fe0fd0ff1fe1fe0ff0ff0ff0ff1fe0ff0ff0fe1fd0d10d00d01d01e00e00e00e00e01e01d00d00
e00e00ff0ff0fe0fe0ff0ff0ff0fe0ff0ff0fc5a30d00d00d00d00d00d00d00d00e00e00d00d00
a30fc5ff0ff0fe1fe1fe3fe3fd4ff6fd4fe5fe4ff6fe3fe4fe4ff6fd4fe5fe3ff4000100000ff8
ff0ee0ff0ff0ff0ff0ef0ef0ef0ef0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
d00d00a30fc3fe2fe2ff0ff0fe0fe0ff3fe2ff1ef0ef1ff1d00d00d00d00d00d00d00d00d00d00
d00d00a30fc5ff0ff0ff0ff02be1ad18caffffffffffffffd00e01e00e00c10c10d00d00d00d00
d00e00c10b00fe1fe1fe0fe0ffdffdfffffffffffffffffffffffffffffffeefffb01b00e00e00
d00d10d00d00e00e00d00d00c00c00fe1fd0ef0ef0fe1ff2ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffefeffffcda12d11d00d00d00d00e01d00d00d00c00e00d00e00e00
fd1fe1fe1fe1fffffffffffffffffffffffffffffffffffffffffffffffffffffffef935c10c20
d00d00e00e00c10c10f01f01b10b10e00e00ff0ee0ff2ff2ff0ff0ef0ff0fe0fe0ff0fe0b89634
d00d00e00e00e00e00d00d00d00d00d00d00930fc4ff0ff0ff0ff00af0af1ad1ad0ae0ae0bf0bf
0ae0aecf0df0fe3fe3ff0ee0ee0ff0ff0ff0fb5b40d00e00d02d02f00f00c10c10d00d00c10c10
e01e01ff0ff0fe0fe0ff0ff0fe1fe0ff0ff0fc5a30e00e00e00e00d01d01d00d00d00d00d10d10
930fc4ff0ff0ff0ff0ff2ff4ff4ee3fe3ff6ee2ee3ee2ff4ee3ff3fe4ff6ee3ff4000000000de8
fe0ff1fe1fe1fe0fe0ff0ff0fe0fe0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
d00d00a30fc4ff1ff1ff0ff0ff3ff5ff1ef0ee2ff5fe2fd1d00d00d00d00d00d00d00d00d00d00
d00d00a30fc5ff0ff0fe0ff019caff39d39cffffffffffffe01e01e00e00c10c10d00d00e10d00
e00e00d11d11fd2ff3fe1fe1ffcffcefefffffffffffffffffffffffffffffffefc00e12e00e00
d11c00d00d00e00e00d00d00c10c10fe0fd0ff1ff1fe2ff3ffeffeffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcda12e11c00d00d10d00e01d00d00e11d00e00e00e00d00
750fe1fe1ff2fffffffffffffffffffffffffffffffffffffffffffffffffffffffef723c10c10
d00d00d00e00c10c10f01f01b10b10e00e00ff0ff0ff1fe1ff0ff0ff0ff0fe0fe1ff0ff0967634
d00d10e00e00e00e00d00d00d00d00d00d00930fc4ff0ff0ff0ff00bf0bf1ae1ae0ae0ae0bf0bf
0ae09ddf0df0fd2fe3ff0ff1ff0ff0ef0ef0fc6920e00e00d02d02f00f00c10c10d00d00c10c10
e01e01ff0ff0fe0fe0ff0ff0fe1fe0ff0ff0fc5a30e00e00e00e00d01d01d00d00d00d00d10d10
930fc4ff0ff0ef0ff0fe1fe1ee3ff5ff4fe3ff3ff5ff2ff2ee2ff5ff4ee3ff4110000000000010
ff1fe0fe1fe1fe0fe0ff0ff0fe0fe0ff0ff0ff0ff0fe0fe0d00d00d00d00d00d00e00e00d00d00
d00d00a30fc4ff1ff1ff0ff0ff3ff3ee0ff1ee2ff3fe1fe1d00d00d00d00d00d00d00d00d00d00
d00d00a30fc5ff0ff0fe0ff019c2ad39dbffffeffeffffffe01e01e00e00c10c10d00d00d00d00
f00e00c00c00750fd1fe1fd1dd9ffceffffffffffffffffffffffffffffffee644d01d01e00d00
c10c10d00d00e00e00d00d00c10c10fe0fe0ef1ef1fe3ff5ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffeffeffffffffc01d01e00e00e00e00e01e00d00d00c00d10d00d10
e10d00fb7fb7ee7ff9ffeffeffeffefffffffffffffffffffffffffeffdefeefeed00d00d00d00
d00d00d00d00d00d00e00d00d10d10c10fa7ff0ff0ff0ff0fe0fe0ff0ff0ff0fe0fe0fe0879435
c00d00d00d00d01d01d01d01d01d01c10c10a30fc5fd1fe2ff0ff01af1ae59959939c39c2ac2ac
29d29eef1ef1ff1fe1ff0ef0ff0ff0fc4fd5d00c00f01e00d00d00c01c01d01d01e00e00d00e10
910fc6ff0ff0ef0ff0fe1fe1ff0ff0fe1fe1fd4930d00d00e00e00e00e00d00d00e00e00d00d00
a20fc5ff0fe0ff0ff0fe5ff8ff2ff2ee1ff4ee4fe4ef2ff4ee4ef5dd9000000000000000000000
000000ee6ee5ff0ff0fe0fe0ff1fe0ff0ff0ef0ff1fe0fe1d01d00d01d01d00d00d00d00d00d00
d01d01a30fc4ff0ff0fe2fe2ff0ff0ee5ff7fe0fe0ff5ff6d00d00e00e00e00e00d00d00e00e00
d00d00a20fc5ff0fe0fe1ff239baff1af0af2aaaffeffeffc00c00e10d00d00e00e00e00d00d00
e00e00e02e02b20fa7ff0ff0ee6ff8ffffffffdffeffeffefffeffffeffefddb22e00f00e00e00
b00c10d00d00d10c00e01d01c10c10ff0fe0ef0df0fe5ff7ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffeffdffffffefd12c01d00e00d00d00d00e00d11d00c10c00e10c00
d00e00a20a20ee7ff9ffeffeffeffefffffffffffffffffffffffffeffef733733d00d00d00d00
d00d00d00d00e10c00e10d00c00d10b00fa7ff0ff0ff0ff0fe0fe0ff0ff0ff0fe0fe0fe0879435
c00d00d00d00d01d01d01d01d01d01c10b00a30fc5fe1fe1fe0ff019e8ffcffcffbffbff9ff29b
29e2aeef1ff1ff1fe1ef0ef0ff0ee0a40920d00d10d00e00d00d00c01c01d01d01e00e00d10d10
b30fb6ff0ff0ff0ef0fe1fe1ff0ff0fe1fe1fd4930d00d00e00e00e00e00d00d00e00e00d00d00
a20fc5ff0fe0ff0ff1fe5fe6ee1ff3ff3ee1fe4ff6ff2ef1ef5010000010000000000001000001
000000010010ff0ef0ff1ff0ff0ff0ee0ff0ff1ff1fe1fe0e12d01d01d01d00d00d00d00d00d00
d01d01a30fc4ff0ff0fe2fe2ff0ff0ee5ee5fe0ff0ee4ff5d00d00e00e00e00e00d00d00e00e00
d00d00a20fc5ff0fe0ff1ee04ac3ab09e8ff2ab19a689effc00c00d10d00e10e00e00e00d00d00
e00e00e02e02b20b20fe0fe0ee6ff8ffffffffeffdffeffeefffffffeffeb22900f00e00e00f11
c10c00e01d00c00d10d00d00c10fb7ff0fe0df0ef0fd4ff7ffffffffffffffffffffffffffffff
ffffffffffffffffffeffefffffffffffffffed943c00d10d10d10d10d00d00d00e11d00c00e11
e10c00d10c00c10fa7feffeffeffefffffffeffeffffeffefdcffdfdca10d00d00d00d00e00e00
e00e00d00d00c00e11d00d00b20a10fe2ff2ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0879535
d00d00d00d00d00d00e00e00e00e00d10d00d20f96fb5fb5fc3fd4a78feffddfddfeffefffea77
879979fb3fb3fc6fc6fd4fd4d00f11d00d00f11e00d00e10d00d00d00d00d10d10c10c10c10c10
730fe4ff0fe0ef0ef0ff1ff1fe0fe0fe1fe1fd3930d00d00d00d00d00d00d00d00d00d00d10d10
930fc4ff0ff0ff0fe0ee1ff4ff5ff5ee4ff6ee4ff4ed8ffb100000000000100000120ef0010110
000100101001100ed9ee2ee2ef0ff0ff2fe1ff0ff0fe0fe1d00e00e00e00d00d00e01e01d00d00
e00e00930fc5ff0ff0ff0ff0cf6ff9ef0ef0ef3ff5fe0fe0d00d00d00d00d00d00d00d00d00d00
d10d10930fc4ff0ff0ff0ff0681efa5b939729fbff08b19cd10d10d02d02f01f01c10c10e01e01
d01d01c10c10d00e00b20fc7fe0ff0ffffffeffffffffefffffffffdda11d00e00f10d00d00e00
d00e00c00d00e02d02d00d00a30fb3fe0ff0fe0ff0de5ff8ffffffffffffffffffffffffffffff
ffffffffffffffffffeffefffffffffffffffedfedd10c00c00d00d00d00d00d00e01d00e00d00
c00e10d10c00d10d10612935feefffffffffdfdeffffdffe732621b21b10e00e10d00d00e00e00
e00e00d00d00e11d00d00e11b20b20fe1fd0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0879535
d00d00d00d00d00d00e00e00e00e00d10d00b10c20b30a30a40930623734921921723723643532
535435b40a30a30a20930930e00e00e01e01d00c00e10d00d00d00d00d00d10d10c10c10c10c10
fd4fd4fe0fe0ff0ff0ff1ff1fe0fe0fe1fe1fd3930d00d00d00d00d00d00d00d00d00d00d10d10
930fc4ff0ff0ff0ff0ff2ee1fe5ff7ff5ff5ff5ff6100000000000000000000edaef1ef0ee5ee5
000000001101100100110ff3ff1ff0fe1fe1ff0ff0fe1ff1f10d00e00e00d00d00e01e01d00d00
e00e00930fc5ff0ff0ff0ff07a1cf7ef0df0ef3ee3ff1fe0d00d00d00d00d00d00d00d00d00d00
d10d10930fc4ff0ff0ff0ff0cf8cf88edcff28e39f3be9ffc00c00e02d02e01e01c10c10e01e01
d01d01c10c10d00e00c20b10ff1ff0ffffffffffffffffffffffffa11b22e00e00d00e00e10d00
d00e00e10c00d01d02e00f20930fd4ff0ff0fe0ff0ef6ff8ffffffffffffffffffffffffffffff
ffffffffffffffffffeffeffffffffffffffffeffe922922f00f00e00e00e11d00d00d01d01d00
d00d00d00d00e10c00f02d01e01e01d01d01e12d01d00c00e00d00e00e00f00e00e01e01d00d00
d00d00d00d00d00e00c10b00830fd3ef0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ef0ff0ff0878535
d00d00d00d00d00d00d00d00d00d00e10d00d00c00c00c00c11c10f00e00f00f00e00e00d00e10
c01c01f00e00e01e02e00e00c01d01d00d01f00f00f00e00e00e00e00e00e01e01d01d01a30910
ff1ff0fe0fe0ff2de0ef0ef0fe0fe0fe1fe1fc5a20d00d00e01e01e00e00d00d00e00e00d00d00
a20fc5fe0fe0fe0ff0fe4ff5ef2ef2ee7ff8000000000100100000010ef4ff1fe0ee0fe0ff0ee0
ff2ee1000100000000100000000ddaff0ff0ff0ee0fe7200d00d00e00e00d00d00e02e02d00d00
e01e01840fd3ff0ff0fe0fe148a9dfff2ff4de0ff0ff3ff4d00d00e01e01e00e00d00d00e00e00
d00d00a20fc5fe0fe0ff2ee1df7ff9df3ce348bcff09c09be20d10b00c11c10c10d00d00e00e00
e00e00d02d02d10e10d00e10c10c00fb9fdbfdefcdfcefcdb00c01e10e10c00d00d00d00d00d00
d01d01d01d00f00f00b00b00fe2fe2ff0ff0ff0ff0ffeffeffffffffffffffffffffffffffffff
ffffffffffffffffffeffeffffffffffffffffeffefdd911e00f00f00e00d00e00d00e01d01c00
e11d00d10d10c00e10e01d00f12e01c00d01c00d01d00e11e01d00e00e00e00f00e01e01d00d00
d00d00d00d00d00e10c10d20fd3fe4ee0ef0ff0ff0ff0ff0ff0ff0ff0ff0ff0ef0ff0ff0878535
d00d00d00d00d00d00d00d00d00d00d00d00d00d00d11c00b10c10e00e00f00f00e00e00d00d00
c01c01e00e00e01e01e00d00d01d12d00d00d00e00e00f00e00e00e00e00e01e01d01d01920fc8
fe0fe0fe0fe0ef1ff2ef0ef0fe0fe0fe1fe1fc5a20d00d00e01e01e00e00d00d00e00e00d00d00
a20fc5fe0fe0ff0ff0ed2ff5ee2ff4ff7110000000000000000000ef4ef4fe0fe0ff1ff0ee0ff0
ef1ef1ee8000100100000100000000ff0ff0ff0ff0fd6200e00e00e00e00d00d00e02e02d00d00
e01e01840fd3ff0ff0fe0fe159b49bee1ff2ef0ff1ee2fe3d00d00e01e01e00e00d00d00e00e00
d00d00a20fc5fe0fe0ff1ff2791df7df4ff659b48a1ad9ffd10d10c11b00c10c10d00d00e00e00
e00e00d02d02c00d10e00e00c00d10a20a20812923a12a02e23c01d00d00d10d10d10d00c00d00
e12d01c00e11e00f00d20c10fe2fe2ff0ff0fe0fe0ffeffeffffffffffffffffffffffffffffff
ffffffffffffffffffffffffeffeffffffffefefffffffffb21900d11c00d00e11c00c00d00e11
e00e00f01d00c00c11d10d10c00d00e00e00e00e00e00d00e00e00c00e12c00b00e01e01c10c10
c10c10e01e01e01e00a30920fe1fd0ff0ff0fe0fe0fe0fe0fe0fe0ff0ff0ff0ef0ff0ff0878445
c00d00e01e01e01e01e00e00e00e00e00e00e00e00f01e01e00e01d10d10c00d11d10c00d10d10
d10d10d00d00d01d01d00d00d00c00d00e10d00d10d10c00d00d00d00d00d00d00e00e00fe0fd0
ff1ff0fe1fd1ef0df0ff0ff0fe0fe0ff0ff0fc5a20d00d00e00e00d00d00d00d00d00d00d00d00
a30fc5ff0fe0ff0fe0fe4ff6dd9100001001000000110110ee0ff2ef0ef0ff0fe0fe0ff1ff1fe0
ff1ff1ef0ff0ef3010100000000000000101dd7dd7feb100c00c00d00d00d00d00d00d00d00d00
e03e03830fd5fe0fe0fe2fe20ad09c6a5bfaee4ff7ff0ff1d00d00e00e00d00d00d00d00d00d00
d00d00a30fc5ff0fe0fe0ff04a7bfebe76922af9ff19d2aeb00c00e00d00e00f01f00f00d00d00
d00d00d00d00e12b00d00e01f02f03d00e00c20c10d00e00e00f00d00d00c10b00c00d10e00e00
d00d00d00d00f00e00830fd3ef0ff0fe0ff0ee4ff5ffeffeffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffefffffffffffffffdcb21c00d11d00e00c00d10d00d00
f00f00e00f01c00c10c00d10d00d00d00e00e00e00d00f11d00d00d00c00d11d11e01e01c10c10
c10c10e01e01e01e01920fc5fe0ff1ee0ff0fe0fe0fe0fe0fe0fe0ff0ff0ff0ef0ff0ff0878445
c00d00e01e01e01e01e00e00e00e00e00e00f01d00e00e01e01e00c00d00d00c00c00c00d00d00
c00d10d00d00d01d01d00d00d10d00d00d00d00d00d00d00d00d00d00d00d00d00e00e00fe0fe0
fe0ff1fe1fe1ff0ef0ff0ff0fe0fe0ff0ff0fc5a20d00d00e00e00d00d00d00d00d00d00d00d00
a30fc5ff0fe0ff0fe0ff4ff4000110001001000000ee5fe6ee1ff2ef0ff0ff0ff0ff1fe0ff1ff0
fe0ff1ef0ef0ef3ef3edb000100000101000010010100100c00d10d00d00d00d00d00d00d00d00
e03e03830fd5fe0fe0fe2fe20ad1be595bfafe5ee4ff1ff1d00d00e00e00d00d00d00d00d00d00
d00d00a30fc5ff0fe0ff0ff0396afdcf8ef91ae1ae1ad9ffd10c00e00e00f01e00f00f00d00d00
d00d00d00d00c00d12d00d00f02e02e00e00c10c10e00e00e00e00d00d00c10c10d10d00e00e00
d00e01d00d00f00e00fc3fd4ef0ff0fe0ff0ee4ff6ffeffeffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffeffea12911e00e00d00f10d00d00
e00e00e01e00d01d01d00d00d00d00d00d00d00d00d00d00d00d10d00d00d00d00d00d00b00d10
e10c00f02f02c00d10fd1ff3ef0ff0ee0ff0fe0fe0ff0ff0fe0fe0ff0ff0ff0ff0ff0ff0868545
d00d10d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00e00e00
e00e00d00d00e00e00e00e00f00e00d00d00c10c00d10c00e01d00e01e02b10c20940fd1ff0ff0
ff0fe0ef0ff0ef0ff0fe0fe0fe0ff1ff1ff1fc4a30d00d00d00d00d00d00c10c10d10d00c10c10
930fd4ee0ff0ff1ee0000100002002000000120ee2ff0ff0ff0fe0ff2fe0ff0ff0ff0ff0ff1ff1
ff0ff0ff1ee0ff0ff0ff0ff0100100000000000010000100c10c10d00d00d00d00e00e00d00d00
d00d10930fd2fe2fe2df1df10af0af0bd0accf3df4fd1ff4d00d00d00d00d00d00c10c10d10d00
c10c10930fd4ee0ff0ff0ff0592efaee98832acaff29d29dd00d00d00e01f01d00e10c00d02d02
b10b10b20b20e01e01f01e01d01c01c00c10d00d00c10c10d00d00e00e00d00e00c00c10c10c10
d00d00d10d00b20a10ff0ff0ee0ff0ff1ff0eecffdffdffdffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffeffefdda22e00f01f10d00d00d00
e00e00d00e00e12d01d00d00d00d00d00d00d00d00d00d00d00d00e10d00d00d00d00e11c10c10
c00e10e01e01c00fb9fe2fc1ff0ef0ff0ff0fe0fe0ff0ff0fe0fe0ff0ff0ff0ff0fe0ff0879535
d00c00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00d00e00e00
e00e00d00d00e00e00e00e00e00e00d10d00b00c10d10c00d00e01d01e02b10b10fd2fc1ff0fe0
fe0ff0ff0ee0ff0ef0fe0ff0ff1fe1ee0fe0fc3930d00d00d00d00d00d00c10c10c00d10d10c10
a30fd4ff0ff0ef1ff1100000002002000dd9dd2ff4ff0ff0ff0ee0fe1ff1ff0ff0ff0ff0ff1ff1
ff0ff0ee0ff1ff1ef0ff0ee0ff7ee6000010000000100000d10c10d00d00d00d00e00e00d00d00
d00d00930fc2fe2fe1df1df109e0af0bd0bd6a0ae1fe2fe2d00d00d00d00d00d00c10c10c00d10
d10c10a30fd4ff0ff0fe0ff0cf9cf8dd7ffb2ab2ab19caffd00d00d01e01d00f12d00d00d02d01
b10a10c30fb5d00d00f01e01d01d01c10c00d00d00c10c10d00d00e00e00e00d00c10c00c10b00
d00d10d00e10b20fb6fe0fe0ff0ff0ff0ff1ffdffdffdffdffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffeffddb12a11c00e11e10d00
e10d00e11d00e11d00d00d00d00d00d00d00d00d00d00d00d00c00d11c00c00d10e01d00f01e01
d10d00a40a30fe0fe1ee0ff0ff0ee0ff1fe0ef0ef0ff0ff0ff0ff0ff0ff0ff0fe0fd0fe0979535
e11e01d00d00d00d00d00d00d00d00d01d01d01d01d00d00d00d00e01e01d00d00e01e01d02d02
e01e01d01d01d00d00d01d01e00e00d00e01e02d00d00f01d00d00c30b10950fc3ff0ff0ef1ee0
ef1ef0df2cf2ff2ff2fe0fe0ff0ff0ff1ff2fd4930d00d00e00e00d00d00d00d00e00e00e00d00
b20fb5fe1fe1ef0ff0000000110010ef0ef0ff0ee0fe0ff0fe2fe2fe0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0fe0fe1ff1ff1ee0ff0df0ff1000000203103d00d00d00d00e02e02e00e00e00e00
d00d00a30fc3ff0ef0ff0ff0ef57900af0af29eaffef0ff0d00d00e00e00d00d00d00d00e00e00
e00d00b20fb5fe1fe1ff2ef1fe2ff5fe4fe4af9dfc3ae29de00f00c00d10d10c00d01d02f01f01
e10d00a20fb7fc4b30d00e10e00f02c10c10f01f01e01e01d00d00d00d00e00e00e01e01e00e01
e11c00c10b10fe0fe0ff1fe1ff1ff1ee6ff8ffffffffffffffeffeffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffeefeffcca11d10d00d00e00
d00d00d00d00d00e11d00d00d00d00d00d00d00d00e00e01e01d00d00c00c00c00e01f02e00e01
c00c00fb3fc5ff2fd0ff0ff0fe0ff0fe0fe0ef0ef0ff0ff0ff0ff0ff0ff0fe0ff0fe0ff0979425
e01d00d00d00d00d00d00d00d00d01d01d01d01d01d00d00d00d00e01e01d00d00e01e01d02d02
e01e01c01c01d00d00d01d01d00f11d00d00e02e01e00e00e10e00b10fb7fd3fd3ee0ff0ff1ff2
ef1de08a0ef3ee1ff2ff0fd0ef0ff0fe1ff1fc3930d00d00d00d00d00d00d00d00e00e00d00e00
b30fb5fe1fe2ef0ef0100000ef7ee6ff0df0ff0ee0ff1fe0fd1fe2ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0fe1ff1ee0fe0ff1ff0ef0de0000110103103d00d10d00d00d01d01e00e00e00e00
d00e00b30fc2ef0ff0ff1ff1de4df40af09e29f29fef0ef0d00d00d00d00d00d00d00d00e00e00
d00e00b30fb5fe1fe2df0ff2fe2fe2fd4ff6af96a518caffe00f00d10c00e10d10d01d01f01f01
d00d00a20fb7fb2a20d00e00f01d00c10c10f01f01e01e01d00d00d00d00d00d00d00e00e01d00
d00e00c10fb7fe0fe0ff1ff1fe0ff1ff7ff8ffffffefffffffeffeffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffeffffffffffeffffed722a11a11
e21c00d00d00e10c00d10d10d00d00d00d00d00d00d00d00d00e00e00f00f00e00c10c10c20c10
a40fd4ff0ef0cf0df0ff0ef0fe1fe1fe0fe1ef0ef0ff0ff0ff0ff0ff0ff0ff0ff0ff1ff1779446
c22b11e01e01e00d00d00d00e00e00e00e00e00e00d00d00d00d00e00e00d10d10e00e00c10c10
e00e00c10c10d00d00c11c11f11d00e00e00c00d00b20b20730fe4ff0ff0ef0ff0ff2ef1ef1ee1
9ff39a6a4ae9ff0fe0ff0fe0ff1ff1fe0fe0fc3940d10d10d00d00d10d10d10d10d00e10d00e10
b30fb5fd1fd0ff1fe0ef0ff0ef0ee0ff0fe0ff0ff0ff0ff0ff0ff0ff0ff1ff0ff0fe2fe2ff0ff0
ff1ff1fe2ff3ee0ff0ff0ff0fe0ff1edb100000000100100d10c00d10d10c11c11d10d10c10c10
d10d10a20fb4ee0ff1fe0fe0ff0ff03994aa09f0af488dffd10d10d00d00d10d10d10d10d00e10
d00e10b30fb5fd1fd0df0df0fd3ff6cf86823abaff3ae29ed00e00b00c10f00d00d10c10e00e00
e00e00a30fc4ff0ff0a30920d00d00d11d10d00d00e00e00e00e00c10c10d10d10f00d00f10e00
d10e10fc1fd1ff1ef0ee2ff3ff3fe3ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffeffffffffffffffffefeefeefdcb21
b00d10e10c00e20e10d10d10d00d00d00d00d00d00e01e00e01e01e00e00f00e00c10c10c20fa7
fc4fc4ef0ff0df0df0ef0ff0ff1fe1fe1fe1ef0ef0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0779446
b00b11d00d00d00d00e00e00d00d00d00d00d00d00d00d00d00d00d00d00d00d00e00e00c10c10
d00d00c00c00d00d00c00c00e00d00f10d00e10d10a20fb7fe4fd3ee0ff0ff0ef0ff2ee1ef1ff2
39a4ab594bfaff0fe0fe0fe0ff1fe1ff0ff1fc3830d00d00d00d00d00d00d00d00d00e10c00d00
a20fc5ff2fe1ff1ff0ff0ee0ff0ff1fe0ff0ee0ff0fe0ff0ff0ff0ff0fe0ff0ff0fe2fe2ff0ff0
ff1ff1fe3ff3fe0ff0ff0ff0ff1ff1000000000000200fe9c00d10c00c00c00c00c00c00c00c00
d00c00a30fc5ff1ff1fe0ff0ff0ff09ff3990af09f588beed00d00d00d00d00d00d00d00d00e10
c00d00a20fc5ff2fe1df0df0fe4fe3df9efa2aa2ab29daffe10d00d10d10e00e00c00c10e00e00
f00e00920fc4ff0fe0fb6fc6f20e10b00d10d00d00e00e00e00e00c10c10d00c00e00f01e00e00
e10f96fe2fd2ef0ef0ff3fe2fe3ff5ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffeffefffffffffffffffffffffffffffffffffeffffffffffeffeffffeffe
fdafd9920a30930930e00e00e00e00e01e01e00e00c00d00c10a00b30a20a30a30ff0ff0ed0ff0
ff0ff0ff0fe0fe0ff1ff1fd0fe0ff1ef0ff0ff0ff0ff0ff0fe0fe0ff0ff0ef0ff0ef0ef1489267
710a33a30930920920a30a30a30a30a30a30a30a30a30a30a30a30930930930930a20a20840840
a30a30a30a30b20b20a30a30840940fe0ff1fd0fe0fe1ff2fe1fe1ff0ff0fe0ff1fd6fe7ffffff
0bc0bd5a5af9fe1fd0ff0ff0ff0fe0fe1ff2fc1950a30a30a30a30a30a30a30a30a20b30b30a30
960fc1ef0ef0fe1fe0ff1fe1ff0fe0fe0fe1fe2ff3ff0fe0fe0ff0ff0ff0fe2fe2ff0ff0ff0ff0
ff0ff0ff0fe0ff0ff0ff1ff1ec8100000000010000df1de0b20b20b20b20a30a30a30a30a30a30
a30a20a50fb2fe0fe0df0ef00be0ad1af09f0bc0bc4a49faa30a30a30a30a30a30a30a30a20b30
b30a30960fc1ef0ef0fe0fe1fe2ff5bf66b12af9ff596bfc810820734623640740830940b20a20
a30920860fe1fe0ff1fe0fe1fed832821921c10c10d00d00e00e00e00e00c00d10a30920750fe2
ee0ff0ef0ef0ff0ff1ef1ef1ffeffeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffeffefffffffffffffffffffffffffffffffefffffffeffffeffeffefeffe
ffbfebfc7fc6fc4fc5e00e00e00e00e01e01e00e00d10d00c20c10fb6fb6fc5fc5fe0ff1fe0ff1
fe0ff0fe0ff0ff0fe0fe0ff1fe0fe0ff0ff0ff0ff0ff0ff0fe0fe0ff0ff0ff0ff0df0ef148948a
c65fedfebfdafc7fb7fc5fc5fc4fc4fc4fc4fc4fc4fc4fc4fc4fc4fc5fc5fc3fc3fb6fb6fd2fd2
fc4fc4fc5fc5fb4fb4fc5fc5fc5fd5fe0fe0ff0fe0fe1fd0fe1fe1fe0fe0fe0ff1ff9ff9ffffff
0bd0ac5a4afafe1ff2ef0ef0ff0ff0fe1fe1fe3fd2fc4fc4fc5fc5fc5fc5fc4fc4fb5fb4fc6fb5
fd1fe2ef0df0fe0ff1fe0fe0ff0ff0fe0ff1fe2fd1ff0ff0ff0ff0ef0ef0fe2fe2ff0ff0ff0ff0
ff0ff0fe0ff0ff0ff0ff1fe1200100000000000de9ef1ef1fb5fb4fb4fb4fc4fc4fc4fc4fc4fc4
fc5fb4fc3fd4ff0fe0ff0ef00ad0ad09f1af0bc0bd4a49f9fc4fc4fc5fc5fc5fc5fc4fc4fb5fb4
fc6fb5fd1fe2ef0df0fe0fe0fe3fe3bf6df82af19e596cfefcafec967fef963fd9fd5fc3fb6fb6
fc5fc5fe1fe1ff0ee0ff1fe1fdcfedfddfbbc10c10d00d00e00e00e00e00d10c10fc6fb5fe2fe3
ff0ff0ff0ff0ee0ff1de0ff3ffeffeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffeffdeebddaff3ee2ee1ef1ff0ef0ff0ff0ff0ff0ff0ff0ff0ff0ff1ff1fe0fe0cf1cf1
fe0fd0ff0fe0ff0ff0ef3ef3ff0ff0ff0ff0ff0ff0ef0ef0ff0ff0fe1fe1ff0fe0ef0ef029f29f
0bf0ae1ad19cef0ef0fd0fe0ff1ff2df0df0ff0ff0fe0fe0fe0fe0fe0fe0fe0fe0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0ff0ff0ff0ff0ef0ef0cf5ce4afc9fb2ad1ad0af09f0be0be
1ad1ad495afbef2ef2fe0fe0fe0fe0ff0ff0ff0ff0ef0ef0fd2fd2ef0df0ff0fe0fe0fe0ef0ef0
ef0ef0fe0fe0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ee0ff1fe0fe0fe1ff1ef3ef3000000100100ef0ef0fe0fe0ff0fe0ff0fe0bf6cf6ff0fe0ff0ff0
ff0fe0fe0ff0fe0fe0ef0ef03a93995946945a5bfa9eccffcfbbea9fcbfefe0fe0fe2fe1ff0ff0
ff0ff0ef1ef1fd0fe0fe0ff0fe2ff5ee4ee43ad9ff1ac2ac19c2addff58bdfabf7ef0ef0ff0ff0
ff0ff0ff0ff0ff0ef0ee3ff4ffcffdffffffffaff8ee4ee4ff1ff1ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ef1ef1ee6ff6ffdffeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffeffeffdffdff4ff3ff2ff2ff1ef0ef0ef0ff0ff0ff0ff0ff0ff0ff1ff1ff0fe0cf1bf0
fd0fd0ff0ff0ff0ff0ef3ef3ff0ff0ff0ff0ff0ff0ef0ef0ff0ff0fe1fe1fe0fe0ff0ef029f28e
0ae0be1ad1addf0ef0fe0fe0fe1ee1ef0df0fe0fe0fe0fe0ff0fe0fe0fe0fe0fe0ff0ff0ff0ff0
ff0ff0ff0ff0fe0fe0ff0ff0fe0fe0ff0ff0ff0ff0ef0ef0cf57a04954a619c19c0af09f0bf0be
1ad1ad495afbef2ef2fe0fe0fe0fe0ff0ff0ff0ff0df0ef0fd2fd2ef0df0fe0ff0fe0fe0ef0ef0
ef0ef0fe0fe0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0ef0ff0
ff1fe0ff0ff0fe1fe1ef4110000000100edaef0ff0fe0ff0ff0ff0ff0fe06a0bf6ff0fe0ff1ee0
fd0ff0fe0fe0ff0fe0ef0ff03a99ffbfabfaae96a54973974845943a63a6ff1fe0fe2fe1ff1ee0
ee0ff0ef1df1ff1fd0ff0fe0fd2fd2ff5ff729c3ad2ac9ff1ac9ff59ccff592cf8ef0ef0ff0ff0
ff0ff0ff0ff0ff0ef0ee4ff4ffcffdffffffffaff9ff5ff5ff1ef1ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ef1ff2ff7ff8ffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffeffeffeffeffffffffeffeffcfebee9ee9ee7ee7ee6ee6ee6ee6ee6ee6afe5981ac1ac
fe2ff2ff0ee0ff0ff0ff0ff0fe0fe0fe1fe1ff0ff0ef0ef0ff0ff0ff1ff1ff0ff0ff0ee05a6595
3a23a24a64955a35a34944a45a55a5df0df1fe1ff1ef3cd15c63a44a44a44a44a44a44a4693693
6908b2cd2ef4ff1ff1ff0fe0ff0ff0ff0ff0ff0ff0ff1ff1df39a06906906b35a24b44a44a3492
5936a48a0ce4ef0ff0ff0ff0ff0ff0ff0ff0ef0ef0ff0fe0ff0ee009d2bf589002fe1fe1fe0fe0
ff0ff0ef0ef0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0ff0ff0ff1ff1fe1
ff0ee0fe1fe1ee1ff2000000000000110ee4fe0fe0ff0ff09fa5a51ae09d0cd0bc19e19e09d2ae
4b83a74a34a3784ffcfe0ff0df3ff6ff0ff0afecff0ad0be2acaff0ae0ae1ad8ff0af0af39abff
ff5ff7fe2fe2ee3ff6ce3df42ad9ff19b1ab1ab9ff29c4ae1ac1acbff49cbff49bffffffffffff
ffffffffffffffffffffeffeffffffffffffffffffffdffdffafe9fe8fe8ed7ed8fe8ed8ed8ed8
ee9ff9ffdffdffffffffffffffffffffffffffeffeffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffeffeffeffeffffffffeffeffcffcffaffaff9ff9ff8ff8ff8ff8ff8ff8cff4981ac1ac
ff2ff2ff0ff0ff0ff0ff0ff0fe0fe0fe1fe1ff0ff0ef0ef0ff0ff0ff1ff1fe0ff0ff0ff0aeabfb
9f89f8afbafbaf8af8afaafaafaafaef2df1fd0fd0ef2ef39fa8fa9fa9faafaafaafaafabf9bf9
cf6cf6ef4ef3fe0fe0ff0ff0ff0ff0ff0ff0ff0ff0ff1ff1ef3de3cf6cf6af8af79f99f9af9af9
bf9bf9ce4df5ef0ef0ff0ff0ff0ff0ff0ff0ef0ef0fe0fe0ee0ff02ae19d69abeffe1fe1fe0fe0
ff0ff0ef0ef0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe1ff1
ff0ff0ff2fe1ff2110100000000000ee4ff5ff1fd0ff0ee0afb4940ad1ad0bc0bc19e2af1ad1ae
8ec9fdbfa9f9ceadeaff0ff0df3df3ff0ff04984980be0be29c3ac0bf0ae1ad2ad1bf09e29a4ab
ee5ff5fe2ff5ee3ee3df5ff609b2ac19b9ff1ab2ab29cbff19c9ff4acbff49bbffffffffffffff
ffffffffffffffffffffeffeffffffffffffffffffffdffdffbffaff9ff9ffaffaffbffbffbffb
ffaffaffdffdffffffffffffffffffffffffffeffeffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffaff2aa0af0af
ef0ee0ee0ff0fe1fe1ff0ff0fe2fe2ff2ff2fe0fe0ff0ff0ff0ff0ff0ff0ff1ff1fe0ff0ef2ff3
ef0ef0ee0ef0fe0ff0ff1ff0ff0ff0fe0fe0fe0fe0ff0ff0df0df0ff0ff0ff0ff0ff0ff0ff0ff0
ee0ff0ff0ff0ff0ff0fe0fe0ff0ff0ff0ff0ff0ff0ff1ff1fe1ff1ff1ff1ef0ff1ef0ef0fe0fe0
ff1ff1ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe3fe2ef0ef00ad0be4b77faff0ff0fe0fe0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff1ff0ee0ff0ff0
ee0ff0ee3ee4001102000100110ee5df0df0fd0fe0ff2ee0cfd6971ae09c3aa4abef0df0ff4ff5
ef0ef0de3ff6fd0fd0ff4ff5ff0fe0fe5ff70bd0bd4a9affee4dd36a1df94a8397682ffb4965a7
ed0ff4ef3de2df4ff6fe4ed31bc8ff19c2ad687effff9ce6bff3a9bff48bcff38bffeffeffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffeffffffffffffffffff
ffffffffffffffffffffffffffffffffeffeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffaff29909f0af
ff0ff0ff0ff0fe1fe1ff0ff0fe2fe2ff2ff2fe0fe0ff0ff0ff0ff0ff0ff0ff1ff1ff0ff0ef2ef2
ef0ef0ff0ff1fe0ff0fe0fe0ff0ff0fe0fe0fe0fe0ff0ff0ef0ef0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0fe0ff0ff0ff0ff0ff0ff0ff1ff1ff2ff1ee1ff1ef0ff0df0ef0ff0ff0
fe1fe1ff0ff0ef0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe2fe3ef0ef00ae0be3a69fcff0ff0fe0fe0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0ff0ff0ff0fe0
ee0ff1ff4110001001000000fe6ee5df0ef0fe0fe0ef1ee0bfc5860ad2be2998ffdf0ef0ee3ff3
ef0df0ff4ee3ff0fe0ff4fe4fe0fe0fd4fe50ac0bd4a99feee4ff7bf7bf6afebffbe8cf9bfdcfe
ff2ff1de3ff6cf3df3fe3ff609a1bc2ad9ffbdceffce6ff93a9bff48bcff38acffffeffeffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffeffffffffffffffffff
ffffffffffffffffffffffffffffffffeffeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff49919d1ad
fe0fe0fe0fe0fe1fe1ff1ff1ff0ff0ef0ef0ff1ff1ff0ff0ff0ff0ff0ff0ff0ff0ff1ff1fe0fe0
fe0fe0ff0ff0fe0ff1fe1ff1ff0ff0ff2ff2ff0ef0ef0ef0fe0ff0fe1fe1fe0fe0ff0ff0ff0ff0
ef0ef0ef0ef0ef0ef0ff0ff0ff1ff1ff0ff0ff0ff0ff0ff0fe0fe0fe0ff0fe0ff0fe0ff0ff0ff0
ff0fe0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0fe0fe0fe0ff1ff0fe01bc0ac392af9ef0ef0ff0ff0
fe0fe0fe0fe0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ee0ff0ff0fe0
ff4ed2000000000000110ee4ee0ff0ff0ee0ff1fe0ef0ef1de78920bc0ab5c49f8ff5ff6fe0ff0
aecdff0be0adde7ff9ff0ff0ef4ff5ff7ed53adaff586efefe3fd2de2ff5fd3fe3fe5ff6fe2fe2
fe4ff6fd5fc4afcbfedf6ce52ad9ff49c39cff8df6effdfd9ff299bff4a9dff58cffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffeffeffeffeffffffffffffffffff
ffffffffeffeffeffeffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffefffffffffffffffffffffffffffffffffffffffffffffcff5aa19d1ad
fe0ff0ff0ff0fe1fe1ff1ff1ff0ff0ef0ef0ff1ff1ff0ff0ff0ff0ff0ff0ff1ee0ff1ff1fe0fe0
ff0fe0ff0ff0ff0ff0fe0ff1fe0ff0fe1ff1ff0ff0ff0ff0ff0ff0fe1fe1fe0fe0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ef0ef0ef0ff1ff1ff0ff0ff0ff0ff0ff0ff0fe0ff1fe0fe0fe0ff0fe0fe0ff0
fe0fe0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0fe0fe0ff1fe0ff0ff01ac0ac4a3af9ef0ef0ff0ff0
fe0fe0fe0fe0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ee0ff1fe0ff0fe0ff0
ee2210100000000000dd3ff4ff0fe0ff0ff0fe0fe0ef1ef0de7de70bc0bc392af9ff4dd3ff0ff0
5974870ae0ae892de7ff0ff0ef4ee3fe599018c3ad687cedfe3ff5ef2ef2fe4ff5fe4fe4fe3ff5
fe4ee4fd5ff73964a7790ff829c2ad28bbffde6ff8697eff3aaaff398bff47cdffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffeffeffeffeffffffffffffffffff
ffffffffeffeffeffeffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffeffeffecff48d1ad1ad
ff1ff1ff0ff0fe0fe0ff1ff1fe0fe0ff0ff0ef0ef0ff0ff0ff0ff0ff0ff0ff0ff0ff1ff1ff0ff0
fe1fe1fe0fe0fe1fe1ff0ff0fe0fe0fe1fe1fe2fe2ff0ff0fe0fe0ff0ff0ff0ff0ff0ff0fe1fe1
fe1fe1fe1fe1fe0fe0fe0fe0ff1ff1ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe1fe1fe1fe1ff1ff1
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0fe0fe0ff0ff0ff0ff00ae0ae596bfbff0ff0ff0ff0
fe2fe2ff1ff1ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ee1ff1ff0ff0ff0ed0
feb100000000010ef4ef0ff0fe0ff0fe0fe0ff0ff0ef2ef2ff0ff01ae0ae596dfefe1ff2de8ffa
0ae0af2aaaff09f1af19c9ffef0df0bf9cfa0bf0af2a7affee2ff39eecffcf7bf6ef2ff4df8ce8
bfbefdfe2ff219daff1ac1ac19daff29d28dcff49bbff39acff49edffdffefffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffeffeffdffdffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffeffeffecff48d1ad1ad
ff1ff1ff0ff0fe0fe0ff1ff1fe0fe0ff0ff0ef0ef0ff0ff0ff0ff0ff0ff0ff0ff0ff1ff1ff0ff0
fe1fe1fe0fe0fe1fe1ff0ff0fe0fe0fe1fe1fe2fe2ff0ff0fe0fe0ff0ff0ff0ff0ff0ff0fe1fe1
fe1fe1fe1fe1fe0fe0fe0fe0ff1ff1ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe1fe1fe1fe1ff1ff1
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0fe0fe0ff0ff0ff0ff00ae0ae596bfbff0ff0ff0ff0
fe2fe2ff1ff1ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff1ff1ff0ff0ff0ff0
100100000000ef4df4ee0ff0ff0fe0fe0fe0ff0ff0ef2ef2ff0ff00ae0ae586bfcff2fe1df9782
0af0ae3aa29a09f09f19c2adff0ff0af86b40af0af2a69fdff3ff45aa3986a2df9df2ef2792ffa
594cfbfe1ff42ae29d1ac8ff2ad19d28cbff49bbff49abff48ecff588dfffffeffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffeffeffdffdffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffeffeffeffeffffffffffffffffffffffffffffffffffffbff39c0ac0ac
ef0ef0ef0ef0ff0ff0ff0ff0fe3fe3fe0fe0ef0ef0ff0ff0ff0ff0fe1fe1ff0ff0ef0ef0ff0ff0
ff0ff0ef1ef1ff0ff0ff0ff0ff0ff0ff0ff0ef0ef0ff0ff0fe0fe0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff1ff1
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ef1ff1ff0ff00ae0ae5a2bf8ff0ff0ef0ef0
fe1fe1df0df0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ef1ee0ff1ef1fea100
000210100000ff1de0ff0ff1fe0ff0fe1fe1ff0ff0ff0ff0ff0ff00bd0bd29a9ffbf7dfa0bc0bc
39ebffeff79b29baff0bc0bd18caff19f19f2ad9ff2ab9ffbfb49518daff0ab1bdde9ffa19a2bb
19c9ff8fe2a82ad9ff19d2aebff49abff28dbff39abff49dffffffffeffdffdffdffeffeffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffeffeffeffeffffffffffffffffffffffffffffffffffffbff39c0ac0ac
ef0ef0ef0ef0ff0ff0ff0ff0fe3fe3fe0fe0ef0ef0ff0ff0ff0ff0fe1fe1ff0ff0ef0ef0ff0ff0
ff0ff0ef1ef1ff0ff0ff0ff0ff0ff0ff0ff0ef0ef0ff0ff0fe0fe0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff1ff1
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ef1ff1ff0ff00ae0ae5a2bf8ff0ff0ef0ef0
fe1fe1df0df0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ef1ff2ee0ef1100100
100000000edaef1ef1ff1ee0ff0fe0fe1fe1ff0ff0ff0ff0ff0ff00bd0ac4ab39abf86a30bc0bc
39e28eeffeffaff29a0ac0bd3ae2ae19f18f2ad1ad1aa2ab5a6dfd2ae2ae1bd7ffde88932ab9ff
2bd1ac2a8aff19c2ad1ae9ff389cff38dbff39abff49dbffffffffffeffeffdffdffeffeffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbff49a0ad0ad
ff0ef0ef0ef0ff0ff0ef0ef0ff0ff0ff0ff0ff0ff0fe0fe0ff0ff0fe2fe2ff0ff0ff0ff0ff0ff0
ef0ef0ff0ff0ff0ff0ff0ff0ff0ff0fe2fe2ff0ff0fe1fe1ff0ff0ff1ff1ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0fe1fe1ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff1ff1ff0ff0ff0ff0ff0ff0ff0ff0ef0ef0fe0ff009f0af594bf9ff0ff0df0df0
ff0ff0ef0ef0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ef0ef0ee8110000000
000100ff0ff0fe2fe2ee0ff0fe1ff1ff0ff0fe0fe0ff0ff0ff0ff009f09f1ad1ad9ff1870ae7ff
489dfffffeffffffff39aaff08d2ae0ac8ff19d18c2be9ff0ae0be39eaff29d39d1ac9ff2ad18b
08c9ff2aa2aa3bd9ffdff699dff589cff59adff588cff499ffffffffeffeeffeffffffffffffff
ffeffeffeffeffeffeffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbff49a0ad0ad
ff0ef0ef0ef0ff0ff0ef0ef0ff0ff0ff0ff0ff0ff0fe0fe0ff0ff0fe2fe2ff0ff0ff0ff0ff0ff0
ef0ef0ff0ff0ff0ff0ff0ff0ff0ff0fe2fe2ff0ff0fe1fe1ff0ff0ff1ff1ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0fe1fe1ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff1ff1ff0ff0ff0ff0ff0ff0ff0ff0ef0ef0fe0ff009f0af594bf9ff0ff0df0df0
ff0ff0ef0ef0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ef0ef0000000101000
000ddbff0ff0fe2fe2ff0ff0fe0fe1ff0ff0fe0fe0ff0ff0ff0ff009f1af09c1ad2983a90be09d
dffdffefefffffffefbffbff2af08c1bc1ac29daff1ad19c0ae7ff39e39e29caff2ac1ac29daff
19d2ae29a9ff29b2acdffdffdffdff489cffdffdffcffcffffffefffeffeeffeffffffffffffff
ffeffeffeffeffeffeffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbff39a0af0af
ff1fe1ff0ff0fe0fe0ff0ff0ff0ff0fe1fe1fe0fe0fe1fe1ef0ef0fe2fe2ff0ff0ff0ff0fe2fe2
ff1ff1ff0ff0fe2fe2ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ef0ef0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff1ff1ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0fe0fe0fe0fe0fe1fe1
ff0ff0ff0ff0fe2fe2ff0ff0ff0ff0fe0fe0fe0fe0ff0ff0fe0fe00af0af5a3af9ff0ff0ff0ff0
fd2fd2ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fea100000000000010
ef1df0ff0ff0ff0fe0fe0ff1fe0ff1ef2ef2fe1fe1ff0ff0fe1fe18f93b40ad0ad2ae9ff38b4ad
effeffffdffdfeffffefefffffffff39a39a49a499589dff587dffffffff48d49d1ac8ff677fff
effeff49c5ad678effffffffeffeffeffeffffcfeceffdffffffffffffffefffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffeffeffffffffffffffffffffffffffeffeffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbff39a0af0af
ff1fe1ff0ff0fe0fe0ff0ff0ff0ff0fe1fe1fe0fe0fe1fe1ef0ef0fe2fe2ff0ff0ff0ff0fe2fe2
ff1ff1ff0ff0fe2fe2ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ef0ef0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff1ff1ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0fe0fe0fe0fe0fe1fe1
ff0ff0ff0ff0fe2fe2ff0ff0ff0ff0fe0fe0fe0fe0ff0ff0fe0fe00af0af5a3af9ff0ff0ff0ff0
fd2fd2ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0100100000100000de8
ef1df1ff0ff0fe0ff0ff0fe0ff1ff0ef2ef2fe1fe1ff0ff0fe1fe19fa2a30be0ad19d2ae39cbff
effdfeffdffdffffefffffffffffefbffbffcffbffdffcffdffdffffffffcffbff1ac1acffffff
effeffcffbffeffeffffffffeffeffeffeffffcffceffeffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffeffeffffffffffffffffffffffffffeffeffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffaff3ac0ac1ad
ef2df1fe0ff0ef3ef3fe0fe0ff0ff0ef0ef0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0fe0ff0fe0fe0fe1ff1fe1ff1fe0ff1fe0ff0
ff0fe0ff0fe0ff0fe0ff0fe0ff0fe0fe0fe0fe0fe0ff1ff1ef1ef1ef0ef0ef0ef0fe0fe0ef0ef0
ff0ff0ff0ff0fe0fe0fe0ff0ef0ef0ef0ff1fe0fe0fe0ff1ef0ff009f0af4b59fbfe0fe0fe2ff2
ff0fe0ff0ef0ff0ee0ff0ff0ef0ef0ff6ed4fd8fd8eda000000000000000101001000000ff0ff0
df0df1ff0ff0ff0ff0fe0fe0df0ef0ef0ff1fe0ff1fe1fe1ff1ff1af93920be0be1ad1adeffeff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff888788fffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbff39c0ac1ad
df1ef1ff0ff0ee3ee3fe0fe0ff0ff0ef0ef0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0
ff0ff0fe0fe0ff0ff0ff0ff0ff0ff0fe0fe0fe0ff0ff0ff0fe0ff0ff1ff1fe0fe1ff1ff1fe0fe0
fe0fe0ff0fe0ff0fe0ff0fe0ff0fe0fe0fe1fe0fe0ff1ee1ef1ef1ef0ef0ef0ef0fe0fe0ef0ef0
ff0ff0ff0ff0fe0fe0ff1ff0ff1ef0ff1ee0fe0ff1fe0ff1de0ef01af0af2949fbfe0ff0fe2fe1
fe0ff0ff0ff0ee0ff0ff0ef0ee0ff1100110100100000000001000011000001001000000ee0ee0
ef2ef1ff0ff0ff0fe0fe0fe0ef0ef0ff0ff1fe0ff1fe1fd0fe0fe0af94a30ad0ad0ac2bdeffeff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff39a0af09f
3ac2ab0ad0ad0bf0bf1ac1ac1af1af1af1af0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae
0ae0ae0af0af0af0af0af0af0af0af1bf0af0af0af0ae0ae0bf0bf0ad0ad0ad0ad0ad0ad0be0be
0bf0ae0ae0ae0be0ae0ae0bf0bd0bd0ae0ae0af0af1ad0ac0af0af0ae0ae0ae0ae0ae0ae0ac0ac
0ad0ad0ae0ae0bf0bf0ad0ae0ad0ac0bd0be0bf0af0bf0ae1bf1bf09a0cc5a3bf8ff0fe0ff0ff0
fd8fd8fe7ed7fd9210100100102001000000000000001002100100200200010010ff1ff1fd0fd0
cf9be8afbaeaafbafbdf3df4fe1ff2ff0ff0ff0ff0ff0ff1ff1ff1afa5a41af1bf3adaffffeffe
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff39a0bf0af
2ab29b0ad0ad0bf0bf1ac1ac0ae0ae19f19f0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae
0ae0ae0ae0ae0af0af0af0af0af0af09e0ae0af0bf0bf0af0bf0bf0bd0ad0bd0be0ad0ad0ad0ad
0ae0ae0be0be0bf0bf0bf0be0cd0bd0ae0ae0af0af0ac0ac1af1af0ae0ae0ae0ae1ae1ae0bc0bc
0ad0ad0be0be0bf0bf0ae0ae1ad0ac0be09c0bf0bf0af0ae0ae0ae0bc0bb492af8ff0fe0ff0ff0
200200100100100100100100001102000000000000002001100fe9fd6fd5de6df6fe0ee0fe0ff0
5926935955a64a54a58a0df4ff1fe1ef0ef0ff0ff0fe0fe0ee0ff2af95a41af08d39caffffeffe
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff39809e0ae
29f29f0af0af0bf0bf0bc0bc0ae0ae0af0af0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae
0ae0ae0ae0ae0be0be0bd0bd0bd0bd0be0be0ae0ae0ae0ae0ae0ae0ae0ae0ad0bf0ae0bf0ae0ae
0ae0af0ae09d09d1ae1ae09d1ae09d1af19f0be0ad5a46a45a15a1595595595595496496696696
4974974954955945943984a948b49c58b59b39a2893aa3aa39b29b48c48d78a002000000000000
000000000000000000000010000000110100ff0fe0ff0ff0ff0ee0ef0ff0fe1fe0fe0ff0ed0fe1
0ad0be0ae0ae0be0ad0ae0bf19f2af0bf0af0ae0bf09c0ad3b87fd7fd6fc1ac2bd37acfffeffef
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbff5aa0bf0bf
29f19e0af0af0bf0bf0bc0bc0ae0ae0af0af0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae0ae
0ae0ae0ae0ae0be0be0bd0bd0bd0bd0bd0bd0ad0ad0ae1bf0ae0ae0ae0bf0ae0ae0ae0ae09d0ae
0bf0ae0ae1bf1af0ae09e1ae1ae09d2af08e0be0be9e8bf9bf7bf7bfbbfbbfabfaafcafcbfbbfb
afdafdafbafbbfabfa010021014014014003023012012012024013015005002002000112000000
101000000000010000000ce9ee8ee8ed5ff6ff0ff2ee0ff0ff0ff1ff0ef0ff2ed0ff0ff0fe1ff1
0be0ad0ad0ae0be0ac1cf0af09f09f0af0af0ae0bf1ad1ad1a62b71b71b709b1ac59bcfffeffef
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdffdff
ffffefffffffffeffeffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffdffcff49a3990ae0af1ae09d3ae2ad39b4ac
48a4897aadffffffffffeffeeffeffcff59b1ae0adef1ef1ff0ff0ff0ff0fe0fe0ef0ef0ff0ff0
ff0ff0fe0fe0ff0ff0ff0ee0ff2fe0ed4100100100300200000100000100000001000000010010
100210ee0ff0ff1ee0ff2ee1ee0ff0ff0ff0ef0ff1ff0ef0ff1fe1fe1ff1df0ff1ef0df0ce9693
0bf0bf488cffdff7a939729649d49d59a59a39b28a1ae1ad1bd0ac0ad0ad0af1af389cffefefff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdffdff
ffffffffffffffeffeffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffefffffdffdff39a39a0af0ae0ae1ae9ff9ffbffbff
cffcffdffeffffffffffeffedffeffcff48a0ad0adef1ef1ff0ff0ff0ff0fe0fe0ef0ef0ff0ff0
ff0ff0fe0fe0ff0ff0ef0ff0ed0ff1fe5fd4ee7ee7fd5fd5000100000000001000000decde4df4
ee6ee5ff0ee0ee0ff1ee0ff1ff0fe0ff0ff0ff1ff0ef0ff0ff1ff1fe1fe1ef0ef1df0df0cfa694
0bf0bf498dffdffdffbffcffbffbffdffcffbffbff8ff1ae0ad0ac0ad0ad09f1af49bbffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefeefe
ffffffffffffffffffffffffffffffffeffeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffeffeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffcff59c0ae0bf692bf8ef0ef0fe3fe3fe0fe0ef0ef0ff0ff0
ff0ff0cf0ef1ef0df0fd0fe0ff0ff0df0cf0ff0ff0ff0ff0ff1ff1fe3fe3ef0ef0ff0ef0ff2fe1
ee0ff1fe1fe1fe0fe1fe0ff0fe0ff0fe1ff2fe2fe2fe0fe0ff0ff0ef1ef1ff0fe0ff0fe0cec675
1bf09fffffffffffffefeefeffffffffffffffeffeffffffffffffffffffffffffefeefeefeefe
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefeefe
ffffffffffffffffffffffffffffffffeffeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffeffeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffcff48c0bf0bf592bf8ef0ef0fe3fe3fe0fe0ef0ef0ff0ff0
ff0ff0cf0cf0ef0ff0fe0fd0ff0ff0df0df0ee0ff0ff0ff0ff1ff1fe3fe3ef0ef0ff0ff0ff1fe1
ff1ff1fe1fe1fe0fd0ff0ff0ff1fe0fe2fe1fe2fe2fe0fe0ff0ff0ef1ef1fe0ff0fe0fe0dec686
09f0afffffffffffffefeefeffffffffffffffeffeffffffffffffffffffffffffefeefeefeefe
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffdffdffcffcffffffffffffffffffffffffff
ffffffffffffffffffffffffffdfeceffeff09d1ae3b39f9ff0ff0ff0ff0fe1fe1ff0ff0fe1fe2
ff0fe0ff0ff0ff2fe1ff0ef0ff0ee0fe0fe1fe0ff0ef0ef0fe0fe0fe0fe0ff0ff0ff0ff0ff1fe1
ff1fe0fe1ff1ff1ff1ff0de0ff0ff0ff1ff0ff0ff0ff0ff0ff0ff0ff0ff0fe0fe0fe1ff18fd3b8
0bd0beeffeffffffffffffffffeffeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffdffdffcffcffffffffffffffffffffffffff
ffffffffffffffffffffffffffdffdeffeff0ae0ae3b38f9ff0ff0ff0ff0fe1fe1ff0ff0fd1fd1
fe0ff0ff0fe0fe1ff2ff0ff0ff0ff0ff2fd0ff0fe0ef0ef0fe0fe0fe0fe0ff0ff0ff0ff0ff1fe1
ff0ee0ff2ff2fe1ff2ff0ff0ef0ef0ee0ff1ff0ff0ff0ff0ff0ff0ff0ff0ff0ff0ff1ee02a7297
0bd0bdeffeffffffffffffffffeffeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffeffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffdffeeffeff19e19e0ad0beff1ff1ef0ef0ff0ff0ff0ff0ef0ff0
fe0ff1ff0ff1ae9af909f0af488aedfe0ff0ef0ef0ef0ef0fe0fe0ff0ff0fe0fe0ff0fe0ff0ff0
fe0fe0ef6be40bf09d4a89fdef0ff1ff0fe0fe2fe2ef0ef0ef0ef0fe1fe1fd0fe0ff0ff00ae0ae
19d2aeffffffffffffffeffeffffffffffffffdffdffeffeffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffeffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffeffedffeff19e19d0ae0aeff1ff1ef0ef0ff0ff0ff0ff0ef0ef0
ee0fe0fe0fd06b55940af08f6aa599fe0ff0ff1df0ef0ef0fe0fe0ff0ff0fe0fe0ff0fe0ff0ff0
fe0ff0be48a00af0bf3974a8ff1ff1fd0fe0fe2fe2ef0ef0ef0ef0fe1fe1fe0ff0ef0ee00be0be
2ae8ffffffffffffffffeffeffffffffffffffdffdffeffeffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffeffeffffffffffffffffffffffffffeffeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeffeffcff49d0ae0aefe0fe0ff0ff0ff1ff1fe0fe0ff0ff0
df5df58fe3a909d0be0ad0be0ae0ae1a87fefe0ff0fe0fe0ff0ff0df0df0fe1fe1ff2fe1ff2ff2
ef0ff00bf0ae0ae09d0bf0af09b2bdaf6af6ef0ef0fe0fe0fe1fe1ff0ff0ff1ff1ef1ef10bc0ac
48adffffffffffeffeffeffeffffffffffffffeffeffffffffffffffffffffffffffdffdffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffeffeffffffffffffffffffffffffffeffeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffeffcff38c0be0aefe0fe0ff0ff0ff1ff1fe0fe0fe0ff0
df57903aa2990bf0ad0ad0bd0be0ae2b92b9ee0ff1fe0fe0ff0ff0df0df0fe1fe1fe1fe2ff2ff2
ef0ff00ae0bf0be0be0af0bf1ac09b5b1af5ef0ef0fe0fe0fe1fe1ff0ff0ff1ef0ff1ff10ac0bc
59bcffffffffffeffeffeffeffffffffffffffeffeffffffffffffffffffffffffffdffdffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffeffefeffeffbff4991ae1ad694cfbfe0fe0ef1ef1fe0fe07ff2bb
09c2ae0af0af28d39effffff19b29b0bf0aecf7cf7ef0ef0ff0ee0ff1ff1ff0fe0fe0fe0ef2ef2
8fe3a90bf0ae49acff39b39b0ad0ad0af0af3a88feef1ff2fe0fe0fe0ff0fe0ff0bfb4950ce0ad
48ccffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffeffefdffdffcff4991ae19d695beafe0ff0de0ef0fe0fe02ab1aa
1ad2ad0af0bf39eaffffffffaff3ac0ae0ae8a2ce6ff0ff0ee0ff0ee0ee0ff0ff0fe0fe0ef2ef2
2982990bf0bf48acffbffbff09c0ad0bf0af3a83a8ef1ff2fd0ff0ff0ff0fe0fe0afa6a60ac0ce
59dcffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffdffdff0af0bf3a69fcee0ff09f9afa0ae0ae0ad0ae
39b29b599dfffffffffecffeeff5881ad1ae0ad0bdcf4be4ff0fd0ff0ff0ee0ff1fe0fe0df7de6
1cd0ac39c39cfeffffeffefecff49b19c2ad0ae0af0ad0adbf8af8ff1fe1ff0fe0bfc5850bd0bc
dffdffffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffeffdffdff0af0ae3a59fbff0ee04a44a40be0ae0be0be
3acaffdffcffffffffffefedeffdff1ae1ae0ad0ad7a0df5fe0fe0ff0ff0ef0ef1ff0ed0ef7791
0ab0bd28bbffffffdeffffffcffcffaff19c0bf0ae0ad1be491bf8fe0fe0fd0fe0bfc6a70ac0ac
dffdffffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffeffeffeffefffeff09e1af0be0ad9ff2a90ac0ad09c1ad59b379
dffefffedfffffffffdffeffefffffdff4880af0ae2a97fefe2ff3ee0ff0ff0ff0ff0ff17ff2aa
09b1bd68aeffffffffffffffffefffffeffe48959b1af09f0ae0ae2a89ffef3df28fe2a91af1af
efffffffeffeffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffeefdffeffedeefff1af1af0ad0bf1982aa0be0bd1ad0adcffcff
effefffffffeffffffeffeffffffffdffdff0ae0ae3aa2a9fe2ff3ff0ff0ff0ff0ef0ff019a2aa
1bd09bdffeffffffffffffffffffffffdffecffcff0af09f0bf0be1972a8df2df22a83a91af1af
ffffffffeffeffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffeffeffffffffffffbff39a0be0ad0bf0ae08d19effffffffffff
efffffffffefffeffeeffeffefffffffeefd49b39b09d1ae1b96fefe0fe0ff0ef0af95a40ae0ae
39c4adefffffffeffeffffffffffffffeffeefdffedff58729d19d0cf0ae09b2bd0ad0ad2bc09a
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffeffdffffffffffffbff4ab0ad0bd0ae0bf2aeaffffffffffffff
ffffffffffffffeffeeffeffffffffefdffebff39b1ae1ae1b91b9fe1fe1ee0ff0af94930ae0be
29cbffffffffffeffeffffffffffffffeffeffeffecffdffaff29d0ae0be1ac09b0be0bd1ab9ff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffdfe79849949969adfffffffffeefffffffff
ffffffffffffffdffdffeffeffffffffeffeeffeff3ad28c0be0ae3a59fbde4ef51ac1ac0ae0af
ffffffeffeffeffeffffeffefffffffffffffffefefffffffffefe49b49a09f1af0bf0ae39abff
fffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffeefffeffdfecffcffdffdffffffffffefffffffff
ffffffffffffffdffdffeffeffffffffeffeeffeffaff29c0bf0be3a59fbef578009b1ac0ae0ae
ffffffeffeffeffeffffeffeffffffffffffefeefeffffffffffffaffcff1af09f0bf0bf39aaff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffeffeffffffeffeffffffefffffffefeefeffffff
ffdffdffffffeffeffffffffffffffffffffffffffffeffe09f0af0cd0bd9ff29a0bf0bf588eff
ffffffffeefdffffffffffffffffffffffffffffffffffefffffffffffffdfe7a838b38b78ddff
ffffefeffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffeffefffefeeffeffffffefffffeeefeefeffffff
ffdffdffffffeffeffffffffffffffffffffffffffffeffd0af0af0bc0ab3aa3ab0af0bfeffdff
ffffffffeffefffffffffffffffffffffffffffffffffffffffffffffffedfecfdcffcffdffeff
ffffffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffeffefffeffffffffffeffeffffffeffeffffffffffffffeffeff
ffffffffeffeffffffffffffffeffeffffffeffeffffeffedff58a0bf0cf09e0ae4ac28affffff
fffffeffeffeffffffffffffffeffeffffffffffffffffffffffffffeffefffffefffeffffffff
ffcffcefeefeffffffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffeffeffffffffffffffeffeeffeffeffeffffffffffffffeffeff
ffffffffeffeffffffffffffffeffeffffffeffeffffeffebefdff0bf0ae0ae1af39bbffffffff
ffffffffeffeffffffffffffffeffeffffffffffffffffffffffffffeffeffeffffffeffffffff
ffcffcefeefeffffffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffeffdeffeffffffffffefeeffffffffffffffeffeffffffffffff
ffffffffffffffffffffffffffeffeffffffeffefffffffffffefedff58b1ad0adffeffeeffeff
ffffffffffffeffeffffeffeffeffeffffffffffffffffffffeffeffffffffffffeffeffffefff
ffeffeffffffffffffdfedfeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffeffeeffeffffffffffeffefffffffffeffffeffeffffffffffff
ffffffffffffffffffffffffffeffeffffffeffeffffffffefefffcff59b0ad0adffeffeeffeff
efffffffffffeffeffffeffeffeffefffffffffffffffeffffeffeffffffffffffeffeffffefff
ffeffeffffffffffffdfedfeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
grestore
359.7 564.7 moveto
12 f0
( ) show
224 532 moveto
18 f1
(CBFlib) show
188.2 503.6 moveto
12 f1
(An API for CBF/imgCIF) show
122.5 489.8 moveto
12 f1
(Crystallographic Binary Files with ASCII Support) show
224 476.5 moveto
12 f0
(Version 0.4) show
205.7 463.2 moveto
12 f0
(15 November 1998) show
246 436.6 moveto
12 f0
(by) show
223.5 423.3 moveto
12 f0
(Paul J. Ellis) show
147.2 410 moveto
12 f0
(Stanford Synchrotron Radiation Laboratory) show
184.5 396.7 moveto
12 f0
(ellis@ssrl.slac.stanford.edu) show
316.5 396.7 moveto
12 f0
( ) show
243.3 370.1 moveto
12 f0
(and) show
203.8 356.8 moveto
12 f0
(Herbert J. Bernstein) show
210.9 343.5 moveto
12 f0
(Bernstein + Sons) show
175.2 330.2 moveto
12 f0
(yaya@bernstein-plus-sons.com) show
325.8 330.2 moveto
12 f0
( ) show
0 307.8 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
124.5 274.7 moveto
14 f1
(Before using this software, please read the ) show
gsave
/rowdata 132 string def
221.2 246 translate
61.6 24.5 scale
88 35 4 [88 0 0 -35 0 35]
 smartimage12rgb
bbabbacbccbcbbbbcbbbabbabbbbbbcabcabbbabbabbcbbcabbabbbbbbbbbbbbbbbbbbbbbbabba
bbbbbbcbbcbbbbcbbcbbabbacbbcbbcbacbaabcabcacaacabbcbbccbacbabbbbbbaccacccbbcbb
bbabbabbbbbbcbacbaabbabbaccacccaccacabbabbbbbbbbcbbcbbcbbcbbbbbbbbbbbbbbbbabba
cbacbacccabbbbbbccbbbbbbcbbbaaccabbacbccbcbbabbbbbabbabbcbbccbbcbbcbacbabbcbbc
bcbbcbbcbbcbcbbcbbbbcbbcbcabcacbbcbbcbccbcbbcbbcbcbbcbcbccbccbacbaaccaccacaaca
cbccbccbbcbbbbcbbcaccacccbbcbbcbbcbbbbbbbbcbacbabcbbcbaccacccbccbcbcbbcbbbbbbb
cbbcbbcbbcbbbbbbbbbbbbbbcbbcbbcbacbaabbbccbccaaacccbbbbaa544bbabbaccdbbdbbcbcc
cbbccbbbcbbcbbbbbbacaacabbcbbcbbbbbbbbbbbbcbbcbbbbbbbbabbabbabbabbbbbbbbcbacba
caccacabcabc9cb9cbbbcbbcdaadaacbbcbbacaacacbbcbbbbabbacabcabcbccbcbbdbbdbbcbbc
bbcbbcbbbbbbbc9bc9bbbbbbcbccbcabcabcaccaccbbcbbcbbcbbcabbabbcbbcbbbbbbbbccccbb
bbaccb554343ccbcccffffffffffffffffffffffffffffffffeffeffffffffffffffffffffffff
ffffffffffffffffffffffffffeffeffffffffffffeffeffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffeffeffffffffffffffffffeffeffffffff
fffffffffffffffffffffffffffffffffbba554555bbabbaefffffffffffffffffffffffeffeff
effeffffffffffffffffffffffffffffffffffffffffffffffeffeffeffeffffffffffffffffff
ffffffffffffffffffffffffffffffeffeffeffeffeffeffffeffeffffffffffffffffffeffeff
ffffffffffffffffffeffefffffffffffffffffffffffffffffffffffffffffcbb454454bbbbba
ffffffffffffffffffffffffeffeffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffeffeffffffffffffffffffffffffffffffffffffffffffffffffffffffeffeffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffeecbb343576ccabb9ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffeffeffffffffeffeffffffffffffffffffffeffeffffffffeffeffffffffffff
ffffffffffffffffffffffffffeffeffdffdeffeffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeffefffffffffff877455455ccabb9ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffeffeffffffffeffeffffffffffffffffff
ffeffeffffffffeffeffffffffffffffffffffffffffffffffffffffeffeffdffdeffeffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffefffffffffffcab
455455cbacbbffffffffffffeffefffeee99fddf99f99fedffdffdeffffffdefabfa9e98ffbffa
ffffefffffffffffffffffffffffffeffefffffffffffffffffffffeeffefeffefffeffeffffff
feef9af55f88940feaffffffffffffffffffdffdffeffeffffffffffffffffffffffffffffffff
effeffffffffeffefffffffffffbab656545cbbcbbffffffffffffeffefffee833911811922d66
efcffdfffefffab723721943983ffbffffffffffffeffeffffffffffffffeffefffeffffffffff
fffdefb88da9834b67ffeffefffffffde944b10b11820fd9ffffffffffffffffffcffdffeffeff
fffffffffffffffffffffffffffefeeffeffffffeeeffdfffffffffefcbb556545cbdcbdffffff
ffffffeffefff87910c00e10b00c10ff8ff9fffffff56b01c00c00fe5fd5ffffffffffffffffff
fedffeffffffffffffffffffeffeffffffffb00c11f54f54ee7ff9effffffed733a10b20d60fc3
ffeffeffeffefffffffffffffffffffffefffffffffffffffffeefffffffffffffffefffffffff
fffffffffbbb545656cbdcacffffffffffffeffeffe65a10d10d00b00c10ee7ff9ffffffc12c12
d10c10fe5ff7ffffefefffffffffffffefedffffffffffffffffffeffdfeffefffb00c00c10f53
ee7ff9fffefffeed99f62f63d60fe5ffeffeffeffeffffffffffffffffffefffffffffffffffff
ffffffffffeefffffffffffefffffffffffffffbbb545555cbdcbdffffffffffffffffffe32b00
e00d00e00e00c70fe7ffdffdf11d00d00f41ff5ff6ffffeffeefeefdcfa9d63fa7c23fcdfeefee
ffeffefffffff99d54e10d00b10f50fe5ff6ffeffef98fbafdafc8ff7ff7effeffffdffefecf97
f53f97e66fddfeefeeeedffefffffefeffeefdefaad65f98d64fdcfdefddffeffefff9a9665555
cbdcbdffffffffffffffffffe32c10e00d00d00d00840fc5ffeffed00d00d10c00fe4ff6ffffff
fee844821821910920b12a11722c66ffeffdfffbaaa11910d00e00b10c20730fe5ffdffec65710
930820ff6ff7effeffffda87700820b10a10911911622d99ffeffeffeffffef845812811921911
810931933feeffefedefebdb444555bbbbcbefeefeffffffffffeed00c00d00e00e00f00a20f62
ffaa82d00e00a00fcbdf6ef7feffffb00f53e10c00d10c00e00d00d00d00fc8febffe854f54b00
e00d00a20a20830fd5efeffee01d01e10c00ff5ef5ffffeff56e12f00e00a10a10d00d00e00f33
ffbffbefcdfcf45c00f01e00a20a20e00f00a00b00ffdffdefe585565454bbbbcbefeefeffffff
feedccc00c00d00f33f00e00a20d40fe8ec6d00e00a10f54df5ff7fffa78b10b00d00d00fa7f52
f41e00d00e00830fc9ffefedf76c10d00e00a20fc5fd5fd5ffeffed00d01d00f43ef5ff6fffdcd
c00d01d00f00fc7f61d00e00e00f00eeaffcefc9d8c00d00e00e00fc8e62f00e00c12b01fcbffd
dfdaca454565cbbbbaefeffffffffffeec67d00e00930fc2f63b10e00e00fc6c30d00d00950fe2
fffffff97910e00e01830fe0dfbefdfec720d00c00930fd5ffffeff99a12d00d00d80fd2ffffff
fefc9cd00e00b10f50ef6ff8fed721c00c00930fd3eebffdd64910b20a10cf79d3fdbb10c00d00
d71fc7fe8ffaf53c10d00d10fd6ff8fffbcd445557bbabbbfffffffffffffde934d00d00a40fd3
f52b10d00e00f61a10e00e00c70fe1ffffffe64910f01d00fe0fe1efddfcfec720d00c00930fd5
ffffffc34800e10d00fe3fd2fffffffef747e00d00b10fc7ff6ff7e98720d11c00e80fd3efcffd
febf97fb9f54df7ef8f54a10d00d00b50d72a83cb5e21c00c00c00c81fd6eff9ab667446cbccbc
fffffffffffffde912e01e01730fd2fed821e00e00d02c01e00f01c80fe4ffffffd00e10d00d00
ef4ff5fffffffcfa15e00e00d90fd1fffffff44d11b00c10ee8ffafffeeffedc76f00f00a30fc3
fffffff55d11d00e00fe2ff5ffeffefffffffeefeeffbffcd22c11f00e00e10e00b00d10c00c00
c20b20fd6ff8fff788556556cbccbcfffffffffffffcd912e01e01e90fd2fedc65f01e00c00e13
f01f01c80fe3ffffffe00c00d00f34ff6ff6effffff8c914e00e00c80fe2fffedfc00d11b00b00
ff9ffafffffffed721f00f00a20fd4ffefeeb00c00d00d00ff4fe2ffeffeeffffffeefeeffcffc
f44b00e00e00f51f41c10f52f54c00f60e40fe7ff8fffabb556557ccbbbbfffffffffffff97b10
e00e00fd3ff4fffcacd00c00c00c00c00d00ff5ff6ffebcad00d00d00f44ee5ff8feefddf52b00
e10d00fe3ff4fffffff00e00c00f52df5ff7ffffeffcca33c00d00a90ff2ffffffe10d00d10f53
fd6ff8fef956f54c10630fc7febffce00e00c10f52ed6ff8fe8fe8fb9fdbfd9feafebffcdfcac9
563452bbbbbbfffffffffffff54b10e00f01b80ff6feffefd00d00d00c00c00e10ef4ef4efefff
d00d00c00c00ff6ff8fee944b00d10c00d00ff5ff5fffcabf00e00c00f52df5ff7fffffffaa811
d00d00b90ff2ffffffd00d00c00e10fe6ff8ebb623c10b10740fd8feaffcd00d00c00c00ff7ff8
ff9730a20800920f95ffcffcefdac9452664abbacbffffffffeffee21c00c10b00ff5fe4efeeff
fa9810d00e01b10f62ff8ff9feefffc00c00e00e00c00b00f13f35d00c00940fd4ceaffcffe987
d00d00d00f53a60fe9fffffff36d01c10c00fe3ff6feeffeb12a01d00d00c00d10d00d00e00d00
fd4ff5ffffeec37a15d00d00b10b10e00e00d00e10a80ff5ffdffdeff576666444acbbdcffeffe
ffeffec00c00c10f53fe4ff6effefefdd921e01e01b10e40fe7ff9ffffeffccc00d00d00c00c10
d01e02c00c00fd4fd4ffcffcfeddbad00e00e00d00730fd8fffffff03e02b00c10ff4fe3ffeffe
fcdb12d00e00c00c00d00e00e00f52fe4ff7ffeffffcf904d00d00b10b00f00e00d00f42fe4ff5
ffdffdefeacb555556bcaacafffffffffcbbe63a20b70c81eebffcfffffffeca86d61920b90fe5
efaffbffffffffeeedb74630820820830d71d80fd3feaffcefcefcfffcbda41930a00b11c90fe0
ffffffb72b71970a91deaffcfffffffefcbcc75720920920b70d80fe8fe8ffffffffffffffcffc
c76721920930920e70ff8ee7ffeffeffffffefebca452553acaabafffffffffffffdafb9ff8fe7
ffcffcffffffffdfecfe9fc7ff7ff7efbffceffeffffeffefecfebfebfdafd7fe8fd3ff5ffbffc
efcefcffffeffdbfebfccfbafe0ff1fffffffe9fe8fe5fe5ffcffcfffffffffffffdcfecfdafda
fe3fe3ff9ff9ffffffffffffffcffcfedfedfd9fd9fe3fc1dd5ff7ffeffeeeffffffebdb563553
cbdcadffeffeffffffffffffffcffceffeffffeffefeffffffffffffdffdffffffeffeffeffefe
ffffffffffffffffffffffffffffffffdffcffeffeffffffffeffeffeffeeffeffeffeffffffef
ffffffffffffffcffdfefffffeffffeffeffefcefcfffffffffffffffffffeefffeffeffffffff
ffffffffcffcfffffffffaab556546cbdcbdffeffefffffefeffefefbffceffeffffeffefeffff
ffffffffdffdffffffeffeffeffefeffffffffffffffffffffffffffffffffdffdefeffeffffff
ffeffeffeffeeffeffeffeffffffffffffefffffffffdffdffffffffffffffffffefcefcffffff
ffffffffffffffffffeffefffffffffffeffffbffcfffffffff889446557cbccbcffffffffffff
ffffffffeffeeffefffeffffffffffeffeffffffffffffffffffffffefffffffffffffffffeffe
efeefeffffffffeffeffffffeffeffefeefeefeefeffffffffeffeffeffeffffffeffeffefcefc
ffffffffeffeffeffeffffffffffffffffffffffffffeffdffefffffffffffeffeffffffffffff
ffeaa9555555cbdcbcffffffffffffffffffffeffeeffefffeffffffffffeffeffffffffffffff
ffffffffffffffffefffffffffeffeefeefeffffefffdffeffffffeffeffefeefeefeefeeffeff
ffeffeffeffeffffffeffeffefdefdfffefeffeffeffeffeffffffffffffffffffffffffffeffe
ffeffeffffffffeffeffffffffffffffebba556555accabcffdffdffeffefffffffeffefffdffe
ffffffefeefeffffffffffffffffffffffffffeffeffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffefeefeffffffffffefffffffffffffffffffffffff
ffeffeffffffffffffffffffefefffffffffffffffffdefcffffffffdffdffecba546546accabc
ffdffdffeffefffffffdffefffeffeffffffefeefeffffffffffffffffffffffffffeffeffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffefeefeffffff
ffffffffffffffffffffffffffffffffeffeffffffffffffffffffffffffffffffffffffffdffd
ffffffffdffdffecbb546556cccaaabbbcccbbbbbbcccbbb777bbbbbbcccaaa777bbbbbbbbbccc
bbb777bbbbbbbbbbbbbbb777cccaaa888bbbbbbbbbbbb888aaacccbbbbbbbbbbbbbbbcccbbbbbb
bbb888bbbbbbbbb777cccaaa888bbbbbbbbb777bbbbbbbbb777bbbbbbccc777bbbbbbbbb777bbb
bbbccc777bbbbbbbbb777bbbbbbccc777bbbbbbbbb777777555555aaa666444555555444444555
444555444555555444555444333555555444666555444444555444666555444555555555555333
555555444555444444555555333555555444555555555444666555444555555555444555444555
444666555555444555444555444666555555444555444555444666555555444555555555555666
555555666444555555555555555555555555555555555555555555555555555555444555555555
555555555555555555555555555555555555555555555444555555444555555555555555555555
555555555555555555555555444555555555555555555555444555555555555555555555444555
555555555555555555555444555555555444
grestore
9.7 231.4 moveto
14 f1
(for important disclaimers and the IUCr Policy on the Use of the Crystallographic) show
80.1 215.4 moveto
14 f1
(Information File \(CIF\) and other important information. ) show
0 192.6 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
190.8 155.7 moveto
18 f1
(Version History) show
3.5 123.8 moveto
12 f1
(Version ) show
50.6 123.8 moveto
12 f1
(Date) show
111.4 123.8 moveto
12 f1
(By) show
142.9 123.8 moveto
12 f1
(Description ) show
3.5 106.3 moveto
12 f0
(  0.1) show
50.6 106.3 moveto
12 f0
(  Apr. 1998) show
111.4 106.3 moveto
12 f0
(  PJE) show
142.9 106.3 moveto
12 f0
(  This was the first CBFlib release. It supported binary CBF files using) show
142.9 93 moveto
12 f0
(binary strings. ) show
3.5 75.5 moveto
12 f0
(  0.2) show
50.6 75.5 moveto
12 f0
(  Aug. 1998) show
111.4 75.5 moveto
12 f0
(  HJB) show
142.9 75.5 moveto
12 f0
(  This release added ascii imgCIF support using MIME-encoded binary) show
pagelevel restore
showpage
%%Page: 2 2
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
142.9 709.2 moveto
12 f0
(sections, added the option of MIME headers for the binary strings was) show
142.9 695.9 moveto
12 f0
(well. MIME code adapted from mpack 1.5. Added hooks needed for) show
142.9 682.6 moveto
12 f0
(DDL1-style names without categories. ) show
3.5 665.1 moveto
12 f0
(  0.3) show
50.6 665.1 moveto
12 f0
(  Sep. 1998) show
111.4 665.1 moveto
12 f0
(  PJE) show
142.9 665.1 moveto
12 f0
(  This release cleaned up the changes made for version 0.2, allowing) show
142.9 651.8 moveto
12 f0
(multi-threaded use of the code, and removing dependence on the mpack) show
142.9 638.5 moveto
12 f0
(package. ) show
3.5 621 moveto
12 f0
(  0.4) show
50.6 621 moveto
12 f0
(  Nov. 1998) show
111.4 621 moveto
12 f0
(  HJB) show
142.9 621 moveto
12 f0
(  This release merged much of the message digest code into the general) show
142.9 607.7 moveto
12 f0
(file reading and writing to reduce the number of passes. More consistency) show
142.9 594.4 moveto
12 f0
(checking between the MIME header and the binary header was) show
142.9 581.1 moveto
12 f0
(introduced. The size in the MIME header was adjusted to agree with the) show
142.9 567.8 moveto
12 f0
(version 0.2 documentation. ) show
0 555.2 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
185.2 518.3 moveto
18 f1
(Known Problems) show
0 490.4 moveto
12 f0
(This version does not have support for byte-offset or predictor compression. Postscript versions of) show
0 477.1 moveto
12 f0
(documents are not well-formatted, and the rtf versions are not ready yet. The handling of CBF_NONE) show
0 463.8 moveto
12 f0
(\(uncompressed\) binary sections has been chnaged for that of release 0.3, and may change yet again.) show
0 450.5 moveto
12 f0
(More work is needed to improve the efficiency of the code, especially when message digests are used.) show
0 437.2 moveto
12 f0
(Code is needed to support array sub-sections. Documentation of change history is needed. ) show
0 428.1 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 414.8 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
214 377.9 moveto
18 f1
(Foreword) show
0 350 moveto
12 f0
(In order to work with CBFlib, you need the source code, either in the form of a compressed tar,) show
0 336.7 moveto
12 f0
(CBFlib.tar.Z) show
61.3 336.7 moveto
12 f0
(, or a compressed shell archive, ) show
215.2 336.7 moveto
12 f0
(CBFlib.shar.Z) show
283.8 336.7 moveto
12 f0
(. Uncompress this file. Place it in an) show
0 323.4 moveto
12 f0
(otherwise empty directory, and unpack it with tar or sh. You will also need Paul Ellis's sample MAR345) show
0 310.1 moveto
12 f0
(image, ) show
35.3 310.1 moveto
12 f0
(example.mar2300) show
121.6 310.1 moveto
12 f0
(, as sample data. This file can also be found at) show
0 296.8 moveto
12 f0
(http://biosg1.slac.stanford.edu/biosg1-users/ellis/Public/) show
269.7 296.8 moveto
12 f0
(. Place that file in the top level directory \(one) show
0 283.5 moveto
12 f0
(level up from the source code\). Adjust the definition of CC in Makefile to point to your C compiler, and) show
0 270.2 moveto
12 f0
(then ) show
0 243.1 moveto
12 f1
(make tests) show
53.6 243.1 moveto
12 f0
( ) show
0 216.5 moveto
12 f0
(This release has been tested on an SGI under IRIX 6.4 and on a PowerPC under Linux-ppc 2.1.24. ) show
0 189.9 moveto
12 f0
(We have included ) show
89.6 189.9 moveto
12 f0
(examples) show
134.9 189.9 moveto
12 f0
( of CBF/imgCIF files produced by CBFlib, an updated version of John) show
0 176.6 moveto
12 f0
(Westbrook's DDL2-compliant ) show
149.9 176.6 moveto
12 f0
(CBF Extensions Dictionary) show
282.5 176.6 moveto
12 f0
(, and of Andy Hammersley's CBF definition,) show
0 163.3 moveto
12 f0
(updated to become a ) show
101.9 163.3 moveto
12 f0
(DRAFT CBF/ImgCIF DEFINITION) show
279.2 163.3 moveto
12 f0
(. ) show
0 136.2 moveto
12 f1
(This is just a proposal. Please be careful about basing any code on this until and unless there has) show
0 122.4 moveto
12 f1
(been a general agreement. ) show
0 113.3 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
217.5 76.4 moveto
18 f1
(Contents) show
pagelevel restore
showpage
%%Page: 3 3
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
18.1 700.6 moveto
3.3 3.3 c  fill 
28 696.5 moveto
12 f0
(1. Introduction) show
99.3 696.5 moveto
12 f0
( ) show
18.1 674 moveto
3.3 3.3 c  fill 
28 669.9 moveto
12 f0
(2. Function descriptions) show
143.6 669.9 moveto
12 f0
( ) show
18.1 660.7 moveto
3.3 3.3 c  fill 
28 656.6 moveto
12 f0
(2.1 General description) show
140.3 656.6 moveto
12 f0
( ) show
18.1 647.4 moveto
3.3 3.3 c  fill 
28 643.3 moveto
12 f0
(2.1.1 CBF handles) show
117.3 643.3 moveto
12 f0
( ) show
18.1 634.1 moveto
3.3 3.3 c  fill 
28 630 moveto
12 f0
(2.1.2 Return values) show
121.3 630 moveto
12 f0
( ) show
18.1 620.8 moveto
3.3 3.3 c  fill 
28 616.7 moveto
12 f0
(2.2 Reading and writing files containing binary sections) show
296.6 616.7 moveto
12 f0
( ) show
18.1 607.5 moveto
3.3 3.3 c  fill 
28 603.4 moveto
12 f0
(2.2.1 Reading binary sections) show
170.3 603.4 moveto
12 f0
( ) show
18.1 594.2 moveto
3.3 3.3 c  fill 
28 590.1 moveto
12 f0
(2.2.2 Writing binary sections) show
167.6 590.1 moveto
12 f0
( ) show
18.1 580.9 moveto
3.3 3.3 c  fill 
28 576.8 moveto
12 f0
(2.2.3 Summary of reading and writing files containing binary sections) show
364.3 576.8 moveto
12 f0
( ) show
18.1 567.6 moveto
3.3 3.3 c  fill 
28 563.5 moveto
12 f0
(2.3 Function prototypes) show
142.3 563.5 moveto
12 f0
( ) show
18.1 554.3 moveto
3.3 3.3 c  fill 
28 550.2 moveto
12 f0
(2.3.1 cbf_make_handle) show
140.3 550.2 moveto
12 f0
( ) show
18.1 541 moveto
3.3 3.3 c  fill 
28 536.9 moveto
12 f0
(2.3.2 cbf_free_handle) show
132.9 536.9 moveto
12 f0
( ) show
18.1 527.7 moveto
3.3 3.3 c  fill 
28 523.6 moveto
12 f0
(2.3.3 cbf_read_file) show
118.9 523.6 moveto
12 f0
( ) show
18.1 514.4 moveto
3.3 3.3 c  fill 
28 510.3 moveto
12 f0
(2.3.4 cbf_write_file) show
122.9 510.3 moveto
12 f0
( ) show
18.1 501.1 moveto
3.3 3.3 c  fill 
28 497 moveto
12 f0
(2.3.5 cbf_new_datablock) show
149 497 moveto
12 f0
( ) show
18.1 487.8 moveto
3.3 3.3 c  fill 
28 483.7 moveto
12 f0
(2.3.6 cbf_force_new_datablock) show
179.6 483.7 moveto
12 f0
( ) show
18.1 474.5 moveto
3.3 3.3 c  fill 
28 470.4 moveto
12 f0
(2.3.7 cbf_new_category) show
143.6 470.4 moveto
12 f0
( ) show
18.1 461.2 moveto
3.3 3.3 c  fill 
28 457.1 moveto
12 f0
(2.3.8 cbf_force_new_category) show
174.2 457.1 moveto
12 f0
( ) show
18.1 447.9 moveto
3.3 3.3 c  fill 
28 443.8 moveto
12 f0
(2.3.9 cbf_new_column) show
138.3 443.8 moveto
12 f0
( ) show
18.1 434.6 moveto
3.3 3.3 c  fill 
28 430.5 moveto
12 f0
(2.3.10 cbf_new_row) show
126.9 430.5 moveto
12 f0
( ) show
18.1 421.3 moveto
3.3 3.3 c  fill 
28 417.2 moveto
12 f0
(2.3.11 cbf_insert_row) show
133.6 417.2 moveto
12 f0
( ) show
18.1 408 moveto
3.3 3.3 c  fill 
28 403.9 moveto
12 f0
(2.3.12 cbf_delete_row) show
135.6 403.9 moveto
12 f0
( ) show
18.1 394.7 moveto
3.3 3.3 c  fill 
28 390.6 moveto
12 f0
(2.3.13 cbf_set_datablockname) show
174.3 390.6 moveto
12 f0
( ) show
18.1 381.4 moveto
3.3 3.3 c  fill 
28 377.3 moveto
12 f0
(2.3.14 cbf_reset_datablocks) show
162.3 377.3 moveto
12 f0
( ) show
18.1 368.1 moveto
3.3 3.3 c  fill 
28 364 moveto
12 f0
(2.3.15 cbf_reset_datablock) show
157.6 364 moveto
12 f0
( ) show
18.1 354.8 moveto
3.3 3.3 c  fill 
28 350.7 moveto
12 f0
(2.3.16 cbf_reset_category) show
152.2 350.7 moveto
12 f0
( ) show
18.1 341.5 moveto
3.3 3.3 c  fill 
28 337.4 moveto
12 f0
(2.3.17 cbf_remove_datablock) show
171 337.4 moveto
12 f0
( ) show
18.1 328.2 moveto
3.3 3.3 c  fill 
28 324.1 moveto
12 f0
(2.3.18 cbf_remove_category) show
165.6 324.1 moveto
12 f0
( ) show
18.1 314.9 moveto
3.3 3.3 c  fill 
28 310.8 moveto
12 f0
(2.3.19 cbf_remove_column) show
160.3 310.8 moveto
12 f0
( ) show
18.1 301.6 moveto
3.3 3.3 c  fill 
28 297.5 moveto
12 f0
(2.3.20 cbf_remove_row) show
142.9 297.5 moveto
12 f0
( ) show
18.1 288.3 moveto
3.3 3.3 c  fill 
28 284.2 moveto
12 f0
(2.3.21 cbf_rewind_datablock) show
168.3 284.2 moveto
12 f0
( ) show
18.1 275 moveto
3.3 3.3 c  fill 
28 270.9 moveto
12 f0
(2.3.22 cbf_rewind_category) show
162.9 270.9 moveto
12 f0
( ) show
18.1 261.7 moveto
3.3 3.3 c  fill 
28 257.6 moveto
12 f0
(2.3.23 cbf_rewind_column) show
157.6 257.6 moveto
12 f0
( ) show
18.1 248.4 moveto
3.3 3.3 c  fill 
28 244.3 moveto
12 f0
(2.3.24 cbf_rewind_row) show
140.3 244.3 moveto
12 f0
( ) show
18.1 235.1 moveto
3.3 3.3 c  fill 
28 231 moveto
12 f0
(2.3.25 cbf_next_datablock) show
155.7 231 moveto
12 f0
( ) show
18.1 221.8 moveto
3.3 3.3 c  fill 
28 217.7 moveto
12 f0
(2.3.26 cbf_next_category) show
150.3 217.7 moveto
12 f0
( ) show
18.1 208.5 moveto
3.3 3.3 c  fill 
28 204.4 moveto
12 f0
(2.3.27 cbf_next_column) show
144.9 204.4 moveto
12 f0
( ) show
18.1 195.2 moveto
3.3 3.3 c  fill 
28 191.1 moveto
12 f0
(2.3.28 cbf_next_row) show
127.6 191.1 moveto
12 f0
( ) show
18.1 181.9 moveto
3.3 3.3 c  fill 
28 177.8 moveto
12 f0
(2.3.29 cbf_find_datablock) show
154.3 177.8 moveto
12 f0
( ) show
18.1 168.6 moveto
3.3 3.3 c  fill 
28 164.5 moveto
12 f0
(2.3.30 cbf_find_category) show
148.9 164.5 moveto
12 f0
( ) show
18.1 155.3 moveto
3.3 3.3 c  fill 
28 151.2 moveto
12 f0
(2.3.31 cbf_find_column) show
143.6 151.2 moveto
12 f0
( ) show
18.1 142 moveto
3.3 3.3 c  fill 
28 137.9 moveto
12 f0
(2.3.32 cbf_find_row) show
126.3 137.9 moveto
12 f0
( ) show
18.1 128.7 moveto
3.3 3.3 c  fill 
28 124.6 moveto
12 f0
(2.3.33 cbf_find_nextrow) show
146.9 124.6 moveto
12 f0
( ) show
18.1 115.4 moveto
3.3 3.3 c  fill 
28 111.3 moveto
12 f0
(2.3.34 cbf_count_datablocks) show
166.3 111.3 moveto
12 f0
( ) show
18.1 102.1 moveto
3.3 3.3 c  fill 
28 98 moveto
12 f0
(2.3.35 cbf_count_categories) show
163.6 98 moveto
12 f0
( ) show
18.1 88.8 moveto
3.3 3.3 c  fill 
28 84.7 moveto
12 f0
(2.3.36 cbf_count_columns) show
155.6 84.7 moveto
12 f0
( ) show
pagelevel restore
showpage
%%Page: 4 4
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
18.1 713.3 moveto
3.3 3.3 c  fill 
28 709.2 moveto
12 f0
(2.3.37 cbf_count_rows) show
138.3 709.2 moveto
12 f0
( ) show
18.1 700 moveto
3.3 3.3 c  fill 
28 695.9 moveto
12 f0
(2.3.38 cbf_select_datablock) show
162.3 695.9 moveto
12 f0
( ) show
18.1 686.7 moveto
3.3 3.3 c  fill 
28 682.6 moveto
12 f0
(2.3.39 cbf_select_category) show
156.9 682.6 moveto
12 f0
( ) show
18.1 673.4 moveto
3.3 3.3 c  fill 
28 669.3 moveto
12 f0
(2.3.40 cbf_select_column) show
151.6 669.3 moveto
12 f0
( ) show
18.1 660.1 moveto
3.3 3.3 c  fill 
28 656 moveto
12 f0
(2.3.41 cbf_select_row) show
134.3 656 moveto
12 f0
( ) show
18.1 646.8 moveto
3.3 3.3 c  fill 
28 642.7 moveto
12 f0
(2.3.42 cbf_datablock_name) show
160.9 642.7 moveto
12 f0
( ) show
18.1 633.5 moveto
3.3 3.3 c  fill 
28 629.4 moveto
12 f0
(2.3.43 cbf_category_name) show
155.6 629.4 moveto
12 f0
( ) show
18.1 620.2 moveto
3.3 3.3 c  fill 
28 616.1 moveto
12 f0
(2.3.44 cbf_column_name) show
150.3 616.1 moveto
12 f0
( ) show
18.1 606.9 moveto
3.3 3.3 c  fill 
28 602.8 moveto
12 f0
(2.3.45 cbf_row_number) show
143.6 602.8 moveto
12 f0
( ) show
18.1 593.6 moveto
3.3 3.3 c  fill 
28 589.5 moveto
12 f0
(2.3.46 cbf_get_value) show
128.9 589.5 moveto
12 f0
( ) show
18.1 580.3 moveto
3.3 3.3 c  fill 
28 576.2 moveto
12 f0
(2.3.47 cbf_set_value) show
127.6 576.2 moveto
12 f0
( ) show
18.1 567 moveto
3.3 3.3 c  fill 
28 562.9 moveto
12 f0
(2.3.48 cbf_get_integervalue) show
162.3 562.9 moveto
12 f0
( ) show
18.1 553.7 moveto
3.3 3.3 c  fill 
28 549.6 moveto
12 f0
(2.3.49 cbf_set_integervalue) show
160.9 549.6 moveto
12 f0
( ) show
18.1 540.4 moveto
3.3 3.3 c  fill 
28 536.3 moveto
12 f0
(2.3.50 cbf_get_doublevalue) show
161.6 536.3 moveto
12 f0
( ) show
18.1 527.1 moveto
3.3 3.3 c  fill 
28 523 moveto
12 f0
(2.3.51 cbf_set_doublevalue) show
160.3 523 moveto
12 f0
( ) show
18.1 513.8 moveto
3.3 3.3 c  fill 
28 509.7 moveto
12 f0
(2.3.52 cbf_get_integerarrayparameters) show
213.6 509.7 moveto
12 f0
( ) show
18.1 500.5 moveto
3.3 3.3 c  fill 
28 496.4 moveto
12 f0
(2.3.53 cbf_get_integerarray) show
160.9 496.4 moveto
12 f0
( ) show
18.1 487.2 moveto
3.3 3.3 c  fill 
28 483.1 moveto
12 f0
(2.3.54 cbf_set_integerarray) show
159.6 483.1 moveto
12 f0
( ) show
18.1 473.9 moveto
3.3 3.3 c  fill 
28 469.8 moveto
12 f0
(2.3.55 cbf_failnez) show
114.9 469.8 moveto
12 f0
( ) show
18.1 460.6 moveto
3.3 3.3 c  fill 
28 456.5 moveto
12 f0
(2.3.56 cbf_onfailnez) show
126.9 456.5 moveto
12 f0
( ) show
18.1 434 moveto
3.3 3.3 c  fill 
28 429.9 moveto
12 f0
(3. File format) show
93.6 429.9 moveto
12 f0
( ) show
18.1 420.7 moveto
3.3 3.3 c  fill 
28 416.6 moveto
12 f0
(3.1 General description) show
140.3 416.6 moveto
12 f0
( ) show
18.1 407.4 moveto
3.3 3.3 c  fill 
28 403.3 moveto
12 f0
(3.2 Format of the binary sections) show
186.6 403.3 moveto
12 f0
( ) show
18.1 394.1 moveto
3.3 3.3 c  fill 
28 390 moveto
12 f0
(3.2.1 Format of imgCIF binary sections ) show
18.1 380.8 moveto
3.3 3.3 c  fill 
28 376.7 moveto
12 f0
(3.2.2 Format of CBF binary sections ) show
18.1 367.5 moveto
3.3 3.3 c  fill 
28 363.4 moveto
12 f0
(3.3 Compression schemes) show
152.9 363.4 moveto
12 f0
( ) show
18.1 354.2 moveto
3.3 3.3 c  fill 
28 350.1 moveto
12 f0
(3.3.1 Canonical-code compression) show
193.9 350.1 moveto
12 f0
( ) show
18.1 340.9 moveto
3.3 3.3 c  fill 
28 336.8 moveto
12 f0
(3.3.2 CCP4-style compression) show
174 336.8 moveto
12 f0
( ) show
18.1 314.3 moveto
3.3 3.3 c  fill 
28 310.2 moveto
12 f0
(4. Installation) show
94 310.2 moveto
12 f0
( ) show
18.1 287.7 moveto
3.3 3.3 c  fill 
28 283.6 moveto
12 f0
(5. Example programs) show
130.9 283.6 moveto
12 f0
( ) show
0 254.7 moveto
14 f1
(1. Introduction) show
0 227.7 moveto
12 f0
(CBFlib is a library of ANSI-C functions providing a simple mechanism for accessing Crystallographic) show
0 214.4 moveto
12 f0
(Binary Files \(CBF files\) and Image-supporting CIF \(imgCIF\) files. The CBFlib API is loosely based on) show
0 201.1 moveto
12 f0
(the CIFPARSE API for mmCIF files. Like CIFPARSE, CBFlib does not perform any semantic integrity) show
0 187.8 moveto
12 f0
(checks and simply provides functions to create, read, modify and write CBF binary data files and) show
0 174.5 moveto
12 f0
(imgCIF ASCII data files. ) show
0 145.6 moveto
14 f1
(2. Function descriptions) show
0 118.1 moveto
12 f1
(2.1 General description) show
0 91.5 moveto
12 f0
(Almost all of the CBFlib functions receive a value of type cbf_handle \(a CBF handle\) as the first) show
0 78.2 moveto
12 f0
(argument. ) show
pagelevel restore
showpage
%%Page: 5 5
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 699.6 moveto
12 f0
(All functions return an integer equal to 0 for success or an error code for failure.) show
0 672.5 moveto
12 f1
(2.1.1 CBF handles) show
0 645.9 moveto
12 f0
(CBFlib permits a program to use multiple CBF objects simultaneously. To identify the CBF object on) show
0 632.6 moveto
12 f0
(which a function will operate, CBFlib uses a value of type cbf_handle. ) show
0 606 moveto
12 f0
(All functions in the library except cbf_make_handle expect a value of type cbf_handle as the first) show
0 592.7 moveto
12 f0
(argument. ) show
0 566.1 moveto
12 f0
(The function cbf_make_handle creates and initializes a new CBF handle. ) show
0 539.5 moveto
12 f0
(The function cbf_free_handle destroys a handle and frees all memory associated with the corresponding) show
0 526.2 moveto
12 f0
(CBF object.) show
0 499.1 moveto
12 f1
(2.1.2 Return values) show
0 472.5 moveto
12 f0
(All of the CBFlib functions return 0 on success and an error code on failure. The error codes are: ) show
95.7 442.4 moveto
12 f0
(  CBF_FORMAT) show
207.9 442.4 moveto
12 f0
(  The file format is invalid ) show
95.7 424.9 moveto
12 f0
(  CBF_ALLOC) show
207.9 424.9 moveto
12 f0
(  Memory allocation failed ) show
95.7 407.4 moveto
12 f0
(  CBF_ARGUMENT) show
207.9 407.4 moveto
12 f0
(  Invalid function argument ) show
95.7 389.9 moveto
12 f0
(  CBF_ASCII) show
207.9 389.9 moveto
12 f0
(  The value is ASCII \(not binary\) ) show
95.7 372.4 moveto
12 f0
(  CBF_BINARY) show
207.9 372.4 moveto
12 f0
(  The value is binary \(not ASCII\) ) show
95.7 354.9 moveto
12 f0
(  CBF_BITCOUNT) show
207.9 354.9 moveto
12 f0
(  The expected number of bits does ) show
207.9 341.6 moveto
12 f0
(not match the actual number written ) show
95.7 324.1 moveto
12 f0
(  CBF_ENDOFDATA) show
207.9 324.1 moveto
12 f0
(  The end of the data was reached ) show
207.9 310.8 moveto
12 f0
(before the end of the array ) show
95.7 293.3 moveto
12 f0
(  CBF_FILECLOSE) show
207.9 293.3 moveto
12 f0
(  File close error ) show
95.7 275.8 moveto
12 f0
(  CBF_FILEOPEN) show
207.9 275.8 moveto
12 f0
(  File open error ) show
95.7 258.3 moveto
12 f0
(  CBF_FILEREAD) show
207.9 258.3 moveto
12 f0
(  File read error ) show
95.7 240.8 moveto
12 f0
(  CBF_FILESEEK) show
207.9 240.8 moveto
12 f0
(  File seek error ) show
95.7 223.3 moveto
12 f0
(  CBF_FILETELL) show
207.9 223.3 moveto
12 f0
(  File tell error ) show
95.7 205.8 moveto
12 f0
(  CBF_FILEWRITE) show
207.9 205.8 moveto
12 f0
(  File write error ) show
95.7 188.3 moveto
12 f0
(  CBF_IDENTICAL) show
207.9 188.3 moveto
12 f0
(  A data block with the new name ) show
207.9 175 moveto
12 f0
(already exists ) show
95.7 157.5 moveto
12 f0
(  CBF_NOTFOUND) show
207.9 157.5 moveto
12 f0
(  The data block, category, column or) show
207.9 144.2 moveto
12 f0
(row does not exist ) show
95.7 126.7 moveto
12 f0
(  CBF_OVERFLOW) show
207.9 126.7 moveto
12 f0
(  The number read cannot fit into the) show
207.9 113.4 moveto
12 f0
(destination argument. The destination has) show
207.9 100.1 moveto
12 f0
(been set to the nearest value. ) show
pagelevel restore
showpage
%%Page: 6 6
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(If more than one error has occurred, the error code is the logical OR of the individual error codes.) show
0 682.1 moveto
12 f1
(2.2 Reading and writing files containing binary sections) show
0 655 moveto
12 f1
(2.2.1 Reading binary sections) show
0 628.4 moveto
12 f0
(The current version of CBFlib only decompresses a binary section from disk when requested by the) show
0 615.1 moveto
12 f0
(program. ) show
0 588.5 moveto
12 f0
(When a file containing one or more binary sections is read, CBFlib saves the file pointer and the) show
0 575.2 moveto
12 f0
(position of the binary section within the file and then jumps past the binary section. When the program) show
0 561.9 moveto
12 f0
(attempts to access the binary data, CBFlib sets the file position back to the start of the binary section and) show
0 548.6 moveto
12 f0
(then reads the data. ) show
0 522 moveto
12 f0
(For this scheme to work: ) show
0 495.4 moveto
12 f0
(1. The file must be a random-access file opened in binary mode \(fopen \( ," rb"\)\).) show
0 482.1 moveto
12 f0
(2. The program ) show
77.3 482.1 moveto
12 f2
(must not) show
118.5 482.1 moveto
12 f0
( close the file. CBFlib will close the file using fclose \( \) when it is no longer) show
0 468.8 moveto
12 f0
(needed. ) show
0 442.2 moveto
12 f0
(At present, this also means that a program cant read a file and then write back to the same file. This) show
0 428.9 moveto
12 f0
(restriction will be eliminated in a future version. ) show
0 402.3 moveto
12 f0
(When reading an imgCIF vs a CBF, the difference is detected automatically. ) show
0 375.2 moveto
12 f1
(2.2.2 Writing binary sections) show
0 348.6 moveto
12 f0
(When a program passes CBFlib a binary value, the data is compressed to a temporary file. If the CBF) show
0 335.3 moveto
12 f0
(object is subsequently written to a file, the data is simply copied from the temporary file to the output) show
0 322 moveto
12 f0
(file. ) show
0 295.4 moveto
12 f0
(The output file can be of any type. If the program indicates to CBFlib that the file is a random-access) show
0 282.1 moveto
12 f0
(and readable, CBFlib will conserve disk space by closing the temporary file and using the output file as) show
0 268.8 moveto
12 f0
(the location at which the binary value is stored. ) show
0 242.2 moveto
12 f0
(For this option to work: ) show
0 215.6 moveto
12 f0
(1. The file must be a random-access file opened in binary update mode \(fopen \( , "w+b"\)\).) show
0 202.3 moveto
12 f0
(2. The program ) show
77.3 202.3 moveto
12 f2
(must not) show
118.5 202.3 moveto
12 f0
( close the file. CBFlib will close the file using fclose \( \) when it is no longer) show
0 189 moveto
12 f0
(needed. ) show
0 162.4 moveto
12 f0
(If this option is not used: ) show
0 135.8 moveto
12 f0
(1. CBFlib will continue using the temporary file.) show
0 122.5 moveto
12 f0
(2. CBFlib ) show
50.3 122.5 moveto
12 f2
(will not) show
86.8 122.5 moveto
12 f0
( close the file. This is the responsibility of the main program. ) show
0 95.4 moveto
12 f1
(2.2.3 Summary of reading and writing files containing binary sections) show
pagelevel restore
showpage
%%Page: 7 7
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(1. Open disk files to read using the mode "rb". ) show
0 695.9 moveto
12 f0
(2. If possible, open disk files to write using the mode "w+b" and tell CBFlib that it can use the file as a) show
0 682.6 moveto
12 f0
(buffer.) show
0 669.3 moveto
12 f0
(3. Do ) show
29.6 669.3 moveto
12 f2
(not) show
45.1 669.3 moveto
12 f0
( close any files read by CBFlib or written by CBFlib with buffering turned on.) show
0 656 moveto
12 f0
(4. Do ) show
29.6 656 moveto
12 f2
(not) show
45.1 656 moveto
12 f0
( attempt to read from a file, then write to the same file.) show
0 646.9 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 633.6 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 602.3 moveto
12 f1
(2.3 Function prototypes) show
0 575.2 moveto
12 f1
(2.3.1 cbf_make_handle) show
117.6 575.2 moveto
12 f1
( ) show
0 548.1 moveto
12 f1
(PROTOTYPE) show
74.6 548.1 moveto
12 f0
( ) show
0 521.5 moveto
12 f0
(#include "cbf.h") show
0 494.9 moveto
12 f0
(int cbf_make_handle \(cbf_handle *) show
170.2 494.9 moveto
12 f2
(handle) show
202.8 494.9 moveto
12 f0
(\); ) show
0 467.8 moveto
12 f1
(DESCRIPTION) show
83.3 467.8 moveto
12 f0
( ) show
0 441.2 moveto
12 f0
(cbf_make_handle creates and initializes a new internal CBF object. All other CBFlib functions operating) show
0 427.9 moveto
12 f0
(on this object receive the CBF handle as the first argument. ) show
0 400.8 moveto
12 f1
(ARGUMENTS) show
3.5 384 moveto
12 f0
(  ) show
9.5 384 moveto
12 f2
(handle) show
46.3 384 moveto
12 f0
(  Pointer to a CBF handle. ) show
0 353.4 moveto
12 f1
(RETURN VALUE) show
95.6 353.4 moveto
12 f0
( ) show
0 326.8 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 299.7 moveto
12 f1
(SEE ALSO) show
58.3 299.7 moveto
12 f0
( ) show
0 273.1 moveto
12 f0
(2.3.2 cbf_free_handle) show
0 250.7 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 219.4 moveto
12 f1
(2.3.2 cbf_free_handle) show
109.6 219.4 moveto
12 f1
( ) show
0 192.3 moveto
12 f1
(PROTOTYPE) show
74.6 192.3 moveto
12 f0
( ) show
0 165.7 moveto
12 f0
(#include "cbf.h") show
0 139.1 moveto
12 f0
(int cbf_free_handle \(cbf_handle ) show
156.9 139.1 moveto
12 f2
(handle) show
189.5 139.1 moveto
12 f0
(\); ) show
0 112 moveto
12 f1
(DESCRIPTION) show
83.3 112 moveto
12 f0
( ) show
0 85.4 moveto
12 f0
(cbf_free_handle destroys the CBF object specified by the ) show
278.6 85.4 moveto
12 f2
(handle) show
311.2 85.4 moveto
12 f0
( and frees all associated memory. ) show
pagelevel restore
showpage
%%Page: 8 8
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 706.3 moveto
12 f1
(ARGUMENTS) show
3.5 689.5 moveto
12 f0
(  ) show
9.5 689.5 moveto
12 f2
(handle) show
46.3 689.5 moveto
12 f0
(  CBF handle to free. ) show
0 658.9 moveto
12 f1
(RETURN VALUE) show
95.6 658.9 moveto
12 f0
( ) show
0 632.3 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 605.2 moveto
12 f1
(SEE ALSO) show
58.3 605.2 moveto
12 f0
( ) show
0 578.6 moveto
12 f0
(2.3.1 cbf_make_handle) show
0 556.2 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 524.9 moveto
12 f1
(2.3.3 cbf_read_file) show
0 497.8 moveto
12 f1
(PROTOTYPE) show
74.6 497.8 moveto
12 f0
( ) show
0 471.2 moveto
12 f0
(#include "cbf.h") show
0 444.6 moveto
12 f0
(int cbf_read_file \(cbf_handle ) show
142.9 444.6 moveto
12 f2
(handle) show
175.5 444.6 moveto
12 f0
(, FILE *) show
217.5 444.6 moveto
12 f2
(file) show
232.8 444.6 moveto
12 f0
(, int ) show
254.4 444.6 moveto
12 f2
(headers) show
292.3 444.6 moveto
12 f0
(\); ) show
0 417.5 moveto
12 f1
(DESCRIPTION) show
83.3 417.5 moveto
12 f0
( ) show
0 390.9 moveto
12 f0
(cbf_read_file reads the CBF or CIF file ) show
194 390.9 moveto
12 f2
(file) show
209.3 390.9 moveto
12 f0
( into the CBF object specified by ) show
370.9 390.9 moveto
12 f2
(handle) show
403.5 390.9 moveto
12 f0
(. ) show
0 364.3 moveto
12 f2
(headers) show
37.9 364.3 moveto
12 f0
( controls the interprestation of binary section headers of imgCIF files. ) show
3.5 347.5 moveto
12 f0
(  MSG_DIGEST: ) show
112 347.5 moveto
12 f0
(  Instructs the to check that the digest of the binary section matches any header) show
112 334.2 moveto
12 f0
(value whenever the binary section is accessed. If the digests do not match, the) show
112 320.9 moveto
12 f0
(call will return CBF_FORMAT. ) show
3.5 303.4 moveto
12 f0
(  MSG_NODIGEST: ) show
112 303.4 moveto
12 f0
(  Do not check the digest \(default\). ) show
0 273.3 moveto
12 f0
(CBFlib defers reading binary sections as long as possible. In the current version of CBFlib, this means) show
0 260 moveto
12 f0
(that: ) show
0 233.4 moveto
12 f0
(1. The file must be a random-access file opened in binary mode \(fopen \( , "rb"\)\).) show
0 220.1 moveto
12 f0
(2. The program ) show
77.3 220.1 moveto
12 f2
(must not) show
118.5 220.1 moveto
12 f0
( close the file. CBFlib will close the file using fclose \( \) when it is no longer) show
0 206.8 moveto
12 f0
(needed. ) show
0 180.2 moveto
12 f0
(These restrictions may change in a future release. ) show
0 153.1 moveto
12 f1
(ARGUMENTS) show
3.5 136.3 moveto
12 f0
(  ) show
9.5 136.3 moveto
12 f2
(handle) show
51.6 136.3 moveto
12 f0
(  CBF handle.) show
3.5 118.8 moveto
12 f0
(  ) show
11.2 118.8 moveto
12 f2
(file) show
51.6 118.8 moveto
12 f0
(  Pointer to a file descriptor.) show
3.5 101.3 moveto
12 f0
(  ) show
9.5 101.3 moveto
12 f2
(headers) show
51.6 101.3 moveto
12 f0
(  Controls interprestation of binary section headers. ) show
pagelevel restore
showpage
%%Page: 9 9
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 708.7 moveto
12 f1
(RETURN VALUE) show
95.6 708.7 moveto
12 f0
( ) show
0 682.1 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 655 moveto
12 f1
(SEE ALSO) show
58.3 655 moveto
12 f0
( ) show
0 628.4 moveto
12 f0
(2.3.4 cbf_write_file) show
0 606 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 574.7 moveto
12 f1
(2.3.4 cbf_write_file) show
97.6 574.7 moveto
12 f1
( ) show
0 547.6 moveto
12 f1
(PROTOTYPE) show
74.6 547.6 moveto
12 f0
( ) show
0 521 moveto
12 f0
(#include "cbf.h") show
0 494.4 moveto
12 f0
(int cbf_write_file \(cbf_handle ) show
146.9 494.4 moveto
12 f2
(handle) show
179.5 494.4 moveto
12 f0
(, FILE *) show
221.5 494.4 moveto
12 f2
(file) show
236.8 494.4 moveto
12 f0
(, int ) show
258.4 494.4 moveto
12 f2
(readable) show
301 494.4 moveto
12 f0
(, int ) show
322.6 494.4 moveto
12 f2
(ciforcbf) show
361.6 494.4 moveto
12 f0
(, int ) show
383.2 494.4 moveto
12 f2
(headers) show
421.1 494.4 moveto
12 f0
(, int ) show
442.7 494.4 moveto
12 f2
(encoding) show
486.6 494.4 moveto
12 f0
(\); ) show
0 467.3 moveto
12 f1
(DESCRIPTION) show
83.3 467.3 moveto
12 f0
( ) show
0 440.7 moveto
12 f0
(cbf_write_file writes the CBF object specified by ) show
240.3 440.7 moveto
12 f2
(handle) show
272.9 440.7 moveto
12 f0
( into the file ) show
335.9 440.7 moveto
12 f2
(file) show
351.2 440.7 moveto
12 f0
(. ) show
0 414.1 moveto
12 f0
(Unlike cbf_read_file, the ) show
125 414.1 moveto
12 f2
(file) show
140.3 414.1 moveto
12 f0
( does not have to be random-access. ) show
0 387.5 moveto
12 f0
(If the file is random-access and readable, ) show
199.9 387.5 moveto
12 f2
(readable) show
242.5 387.5 moveto
12 f0
( can be set to non-0 to indicate to CBFlib that the file) show
0 374.2 moveto
12 f0
(can be used as a buffer to conserve disk space. If the file is not random-access or not readable, ) show
455.5 374.2 moveto
12 f2
(readable) show
0 360.9 moveto
12 f0
(must be 0. ) show
0 334.3 moveto
12 f0
(If ) show
10.9 334.3 moveto
12 f2
(readable) show
53.5 334.3 moveto
12 f0
( is non-0, CBFlib will close the file when it is no longer required, otherwise this is the) show
0 321 moveto
12 f0
(responsibility of the program. ) show
0 294.4 moveto
12 f2
(ciforcbf) show
39 294.4 moveto
12 f0
( selects the format in which the binary sections are written: ) show
3.5 277.6 moveto
12 f0
(  CIF) show
36.3 277.6 moveto
12 f0
(  Write an imgCIF file. ) show
3.5 260.1 moveto
12 f0
(  CBF) show
36.3 260.1 moveto
12 f0
(  Write a CBF file \(default\). ) show
0 243.3 moveto
12 f2
(headers) show
37.9 243.3 moveto
12 f0
( selects the type of header used in CBF binary sections and selects whether message digests are) show
0 230 moveto
12 f0
(generated. The value of ) show
116.2 230 moveto
12 f2
(headers) show
154.1 230 moveto
12 f0
( can be a logical OR of any of: ) show
3.5 213.2 moveto
12 f0
(  MIME_HEADERS) show
125 213.2 moveto
12 f0
(  Use MIME-type headers \(default\). ) show
3.5 195.7 moveto
12 f0
(  MIME_NOHEADERS) show
125 195.7 moveto
12 f0
(  Use a simple ASCII headers. ) show
3.5 178.2 moveto
12 f0
(  MSG_DIGEST) show
125 178.2 moveto
12 f0
(  Generate message digests for binary data validation. ) show
3.5 160.7 moveto
12 f0
(  MSG_NODIGEST) show
125 160.7 moveto
12 f0
(  Do not generate message digests \(default\). ) show
0 143.9 moveto
12 f2
(encoding) show
43.9 143.9 moveto
12 f0
( selects the type of encoding used for binary sections and the type of line-termination in) show
0 130.6 moveto
12 f0
(imgCIF files. The value can be a logical OR of any of: ) show
3.5 113.8 moveto
12 f0
(  ENC_BASE64) show
113.6 113.8 moveto
12 f0
(  Use BASE64 encoding \(default\). ) show
3.5 96.3 moveto
12 f0
(  ENC_QP) show
113.6 96.3 moveto
12 f0
(  Use QUOTED-PRINTABLE encoding. ) show
3.5 78.8 moveto
12 f0
(  ENC_BASE8) show
113.6 78.8 moveto
12 f0
(  Use BASE8 \(octal\) encoding. ) show
pagelevel restore
showpage
%%Page: 10 10
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
3.5 709.2 moveto
12 f0
(  ENC_BASE10) show
113.6 709.2 moveto
12 f0
(  Use BASE10 \(decimal\) encoding. ) show
3.5 691.7 moveto
12 f0
(  ENC_BASE16) show
113.6 691.7 moveto
12 f0
(  Use BASE16 \(hexadecimal\) encoding. ) show
3.5 674.2 moveto
12 f0
(  ENC_FORWARD) show
113.6 674.2 moveto
12 f0
(  For BASE8, BASE10 or BASE16 encoding, map bytes to words forward) show
113.6 660.9 moveto
12 f0
(\(1234\) \(default on little-endian machines\). ) show
3.5 643.4 moveto
12 f0
(  ENC_BACKWARD) show
113.6 643.4 moveto
12 f0
(  Map bytes to words backward \(4321\) \(default on big-endian machines\). ) show
3.5 625.9 moveto
12 f0
(  ENC_CRTERM) show
113.6 625.9 moveto
12 f0
(  Terminate lines with CR. ) show
3.5 608.4 moveto
12 f0
(  ENC_LFTERM) show
113.6 608.4 moveto
12 f0
(  Terminate lines with LF \(default\). ) show
0 577.8 moveto
12 f1
(ARGUMENTS) show
3.5 561 moveto
12 f0
(  ) show
9.5 561 moveto
12 f2
(handle) show
57.6 561 moveto
12 f0
(  CBF handle.) show
3.5 543.5 moveto
12 f0
(  ) show
11.2 543.5 moveto
12 f2
(file) show
57.6 543.5 moveto
12 f0
(  Pointer to a file descriptor.) show
3.5 526 moveto
12 f0
(  ) show
9.5 526 moveto
12 f2
(readable) show
57.6 526 moveto
12 f0
(  If non-0: this file is random-access and readable and can be used as a buffer. ) show
3.5 508.5 moveto
12 f0
(  ) show
9.5 508.5 moveto
12 f2
(ciforcbf) show
57.6 508.5 moveto
12 f0
(  Selects the format in which the binary sections are written \(CIF/CBF\). ) show
3.5 491 moveto
12 f0
(  ) show
9.5 491 moveto
12 f2
(headers) show
57.6 491 moveto
12 f0
(  Selects the type of header in CBF binary sections and message digest generation. ) show
3.5 473.5 moveto
12 f0
(  ) show
9.5 473.5 moveto
12 f2
(encoding) show
57.6 473.5 moveto
12 f0
(  Selects the type of encoding used for binary sections and the type of line-termination in) show
57.6 460.2 moveto
12 f0
(imgCIF files. ) show
0 429.6 moveto
12 f1
(RETURN VALUE) show
95.6 429.6 moveto
12 f0
( ) show
0 403 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 375.9 moveto
12 f1
(SEE ALSO) show
58.3 375.9 moveto
12 f0
( ) show
0 349.3 moveto
12 f0
(2.3.3 cbf_read_file) show
0 326.9 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 295.6 moveto
12 f1
(2.3.5 cbf_new_datablock) show
0 268.5 moveto
12 f1
(PROTOTYPE) show
74.6 268.5 moveto
12 f0
( ) show
0 241.9 moveto
12 f0
(#include "cbf.h") show
0 215.3 moveto
12 f0
(int cbf_new_datablock \(cbf_handle ) show
172.9 215.3 moveto
12 f2
(handle) show
205.5 215.3 moveto
12 f0
(, const char *) show
269.4 215.3 moveto
12 f2
(datablockname) show
342.7 215.3 moveto
12 f0
(\); ) show
0 188.2 moveto
12 f1
(DESCRIPTION) show
83.3 188.2 moveto
12 f0
( ) show
0 161.6 moveto
12 f0
(cbf_new_datablock creates a new data block with name ) show
270.5 161.6 moveto
12 f2
(datablockname) show
343.8 161.6 moveto
12 f0
( and makes it the current data) show
0 148.3 moveto
12 f0
(block. ) show
0 121.7 moveto
12 f0
(If a data block with this name already exists, the existing data block becomes the current data block. ) show
0 94.6 moveto
12 f1
(ARGUMENTS) show
3.5 77.8 moveto
12 f0
(  ) show
9.5 77.8 moveto
12 f2
(handle) show
87 77.8 moveto
12 f0
(  CBF handle.) show
pagelevel restore
showpage
%%Page: 11 11
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
3.5 708.3 moveto
12 f0
(  ) show
9.5 708.3 moveto
12 f2
(datablockname) show
87 708.3 moveto
12 f0
(  The name of the new data block. ) show
0 677.7 moveto
12 f1
(RETURN VALUE) show
95.6 677.7 moveto
12 f0
( ) show
0 651.1 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 624 moveto
12 f1
(SEE ALSO) show
58.3 624 moveto
12 f0
( ) show
0 597.4 moveto
12 f0
(2.3.6 cbf_force_new_datablock) show
0 584.1 moveto
12 f0
(2.3.7 cbf_new_category) show
0 570.8 moveto
12 f0
(2.3.8 cbf_force_new_category) show
0 557.5 moveto
12 f0
(2.3.9 cbf_new_column) show
0 544.2 moveto
12 f0
(2.3.10 cbf_new_row) show
0 530.9 moveto
12 f0
(2.3.11 cbf_insert_row) show
0 517.6 moveto
12 f0
(2.3.12 cbf_set_datablockname) show
0 504.3 moveto
12 f0
(2.3.17 cbf_remove_datablock) show
0 481.9 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 450.6 moveto
12 f1
(2.3.6 cbf_force_new_data_block) show
0 423.5 moveto
12 f1
(PROTOTYPE) show
74.6 423.5 moveto
12 f0
( ) show
0 396.9 moveto
12 f0
(#include "cbf.h") show
0 370.3 moveto
12 f0
(int cbf_force_new_datablock \(cbf_handle ) show
203.6 370.3 moveto
12 f2
(handle) show
236.2 370.3 moveto
12 f0
(, const char *) show
300.1 370.3 moveto
12 f2
(datablockname) show
373.4 370.3 moveto
12 f0
(\); ) show
0 343.2 moveto
12 f1
(DESCRIPTION) show
83.3 343.2 moveto
12 f0
( ) show
0 316.6 moveto
12 f0
(cbf_force_new_datablock creates a new data block with name ) show
301.2 316.6 moveto
12 f2
(datablockname) show
374.5 316.6 moveto
12 f0
( and makes it the current) show
0 303.3 moveto
12 f0
(data block. Duplicate data block names are allowed. ) show
0 276.7 moveto
12 f0
(Even if a data block with this name already exists, a new data block is created and becomes the current) show
0 263.4 moveto
12 f0
(data block. ) show
0 236.3 moveto
12 f1
(ARGUMENTS) show
3.5 219.5 moveto
12 f0
(  ) show
9.5 219.5 moveto
12 f2
(handle) show
87 219.5 moveto
12 f0
(  CBF handle.) show
3.5 202 moveto
12 f0
(  ) show
9.5 202 moveto
12 f2
(datablockname) show
87 202 moveto
12 f0
(  The name of the new data block. ) show
0 171.4 moveto
12 f1
(RETURN VALUE) show
95.6 171.4 moveto
12 f0
( ) show
0 144.8 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 117.7 moveto
12 f1
(SEE ALSO) show
58.3 117.7 moveto
12 f0
( ) show
0 91.1 moveto
12 f0
(2.3.5 cbf_new_datablock) show
0 77.8 moveto
12 f0
(2.3.7 cbf_new_category) show
pagelevel restore
showpage
%%Page: 12 12
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(2.3.8 cbf_force_new_category) show
0 695.9 moveto
12 f0
(2.3.9 cbf_new_column) show
0 682.6 moveto
12 f0
(2.3.10 cbf_new_row) show
0 669.3 moveto
12 f0
(2.3.11 cbf_insert_row) show
0 656 moveto
12 f0
(2.3.12 cbf_set_datablockname) show
0 642.7 moveto
12 f0
(2.3.17 cbf_remove_datablock) show
0 620.3 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 589 moveto
12 f1
(2.3.7 cbf_new_category) show
0 561.9 moveto
12 f1
(PROTOTYPE) show
74.6 561.9 moveto
12 f0
( ) show
0 535.3 moveto
12 f0
(#include "cbf.h") show
0 508.7 moveto
12 f0
(int cbf_new_category \(cbf_handle ) show
167.6 508.7 moveto
12 f2
(handle) show
200.2 508.7 moveto
12 f0
(, const char *) show
264.1 508.7 moveto
12 f2
(categoryname) show
332 508.7 moveto
12 f0
(\); ) show
0 481.6 moveto
12 f1
(DESCRIPTION) show
83.3 481.6 moveto
12 f0
( ) show
0 455 moveto
12 f0
(cbf_new_category creates a new category in the current data block with name ) show
376.5 455 moveto
12 f2
(categoryname) show
444.4 455 moveto
12 f0
( and makes) show
0 441.7 moveto
12 f0
(it the current category. ) show
0 415.1 moveto
12 f0
(If a category with this name already exists, the existing category becomes the current category. ) show
0 388 moveto
12 f1
(ARGUMENTS) show
3.5 371.2 moveto
12 f0
(  ) show
9.5 371.2 moveto
12 f2
(handle) show
81.6 371.2 moveto
12 f0
(  CBF handle.) show
3.5 353.7 moveto
12 f0
(  ) show
9.5 353.7 moveto
12 f2
(categoryname) show
81.6 353.7 moveto
12 f0
(  The name of the new category. ) show
0 323.1 moveto
12 f1
(RETURN VALUE) show
95.6 323.1 moveto
12 f0
( ) show
0 296.5 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 269.4 moveto
12 f1
(SEE ALSO) show
58.3 269.4 moveto
12 f0
( ) show
0 242.8 moveto
12 f0
(2.3.5 cbf_new_datablock) show
0 229.5 moveto
12 f0
(2.3.6 cbf_force_new_datablock) show
0 216.2 moveto
12 f0
(2.3.8 cbf_force_new_category) show
0 202.9 moveto
12 f0
(2.3.9 cbf_new_column) show
0 189.6 moveto
12 f0
(2.3.10 cbf_new_row) show
0 176.3 moveto
12 f0
(2.3.11 cbf_insert_row) show
0 163 moveto
12 f0
(2.3.18 cbf_remove_category) show
0 140.6 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 109.3 moveto
12 f1
(2.3.8 cbf_force_new_category) show
151.6 109.3 moveto
12 f1
( ) show
0 82.2 moveto
12 f1
(PROTOTYPE) show
74.6 82.2 moveto
12 f0
( ) show
pagelevel restore
showpage
%%Page: 13 13
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 703.6 moveto
12 f0
(#include "cbf.h") show
0 677 moveto
12 f0
(int cbf_force_new_category \(cbf_handle ) show
198.2 677 moveto
12 f2
(handle) show
230.8 677 moveto
12 f0
(, const char *) show
294.7 677 moveto
12 f2
(categoryname) show
362.6 677 moveto
12 f0
(\); ) show
0 649.9 moveto
12 f1
(DESCRIPTION) show
83.3 649.9 moveto
12 f0
( ) show
0 623.3 moveto
12 f0
(cbf_force_new_category creates a new category in the current data block with name ) show
407.1 623.3 moveto
12 f2
(categoryname) show
475 623.3 moveto
12 f0
( and) show
0 610 moveto
12 f0
(makes it the current category. Duplicate category names are allowed. ) show
0 583.4 moveto
12 f0
(Even if a category with this name already exists, a new category of the same name is created and) show
0 570.1 moveto
12 f0
(becomes the current category. The allows for the creation of unlooped tag/value lists drawn from the) show
0 556.8 moveto
12 f0
(same category. ) show
0 529.7 moveto
12 f1
(ARGUMENTS) show
3.5 512.9 moveto
12 f0
(  ) show
9.5 512.9 moveto
12 f2
(handle) show
81.6 512.9 moveto
12 f0
(  CBF handle.) show
3.5 495.4 moveto
12 f0
(  ) show
9.5 495.4 moveto
12 f2
(categoryname) show
81.6 495.4 moveto
12 f0
(  The name of the new category. ) show
0 464.8 moveto
12 f1
(RETURN VALUE) show
95.6 464.8 moveto
12 f0
( ) show
0 438.2 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 411.1 moveto
12 f1
(SEE ALSO) show
58.3 411.1 moveto
12 f0
( ) show
0 384.5 moveto
12 f0
(2.3.5 cbf_new_datablock) show
0 371.2 moveto
12 f0
(2.3.6 cbf_force_new_datablock) show
0 357.9 moveto
12 f0
(2.3.7 cbf_new_category) show
0 344.6 moveto
12 f0
(2.3.9 cbf_new_column) show
0 331.3 moveto
12 f0
(2.3.10 cbf_new_row) show
0 318 moveto
12 f0
(2.3.11 cbf_insert_row) show
0 304.7 moveto
12 f0
(2.3.18 cbf_remove_category) show
0 282.3 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 251 moveto
12 f1
(2.3.9 cbf_new_column) show
0 223.9 moveto
12 f1
(PROTOTYPE) show
74.6 223.9 moveto
12 f0
( ) show
0 197.3 moveto
12 f0
(#include "cbf.h") show
0 170.7 moveto
12 f0
(int cbf_new_column \(cbf_handle ) show
162.3 170.7 moveto
12 f2
(handle) show
194.9 170.7 moveto
12 f0
(, const char *) show
258.8 170.7 moveto
12 f2
(columnname) show
320.1 170.7 moveto
12 f0
(\); ) show
0 143.6 moveto
12 f1
(DESCRIPTION) show
83.3 143.6 moveto
12 f0
( ) show
0 117 moveto
12 f0
(cbf_new_column creates a new column in the current category with name ) show
357.5 117 moveto
12 f2
(columnname) show
418.8 117 moveto
12 f0
( and makes it the) show
0 103.7 moveto
12 f0
(current column. ) show
0 77.1 moveto
12 f0
(If a column with this name already exists, the existing column becomes the current category. ) show
pagelevel restore
showpage
%%Page: 14 14
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 698 moveto
12 f1
(ARGUMENTS) show
3.5 681.2 moveto
12 f0
(  ) show
9.5 681.2 moveto
12 f2
(handle) show
75 681.2 moveto
12 f0
(  CBF handle.) show
3.5 663.7 moveto
12 f0
(  ) show
9.5 663.7 moveto
12 f2
(columnname) show
75 663.7 moveto
12 f0
(  The name of the new column.) show
0 633.1 moveto
12 f1
(RETURN VALUE) show
95.6 633.1 moveto
12 f0
( ) show
0 606.5 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 579.4 moveto
12 f1
(SEE ALSO) show
58.3 579.4 moveto
12 f0
( ) show
0 552.8 moveto
12 f0
(2.3.5 cbf_new_datablock) show
0 539.5 moveto
12 f0
(2.3.6 cbf_force_new_datablock) show
0 526.2 moveto
12 f0
(2.3.7 cbf_new_category) show
0 512.9 moveto
12 f0
(2.3.8 cbf_force_new_category) show
0 499.6 moveto
12 f0
(2.3.10 cbf_new_row) show
0 486.3 moveto
12 f0
(2.3.11 cbf_insert_row) show
0 473 moveto
12 f0
(2.3.19 cbf_remove_column) show
0 450.6 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 419.3 moveto
12 f1
(2.3.10 cbf_new_row) show
0 392.2 moveto
12 f1
(PROTOTYPE) show
74.6 392.2 moveto
12 f0
( ) show
0 365.6 moveto
12 f0
(#include "cbf.h") show
0 339 moveto
12 f0
(int cbf_new_row \(cbf_handle ) show
144.9 339 moveto
12 f2
(handle) show
177.5 339 moveto
12 f0
(\); ) show
0 311.9 moveto
12 f1
(DESCRIPTION) show
83.3 311.9 moveto
12 f0
( ) show
0 285.3 moveto
12 f0
(cbf_new_row adds a new row to the current category and makes it the current row. ) show
0 258.2 moveto
12 f1
(ARGUMENTS) show
3.5 241.4 moveto
12 f0
(  ) show
9.5 241.4 moveto
12 f2
(handle) show
46.3 241.4 moveto
12 f0
(  CBF handle.) show
0 210.8 moveto
12 f1
(RETURN VALUE) show
95.6 210.8 moveto
12 f0
( ) show
0 184.2 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 157.1 moveto
12 f1
(SEE ALSO) show
58.3 157.1 moveto
12 f0
( ) show
0 130.5 moveto
12 f0
(2.3.5 cbf_new_datablock) show
0 117.2 moveto
12 f0
(2.3.6 cbf_force_new_datablock) show
0 103.9 moveto
12 f0
(2.3.7 cbf_new_category) show
0 90.6 moveto
12 f0
(2.3.8 cbf_force_new_category) show
0 77.3 moveto
12 f0
(2.3.9 cbf_new_column) show
pagelevel restore
showpage
%%Page: 15 15
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(2.3.11 cbf_insert_row) show
0 695.9 moveto
12 f0
(2.3.12 cbf_delete_row) show
0 682.6 moveto
12 f0
(2.3.20 cbf_remove_row) show
0 660.2 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 628.9 moveto
12 f1
(2.3.11 cbf_insert_row) show
0 601.8 moveto
12 f1
(PROTOTYPE) show
74.6 601.8 moveto
12 f0
( ) show
0 575.2 moveto
12 f0
(#include "cbf.h") show
0 548.6 moveto
12 f0
(int cbf_insert_row \(cbf_handle ) show
151.6 548.6 moveto
12 f2
(handle) show
184.2 548.6 moveto
12 f0
(, unsigned int ) show
252.2 548.6 moveto
12 f2
(rownumber) show
307.8 548.6 moveto
12 f0
(\); ) show
0 521.5 moveto
12 f1
(DESCRIPTION) show
83.3 521.5 moveto
12 f0
( ) show
0 494.9 moveto
12 f0
(cbf_insert_row adds a new row to the current category. The new row is inserted as row ) show
420.8 494.9 moveto
12 f2
(rownumber) show
476.4 494.9 moveto
12 f0
( and) show
0 481.6 moveto
12 f0
(existing rows starting from ) show
132.6 481.6 moveto
12 f2
(rownumber) show
188.2 481.6 moveto
12 f0
( are moved up by 1. The new row becomes the current row. ) show
0 455 moveto
12 f0
(If the category has fewer than ) show
145.9 455 moveto
12 f2
(rownumber) show
201.5 455 moveto
12 f0
( rows, the function returns CBF_NOTFOUND. ) show
0 428.4 moveto
12 f0
(The row numbers start from 0. ) show
0 401.3 moveto
12 f1
(ARGUMENTS) show
3.5 384.5 moveto
12 f0
(  ) show
9.5 384.5 moveto
12 f2
(handle) show
69.3 384.5 moveto
12 f0
(  CBF handle.) show
3.5 367 moveto
12 f0
(  ) show
9.5 367 moveto
12 f2
(rownumber) show
69.3 367 moveto
12 f0
(  The row number of the new row.) show
0 336.4 moveto
12 f1
(RETURN VALUE) show
95.6 336.4 moveto
12 f0
( ) show
0 309.8 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 282.7 moveto
12 f1
(SEE ALSO) show
58.3 282.7 moveto
12 f0
( ) show
0 256.1 moveto
12 f0
(2.3.5 cbf_new_datablock) show
0 242.8 moveto
12 f0
(2.3.6 cbf_force_new_datablock) show
0 229.5 moveto
12 f0
(2.3.7 cbf_new_category) show
0 216.2 moveto
12 f0
(2.3.8 cbf_force_new_category) show
0 202.9 moveto
12 f0
(2.3.9 cbf_new_column) show
0 189.6 moveto
12 f0
(2.3.10 cbf_new_row) show
0 176.3 moveto
12 f0
(2.3.12 cbf_delete_row) show
0 163 moveto
12 f0
(2.3.20 cbf_remove_row) show
0 140.6 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 109.3 moveto
12 f1
(2.3.12 cbf_delete_row) show
0 82.2 moveto
12 f1
(PROTOTYPE) show
74.6 82.2 moveto
12 f0
( ) show
pagelevel restore
showpage
%%Page: 16 16
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 703.6 moveto
12 f0
(#include "cbf.h") show
0 677 moveto
12 f0
(int cbf_delete_row \(cbf_handle ) show
153.6 677 moveto
12 f2
(handle) show
186.2 677 moveto
12 f0
(, unsigned int ) show
254.2 677 moveto
12 f2
(rownumber) show
309.8 677 moveto
12 f0
(\); ) show
0 649.9 moveto
12 f1
(DESCRIPTION) show
83.3 649.9 moveto
12 f0
( ) show
0 623.3 moveto
12 f0
(cbf_delete_row deletes a row from the current category. Rows starting from ) show
367.9 623.3 moveto
12 f2
(rownumber) show
423.5 623.3 moveto
12 f0
( +1 are moved) show
0 610 moveto
12 f0
(down by 1. If the current row was higher than ) show
222.9 610 moveto
12 f2
(rownumber) show
278.5 610 moveto
12 f0
(, or if the current row is the last row, it will) show
0 596.7 moveto
12 f0
(also move down by 1. ) show
0 570.1 moveto
12 f0
(The row numbers start from 0. ) show
0 543 moveto
12 f1
(ARGUMENTS) show
3.5 526.2 moveto
12 f0
(  ) show
9.5 526.2 moveto
12 f2
(handle) show
69.3 526.2 moveto
12 f0
(  CBF handle.) show
3.5 508.7 moveto
12 f0
(  ) show
9.5 508.7 moveto
12 f2
(rownumber) show
69.3 508.7 moveto
12 f0
(  The number of the row to delete.) show
0 478.1 moveto
12 f1
(RETURN VALUE) show
95.6 478.1 moveto
12 f0
( ) show
0 451.5 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 424.4 moveto
12 f1
(SEE ALSO) show
58.3 424.4 moveto
12 f0
( ) show
0 397.8 moveto
12 f0
(2.3.10 cbf_new_row) show
0 384.5 moveto
12 f0
(2.3.11 cbf_insert_row) show
0 371.2 moveto
12 f0
(2.3.17 cbf_remove_datablock) show
0 357.9 moveto
12 f0
(2.3.18 cbf_remove_category) show
0 344.6 moveto
12 f0
(2.3.19 cbf_remove_column) show
0 331.3 moveto
12 f0
(2.3.20 cbf_remove_row) show
0 308.9 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 277.6 moveto
12 f1
(2.3.13 cbf_set_datablockname) show
0 250.5 moveto
12 f1
(PROTOTYPE) show
74.6 250.5 moveto
12 f0
( ) show
0 223.9 moveto
12 f0
(#include "cbf.h") show
0 197.3 moveto
12 f0
(int cbf_set_datablockname \(cbf_handle ) show
192.2 197.3 moveto
12 f2
(handle) show
224.8 197.3 moveto
12 f0
(, const char *) show
288.7 197.3 moveto
12 f2
(datablockname) show
362 197.3 moveto
12 f0
(\); ) show
0 170.2 moveto
12 f1
(DESCRIPTION) show
83.3 170.2 moveto
12 f0
( ) show
0 143.6 moveto
12 f0
(cbf_set_datablockname changes the name of the current data block to ) show
337.2 143.6 moveto
12 f2
(datablockname) show
410.5 143.6 moveto
12 f0
(. ) show
0 117 moveto
12 f0
(If a data block with this name already exists \(comparison is case-insensitive\), the function returns) show
0 103.7 moveto
12 f0
(CBF_IDENTICAL. ) show
0 76.6 moveto
12 f1
(ARGUMENTS) show
pagelevel restore
showpage
%%Page: 17 17
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
3.5 707.8 moveto
12 f0
(  ) show
9.5 707.8 moveto
12 f2
(handle) show
87 707.8 moveto
12 f0
(  CBF handle.) show
3.5 690.3 moveto
12 f0
(  ) show
9.5 690.3 moveto
12 f2
(datablockname) show
87 690.3 moveto
12 f0
(  The new data block name.) show
0 659.7 moveto
12 f1
(RETURN VALUE) show
95.6 659.7 moveto
12 f0
( ) show
0 633.1 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 606 moveto
12 f1
(SEE ALSO) show
58.3 606 moveto
12 f0
( ) show
0 579.4 moveto
12 f0
(2.3.5 cbf_new_datablock) show
0 566.1 moveto
12 f0
(2.3.14 cbf_reset_datablocks) show
0 552.8 moveto
12 f0
(2.3.15 cbf_reset_datablock) show
0 539.5 moveto
12 f0
(2.3.17 cbf_remove_datablock) show
0 526.2 moveto
12 f0
(2.3.42 cbf_datablock_name) show
0 503.8 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 472.5 moveto
12 f1
(2.3.14 cbf_reset_datablocks) show
0 445.4 moveto
12 f1
(PROTOTYPE) show
74.6 445.4 moveto
12 f0
( ) show
0 418.8 moveto
12 f0
(#include "cbf.h") show
0 392.2 moveto
12 f0
(int cbf_reset_datablocks \(cbf_handle ) show
180.2 392.2 moveto
12 f2
(handle) show
212.8 392.2 moveto
12 f0
(\); ) show
0 365.1 moveto
12 f1
(DESCRIPTION) show
83.3 365.1 moveto
12 f0
( ) show
0 338.5 moveto
12 f0
(cbf_reset_datablocks deletes all categories from all data blocks. ) show
0 311.9 moveto
12 f0
(The current data block does not change. ) show
0 284.8 moveto
12 f1
(ARGUMENTS) show
3.5 268 moveto
12 f0
(  ) show
9.5 268 moveto
12 f2
(handle) show
46.3 268 moveto
12 f0
(  CBF handle.) show
0 237.4 moveto
12 f1
(RETURN VALUE) show
95.6 237.4 moveto
12 f0
( ) show
0 210.8 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 183.7 moveto
12 f1
(SEE ALSO) show
58.3 183.7 moveto
12 f0
( ) show
0 157.1 moveto
12 f0
(2.3.15 cbf_reset_datablock) show
0 143.8 moveto
12 f0
(2.3.18 cbf_remove_category) show
0 121.4 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 90.1 moveto
12 f1
(2.3.15 cbf_reset_datablock) show
pagelevel restore
showpage
%%Page: 18 18
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 708.7 moveto
12 f1
(PROTOTYPE) show
74.6 708.7 moveto
12 f0
( ) show
0 682.1 moveto
12 f0
(#include "cbf.h") show
0 655.5 moveto
12 f0
(int cbf_reset_datablock \(cbf_handle ) show
175.6 655.5 moveto
12 f2
(handle) show
208.2 655.5 moveto
12 f0
(\); ) show
0 628.4 moveto
12 f1
(DESCRIPTION) show
83.3 628.4 moveto
12 f0
( ) show
0 601.8 moveto
12 f0
(cbf_reset_datablock deletes all categories from the current data block. ) show
0 574.7 moveto
12 f1
(ARGUMENTS) show
3.5 557.9 moveto
12 f0
(  ) show
9.5 557.9 moveto
12 f2
(handle) show
46.3 557.9 moveto
12 f0
(  CBF handle.) show
0 527.3 moveto
12 f1
(RETURN VALUE) show
95.6 527.3 moveto
12 f0
( ) show
0 500.7 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 473.6 moveto
12 f1
(SEE ALSO) show
58.3 473.6 moveto
12 f0
( ) show
0 447 moveto
12 f0
(2.3.14 cbf_reset_datablocks) show
0 433.7 moveto
12 f0
(2.3.18 cbf_remove_category) show
0 411.3 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 380 moveto
12 f1
(2.3.16 cbf_reset_category) show
0 352.9 moveto
12 f1
(PROTOTYPE) show
74.6 352.9 moveto
12 f0
( ) show
0 326.3 moveto
12 f0
(#include "cbf.h") show
0 299.7 moveto
12 f0
(int cbf_reset_category \(cbf_handle ) show
170.2 299.7 moveto
12 f2
(handle) show
202.8 299.7 moveto
12 f0
(\); ) show
0 272.6 moveto
12 f1
(DESCRIPTION) show
83.3 272.6 moveto
12 f0
( ) show
0 246 moveto
12 f0
(cbf_reset_category deletes all columns and rows from current category. ) show
0 218.9 moveto
12 f1
(ARGUMENTS) show
3.5 202.1 moveto
12 f0
(  ) show
9.5 202.1 moveto
12 f2
(handle) show
46.3 202.1 moveto
12 f0
(  CBF handle.) show
0 171.5 moveto
12 f1
(RETURN VALUE) show
95.6 171.5 moveto
12 f0
( ) show
0 144.9 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 117.8 moveto
12 f1
(SEE ALSO) show
58.3 117.8 moveto
12 f0
( ) show
0 91.2 moveto
12 f0
(2.3.16 cbf_reset_category) show
0 77.9 moveto
12 f0
(2.3.19 cbf_remove_column) show
pagelevel restore
showpage
%%Page: 19 19
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(2.3.20 cbf_remove_row) show
0 686.8 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 655.5 moveto
12 f1
(2.3.17 cbf_remove_datablock) show
0 628.4 moveto
12 f1
(PROTOTYPE) show
74.6 628.4 moveto
12 f0
( ) show
0 601.8 moveto
12 f0
(#include "cbf.h") show
0 575.2 moveto
12 f0
(int cbf_remove_datablock \(cbf_handle ) show
188.9 575.2 moveto
12 f2
(handle) show
221.5 575.2 moveto
12 f0
(\); ) show
0 548.1 moveto
12 f1
(DESCRIPTION) show
83.3 548.1 moveto
12 f0
( ) show
0 521.5 moveto
12 f0
(cbf_remove_datablock deletes the current data block. ) show
0 494.9 moveto
12 f0
(The current data block becomes undefined. ) show
0 467.8 moveto
12 f1
(ARGUMENTS) show
3.5 451 moveto
12 f0
(  ) show
9.5 451 moveto
12 f2
(handle) show
46.3 451 moveto
12 f0
(  CBF handle.) show
0 420.4 moveto
12 f1
(RETURN VALUE) show
95.6 420.4 moveto
12 f0
( ) show
0 393.8 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 366.7 moveto
12 f1
(SEE ALSO) show
58.3 366.7 moveto
12 f0
( ) show
0 340.1 moveto
12 f0
(2.3.5 cbf_new_datablock) show
0 326.8 moveto
12 f0
(2.3.6 cbf_force_new_datablock) show
0 313.5 moveto
12 f0
(2.3.18 cbf_remove_category) show
0 300.2 moveto
12 f0
(2.3.19 cbf_remove_column) show
0 286.9 moveto
12 f0
(2.3.20 cbf_remove_row) show
0 264.5 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 233.2 moveto
12 f1
(2.3.18 cbf_remove_category) show
0 206.1 moveto
12 f1
(PROTOTYPE) show
74.6 206.1 moveto
12 f0
( ) show
0 179.5 moveto
12 f0
(#include "cbf.h") show
0 152.9 moveto
12 f0
(int cbf_remove_category \(cbf_handle ) show
183.6 152.9 moveto
12 f2
(handle) show
216.2 152.9 moveto
12 f0
(\); ) show
0 125.8 moveto
12 f1
(DESCRIPTION) show
83.3 125.8 moveto
12 f0
( ) show
0 99.2 moveto
12 f0
(cbf_remove_category deletes the current category. ) show
pagelevel restore
showpage
%%Page: 20 20
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(The current category becomes undefined. ) show
0 682.1 moveto
12 f1
(ARGUMENTS) show
3.5 665.3 moveto
12 f0
(  ) show
9.5 665.3 moveto
12 f2
(handle) show
46.3 665.3 moveto
12 f0
(  CBF handle.) show
0 634.7 moveto
12 f1
(RETURN VALUE) show
95.6 634.7 moveto
12 f0
( ) show
0 608.1 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 581 moveto
12 f1
(SEE ALSO) show
58.3 581 moveto
12 f0
( ) show
0 554.4 moveto
12 f0
(2.3.7 cbf_new_category) show
0 541.1 moveto
12 f0
(2.3.8 cbf_force_new_category) show
0 527.8 moveto
12 f0
(2.3.17 cbf_remove_datablock) show
0 514.5 moveto
12 f0
(2.3.19 cbf_remove_column) show
0 501.2 moveto
12 f0
(2.3.20 cbf_remove_row) show
0 478.8 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 447.5 moveto
12 f1
(2.3.19 cbf_remove_column) show
0 420.4 moveto
12 f1
(PROTOTYPE) show
74.6 420.4 moveto
12 f0
( ) show
0 393.8 moveto
12 f0
(#include "cbf.h") show
0 367.2 moveto
12 f0
(int cbf_remove_column \(cbf_handle ) show
178.2 367.2 moveto
12 f2
(handle) show
210.8 367.2 moveto
12 f0
(\); ) show
0 340.1 moveto
12 f1
(DESCRIPTION) show
83.3 340.1 moveto
12 f0
( ) show
0 313.5 moveto
12 f0
(cbf_remove_column deletes the current column. ) show
0 286.9 moveto
12 f0
(The current column becomes undefined. ) show
0 259.8 moveto
12 f1
(ARGUMENTS) show
3.5 243 moveto
12 f0
(  ) show
9.5 243 moveto
12 f2
(handle) show
46.3 243 moveto
12 f0
(  CBF handle.) show
0 212.4 moveto
12 f1
(RETURN VALUE) show
95.6 212.4 moveto
12 f0
( ) show
0 185.8 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 158.7 moveto
12 f1
(SEE ALSO) show
58.3 158.7 moveto
12 f0
( ) show
0 132.1 moveto
12 f0
(2.3.9 cbf_new_column) show
0 118.8 moveto
12 f0
(2.3.17 cbf_remove_datablock) show
0 105.5 moveto
12 f0
(2.3.18 cbf_remove_category) show
0 92.2 moveto
12 f0
(2.3.20 cbf_remove_row) show
pagelevel restore
showpage
%%Page: 21 21
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 717.8 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 686.5 moveto
12 f1
(2.3.20 cbf_remove_row) show
0 659.4 moveto
12 f1
(PROTOTYPE) show
74.6 659.4 moveto
12 f0
( ) show
0 632.8 moveto
12 f0
(#include "cbf.h") show
0 606.2 moveto
12 f0
(int cbf_remove_row \(cbf_handle ) show
160.9 606.2 moveto
12 f2
(handle) show
193.5 606.2 moveto
12 f0
(\); ) show
0 579.1 moveto
12 f1
(DESCRIPTION) show
83.3 579.1 moveto
12 f0
( ) show
0 552.5 moveto
12 f0
(cbf_remove_row deletes the current row in the current category. ) show
0 525.9 moveto
12 f0
(If the current row was the last row, it will move down by 1, otherwise, it will remain the same. ) show
0 498.8 moveto
12 f1
(ARGUMENTS) show
3.5 482 moveto
12 f0
(  ) show
9.5 482 moveto
12 f2
(handle) show
46.3 482 moveto
12 f0
(  CBF handle.) show
0 451.4 moveto
12 f1
(RETURN VALUE) show
95.6 451.4 moveto
12 f0
( ) show
0 424.8 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 397.7 moveto
12 f1
(SEE ALSO) show
58.3 397.7 moveto
12 f0
( ) show
0 371.1 moveto
12 f0
(2.3.10 cbf_new_row) show
0 357.8 moveto
12 f0
(2.3.11 cbf_insert_row) show
0 344.5 moveto
12 f0
(2.3.17 cbf_remove_datablock) show
0 331.2 moveto
12 f0
(2.3.18 cbf_remove_category) show
0 317.9 moveto
12 f0
(2.3.19 cbf_remove_column) show
0 304.6 moveto
12 f0
(2.3.12 cbf_delete_row) show
0 282.2 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 250.9 moveto
12 f1
(2.3.21 cbf_rewind_datablock) show
0 223.8 moveto
12 f1
(PROTOTYPE) show
74.6 223.8 moveto
12 f0
( ) show
0 197.2 moveto
12 f0
(#include "cbf.h") show
0 170.6 moveto
12 f0
(int cbf_rewind_datablock \(cbf_handle ) show
186.2 170.6 moveto
12 f2
(handle) show
218.8 170.6 moveto
12 f0
(\); ) show
0 143.5 moveto
12 f1
(DESCRIPTION) show
83.3 143.5 moveto
12 f0
( ) show
0 116.9 moveto
12 f0
(cbf_rewind_datablock makes the first data block the current data block. ) show
0 90.3 moveto
12 f0
(If there are no data blocks, the function returns CBF_NOTFOUND. ) show
pagelevel restore
showpage
%%Page: 22 22
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(The current category becomes undefined. ) show
0 682.1 moveto
12 f1
(ARGUMENTS) show
3.5 665.3 moveto
12 f0
(  ) show
9.5 665.3 moveto
12 f2
(handle) show
46.3 665.3 moveto
12 f0
(  CBF handle.) show
0 634.7 moveto
12 f1
(RETURN VALUE) show
95.6 634.7 moveto
12 f0
( ) show
0 608.1 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 581 moveto
12 f1
(SEE ALSO) show
58.3 581 moveto
12 f0
( ) show
0 554.4 moveto
12 f0
(2.3.22 cbf_rewind_category) show
0 541.1 moveto
12 f0
(2.3.19 cbf_rewind_column) show
0 527.8 moveto
12 f0
(2.3.24 cbf_rewind_row) show
0 514.5 moveto
12 f0
(2.3.25 cbf_next_datablock) show
0 492.1 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 460.8 moveto
12 f1
(2.3.22 cbf_rewind_category) show
0 433.7 moveto
12 f1
(PROTOTYPE) show
74.6 433.7 moveto
12 f0
( ) show
0 407.1 moveto
12 f0
(#include "cbf.h") show
0 380.5 moveto
12 f0
(int cbf_rewind_category \(cbf_handle ) show
180.9 380.5 moveto
12 f2
(handle) show
213.5 380.5 moveto
12 f0
(\); ) show
0 353.4 moveto
12 f1
(DESCRIPTION) show
83.3 353.4 moveto
12 f0
( ) show
0 326.8 moveto
12 f0
(cbf_rewind_category makes the first category in the current data block the current category. ) show
0 300.2 moveto
12 f0
(If there are no categories, the function returns CBF_NOTFOUND. ) show
0 273.6 moveto
12 f0
(The current column and row become undefined. ) show
0 246.5 moveto
12 f1
(ARGUMENTS) show
3.5 229.7 moveto
12 f0
(  ) show
9.5 229.7 moveto
12 f2
(handle) show
46.3 229.7 moveto
12 f0
(  CBF handle.) show
0 199.1 moveto
12 f1
(RETURN VALUE) show
95.6 199.1 moveto
12 f0
( ) show
0 172.5 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 145.4 moveto
12 f1
(SEE ALSO) show
58.3 145.4 moveto
12 f0
( ) show
0 118.8 moveto
12 f0
(2.3.21 cbf_rewind_datablock) show
0 105.5 moveto
12 f0
(2.3.19 cbf_rewind_column) show
0 92.2 moveto
12 f0
(2.3.24 cbf_rewind_row) show
0 78.9 moveto
12 f0
(2.3.26 cbf_next_category) show
pagelevel restore
showpage
%%Page: 23 23
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 704.5 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 673.2 moveto
12 f1
(2.3.23 cbf_rewind_column) show
0 646.1 moveto
12 f1
(PROTOTYPE) show
74.6 646.1 moveto
12 f0
( ) show
0 619.5 moveto
12 f0
(#include "cbf.h") show
0 592.9 moveto
12 f0
(int cbf_rewind_column \(cbf_handle ) show
175.6 592.9 moveto
12 f2
(handle) show
208.2 592.9 moveto
12 f0
(\); ) show
0 565.8 moveto
12 f1
(DESCRIPTION) show
83.3 565.8 moveto
12 f0
( ) show
0 539.2 moveto
12 f0
(cbf_rewind_column makes the first column in the current category the current column. ) show
0 512.6 moveto
12 f0
(If there are no columns, the function returns CBF_NOTFOUND. ) show
0 486 moveto
12 f0
(The current row is not affected. ) show
0 458.9 moveto
12 f1
(ARGUMENTS) show
3.5 442.1 moveto
12 f0
(  ) show
9.5 442.1 moveto
12 f2
(handle) show
46.3 442.1 moveto
12 f0
(  CBF handle.) show
0 411.5 moveto
12 f1
(RETURN VALUE) show
95.6 411.5 moveto
12 f0
( ) show
0 384.9 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 357.8 moveto
12 f1
(SEE ALSO) show
58.3 357.8 moveto
12 f0
( ) show
0 331.2 moveto
12 f0
(2.3.21 cbf_rewind_datablock) show
0 317.9 moveto
12 f0
(2.3.22 cbf_rewind_category) show
0 304.6 moveto
12 f0
(2.3.24 cbf_rewind_row) show
0 291.3 moveto
12 f0
(2.3.27 cbf_next_column) show
0 268.9 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 237.6 moveto
12 f1
(2.3.24 cbf_rewind_row) show
0 210.5 moveto
12 f1
(PROTOTYPE) show
74.6 210.5 moveto
12 f0
( ) show
0 183.9 moveto
12 f0
(#include "cbf.h") show
0 157.3 moveto
12 f0
(int cbf_rewind_row \(cbf_handle ) show
158.2 157.3 moveto
12 f2
(handle) show
190.8 157.3 moveto
12 f0
(\); ) show
0 130.2 moveto
12 f1
(DESCRIPTION) show
83.3 130.2 moveto
12 f0
( ) show
0 103.6 moveto
12 f0
(cbf_rewind_row makes the first row in the current category the current row. ) show
0 77 moveto
12 f0
(If there are no rows, the function returns CBF_NOTFOUND. ) show
pagelevel restore
showpage
%%Page: 24 24
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 698.4 moveto
12 f0
(The current column is not affected. ) show
0 671.3 moveto
12 f1
(ARGUMENTS) show
3.5 654.5 moveto
12 f0
(  ) show
9.5 654.5 moveto
12 f2
(handle) show
46.3 654.5 moveto
12 f0
(  CBF handle.) show
0 623.9 moveto
12 f1
(RETURN VALUE) show
95.6 623.9 moveto
12 f0
( ) show
0 597.3 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 570.2 moveto
12 f1
(SEE ALSO) show
58.3 570.2 moveto
12 f0
( ) show
0 543.6 moveto
12 f0
(2.3.21 cbf_rewind_datablock) show
0 530.3 moveto
12 f0
(2.3.22 cbf_rewind_category) show
0 517 moveto
12 f0
(2.3.19 cbf_rewind_column) show
0 503.7 moveto
12 f0
(2.3.28 cbf_next_row) show
0 481.3 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 450 moveto
12 f1
(2.3.25 cbf_next_datablock) show
0 422.9 moveto
12 f1
(PROTOTYPE) show
74.6 422.9 moveto
12 f0
( ) show
0 396.3 moveto
12 f0
(#include "cbf.h") show
0 369.7 moveto
12 f0
(int cbf_next_datablock \(cbf_handle ) show
173.6 369.7 moveto
12 f2
(handle) show
206.2 369.7 moveto
12 f0
(\); ) show
0 342.6 moveto
12 f1
(DESCRIPTION) show
83.3 342.6 moveto
12 f0
( ) show
0 316 moveto
12 f0
(cbf_next_datablock makes the data block following the current data block the current data block. ) show
0 289.4 moveto
12 f0
(If there are no more data blocks, the function returns CBF_NOTFOUND. ) show
0 262.8 moveto
12 f0
(The current category becomes undefined. ) show
0 235.7 moveto
12 f1
(ARGUMENTS) show
3.5 218.9 moveto
12 f0
(  ) show
9.5 218.9 moveto
12 f2
(handle) show
46.3 218.9 moveto
12 f0
(  CBF handle.) show
0 188.3 moveto
12 f1
(RETURN VALUE) show
95.6 188.3 moveto
12 f0
( ) show
0 161.7 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 134.6 moveto
12 f1
(SEE ALSO) show
58.3 134.6 moveto
12 f0
( ) show
0 108 moveto
12 f0
(2.3.21 cbf_rewind_datablock) show
0 94.7 moveto
12 f0
(2.3.26 cbf_next_category) show
0 81.4 moveto
12 f0
(2.3.27 cbf_next_column) show
pagelevel restore
showpage
%%Page: 25 25
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(2.3.28 cbf_next_row) show
0 686.8 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 655.5 moveto
12 f1
(2.3.26 cbf_next_category) show
0 628.4 moveto
12 f1
(PROTOTYPE) show
74.6 628.4 moveto
12 f0
( ) show
0 601.8 moveto
12 f0
(#include "cbf.h") show
0 575.2 moveto
12 f0
(int cbf_next_category \(cbf_handle ) show
168.2 575.2 moveto
12 f2
(handle) show
200.8 575.2 moveto
12 f0
(\); ) show
0 548.1 moveto
12 f1
(DESCRIPTION) show
83.3 548.1 moveto
12 f0
( ) show
0 521.5 moveto
12 f0
(cbf_next_category makes the category following the current category in the current data block the) show
0 508.2 moveto
12 f0
(current category. ) show
0 481.6 moveto
12 f0
(If there are no more categories, the function returns CBF_NOTFOUND. ) show
0 455 moveto
12 f0
(The current column and row become undefined. ) show
0 427.9 moveto
12 f1
(ARGUMENTS) show
3.5 411.1 moveto
12 f0
(  ) show
9.5 411.1 moveto
12 f2
(handle) show
46.3 411.1 moveto
12 f0
(  CBF handle.) show
0 380.5 moveto
12 f1
(RETURN VALUE) show
95.6 380.5 moveto
12 f0
( ) show
0 353.9 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 326.8 moveto
12 f1
(SEE ALSO) show
58.3 326.8 moveto
12 f0
( ) show
0 300.2 moveto
12 f0
(2.3.22 cbf_rewind_category) show
0 286.9 moveto
12 f0
(2.3.25 cbf_next_datablock) show
0 273.6 moveto
12 f0
(2.3.27 cbf_next_column) show
0 260.3 moveto
12 f0
(2.3.27 cbf_next_row) show
0 237.9 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 206.6 moveto
12 f1
(2.3.27 cbf_next_column) show
0 179.5 moveto
12 f1
(PROTOTYPE) show
74.6 179.5 moveto
12 f0
( ) show
0 152.9 moveto
12 f0
(#include "cbf.h") show
0 126.3 moveto
12 f0
(int cbf_next_column \(cbf_handle ) show
162.9 126.3 moveto
12 f2
(handle) show
195.5 126.3 moveto
12 f0
(\); ) show
0 99.2 moveto
12 f1
(DESCRIPTION) show
83.3 99.2 moveto
12 f0
( ) show
pagelevel restore
showpage
%%Page: 26 26
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(cbf_next_column makes the column following the current column in the current category the current) show
0 695.9 moveto
12 f0
(column. ) show
0 669.3 moveto
12 f0
(If there are no more columns, the function returns CBF_NOTFOUND. ) show
0 642.7 moveto
12 f0
(The current row is not affected. ) show
0 615.6 moveto
12 f1
(ARGUMENTS) show
3.5 598.8 moveto
12 f0
(  ) show
9.5 598.8 moveto
12 f2
(handle) show
46.3 598.8 moveto
12 f0
(  CBF handle.) show
0 568.2 moveto
12 f1
(RETURN VALUE) show
95.6 568.2 moveto
12 f0
( ) show
0 541.6 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 514.5 moveto
12 f1
(SEE ALSO) show
58.3 514.5 moveto
12 f0
( ) show
0 487.9 moveto
12 f0
(2.3.19 cbf_rewind_column) show
0 474.6 moveto
12 f0
(2.3.25 cbf_next_datablock) show
0 461.3 moveto
12 f0
(2.3.26 cbf_next_category) show
0 448 moveto
12 f0
(2.3.28 cbf_next_row) show
0 425.6 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 394.3 moveto
12 f1
(2.3.28 cbf_next_row) show
0 367.2 moveto
12 f1
(PROTOTYPE) show
74.6 367.2 moveto
12 f0
( ) show
0 340.6 moveto
12 f0
(#include "cbf.h") show
0 314 moveto
12 f0
(int cbf_next_row \(cbf_handle ) show
145.6 314 moveto
12 f2
(handle) show
178.2 314 moveto
12 f0
(\); ) show
0 286.9 moveto
12 f1
(DESCRIPTION) show
83.3 286.9 moveto
12 f0
( ) show
0 260.3 moveto
12 f0
(cbf_next_row makes the row following the current row in the current category the current row. ) show
0 233.7 moveto
12 f0
(If there are no more rows, the function returns CBF_NOTFOUND. ) show
0 207.1 moveto
12 f0
(The current column is not affected. ) show
0 180 moveto
12 f1
(ARGUMENTS) show
3.5 163.2 moveto
12 f0
(  ) show
9.5 163.2 moveto
12 f2
(handle) show
46.3 163.2 moveto
12 f0
(  CBF handle.) show
0 132.6 moveto
12 f1
(RETURN VALUE) show
95.6 132.6 moveto
12 f0
( ) show
0 106 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 78.9 moveto
12 f1
(SEE ALSO) show
58.3 78.9 moveto
12 f0
( ) show
pagelevel restore
showpage
%%Page: 27 27
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 700.3 moveto
12 f0
(2.3.24 cbf_rewind_row) show
0 687 moveto
12 f0
(2.3.25 cbf_next_datablock) show
0 673.7 moveto
12 f0
(2.3.26 cbf_next_category) show
0 660.4 moveto
12 f0
(2.3.27 cbf_next_column) show
0 638 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 606.7 moveto
12 f1
(2.3.29 cbf_find_datablock) show
0 579.6 moveto
12 f1
(PROTOTYPE) show
74.6 579.6 moveto
12 f0
( ) show
0 553 moveto
12 f0
(#include "cbf.h") show
0 526.4 moveto
12 f0
(int cbf_find_datablock \(cbf_handle ) show
172.2 526.4 moveto
12 f2
(handle) show
204.8 526.4 moveto
12 f0
(, const char *) show
268.7 526.4 moveto
12 f2
(datablockname) show
342 526.4 moveto
12 f0
(\); ) show
0 499.3 moveto
12 f1
(DESCRIPTION) show
83.3 499.3 moveto
12 f0
( ) show
0 472.7 moveto
12 f0
(cbf_find_datablock makes the data block with name ) show
253.6 472.7 moveto
12 f2
(datablockname) show
326.9 472.7 moveto
12 f0
( the current data block. ) show
0 446.1 moveto
12 f0
(The comparison is case-insensitive. ) show
0 419.5 moveto
12 f0
(If the data block does not exist, the function returns CBF_NOTFOUND. ) show
0 392.9 moveto
12 f0
(The current category becomes undefined. ) show
0 365.8 moveto
12 f1
(ARGUMENTS) show
3.5 349 moveto
12 f0
(  ) show
9.5 349 moveto
12 f2
(handle) show
87 349 moveto
12 f0
(  CBF handle.) show
3.5 331.5 moveto
12 f0
(  ) show
9.5 331.5 moveto
12 f2
(datablockname) show
87 331.5 moveto
12 f0
(  The name of the data block to find.) show
0 300.9 moveto
12 f1
(RETURN VALUE) show
95.6 300.9 moveto
12 f0
( ) show
0 274.3 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 247.2 moveto
12 f1
(SEE ALSO) show
58.3 247.2 moveto
12 f0
( ) show
0 220.6 moveto
12 f0
(2.3.21 cbf_rewind_datablock) show
0 207.3 moveto
12 f0
(2.3.25 cbf_next_datablock) show
0 194 moveto
12 f0
(2.3.30 cbf_find_category) show
0 180.7 moveto
12 f0
(2.3.31 cbf_find_column) show
0 167.4 moveto
12 f0
(2.3.32 cbf_find_row) show
0 154.1 moveto
12 f0
(2.3.42 cbf_datablock_name) show
0 131.7 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 100.4 moveto
12 f1
(2.3.30 cbf_find_category) show
pagelevel restore
showpage
%%Page: 28 28
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 708.7 moveto
12 f1
(PROTOTYPE) show
74.6 708.7 moveto
12 f0
( ) show
0 682.1 moveto
12 f0
(#include "cbf.h") show
0 655.5 moveto
12 f0
(int cbf_find_category \(cbf_handle ) show
166.9 655.5 moveto
12 f2
(handle) show
199.5 655.5 moveto
12 f0
(, const char *) show
263.4 655.5 moveto
12 f2
(categoryname) show
331.3 655.5 moveto
12 f0
(\); ) show
0 628.4 moveto
12 f1
(DESCRIPTION) show
83.3 628.4 moveto
12 f0
( ) show
0 601.8 moveto
12 f0
(cbf_find_category makes the category in the current data block with name ) show
359.5 601.8 moveto
12 f2
(categoryname) show
427.4 601.8 moveto
12 f0
( the current) show
0 588.5 moveto
12 f0
(category. ) show
0 561.9 moveto
12 f0
(The comparison is case-insensitive. ) show
0 535.3 moveto
12 f0
(If the category does not exist, the function returns CBF_NOTFOUND. ) show
0 508.7 moveto
12 f0
(The current column and row become undefined. ) show
0 481.6 moveto
12 f1
(ARGUMENTS) show
3.5 464.8 moveto
12 f0
(  ) show
9.5 464.8 moveto
12 f2
(handle) show
81.6 464.8 moveto
12 f0
(  CBF handle.) show
3.5 447.3 moveto
12 f0
(  ) show
9.5 447.3 moveto
12 f2
(categoryname) show
81.6 447.3 moveto
12 f0
(  The name of the category to find.) show
0 416.7 moveto
12 f1
(RETURN VALUE) show
95.6 416.7 moveto
12 f0
( ) show
0 390.1 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 363 moveto
12 f1
(SEE ALSO) show
58.3 363 moveto
12 f0
( ) show
0 336.4 moveto
12 f0
(2.3.22 cbf_rewind_category) show
0 323.1 moveto
12 f0
(2.3.26 cbf_next_category) show
0 309.8 moveto
12 f0
(2.3.29 cbf_find_datablock) show
0 296.5 moveto
12 f0
(2.3.31 cbf_find_column) show
0 283.2 moveto
12 f0
(2.3.32 cbf_find_row) show
0 269.9 moveto
12 f0
(2.3.43 cbf_category_name) show
0 247.5 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 216.2 moveto
12 f1
(2.3.31 cbf_find_column) show
0 189.1 moveto
12 f1
(PROTOTYPE) show
74.6 189.1 moveto
12 f0
( ) show
0 162.5 moveto
12 f0
(#include "cbf.h") show
0 135.9 moveto
12 f0
(int cbf_find_column \(cbf_handle ) show
161.6 135.9 moveto
12 f2
(handle) show
194.2 135.9 moveto
12 f0
(, const char *) show
258.1 135.9 moveto
12 f2
(columnname) show
319.4 135.9 moveto
12 f0
(\); ) show
0 108.8 moveto
12 f1
(DESCRIPTION) show
83.3 108.8 moveto
12 f0
( ) show
0 82.2 moveto
12 f0
(cbf_find_column makes the columns in the current category with name ) show
345.2 82.2 moveto
12 f2
(columnname) show
406.5 82.2 moveto
12 f0
( the current column.) show
pagelevel restore
showpage
%%Page: 29 29
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 703.6 moveto
12 f0
(The comparison is case-insensitive. ) show
0 677 moveto
12 f0
(If the column does not exist, the function returns CBF_NOTFOUND. ) show
0 650.4 moveto
12 f0
(The current row is not affected. ) show
0 623.3 moveto
12 f1
(ARGUMENTS) show
3.5 606.5 moveto
12 f0
(  ) show
9.5 606.5 moveto
12 f2
(handle) show
75 606.5 moveto
12 f0
(  CBF handle.) show
3.5 589 moveto
12 f0
(  ) show
9.5 589 moveto
12 f2
(columnname) show
75 589 moveto
12 f0
(  The name of column to find.) show
0 558.4 moveto
12 f1
(RETURN VALUE) show
95.6 558.4 moveto
12 f0
( ) show
0 531.8 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 504.7 moveto
12 f1
(SEE ALSO) show
58.3 504.7 moveto
12 f0
( ) show
0 478.1 moveto
12 f0
(2.3.19 cbf_rewind_column) show
0 464.8 moveto
12 f0
(2.3.27 cbf_next_column) show
0 451.5 moveto
12 f0
(2.3.29 cbf_find_datablock) show
0 438.2 moveto
12 f0
(2.3.30 cbf_find_category) show
0 424.9 moveto
12 f0
(2.3.32 cbf_find_row) show
0 411.6 moveto
12 f0
(2.3.44 cbf_column_name) show
0 389.2 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 357.9 moveto
12 f1
(2.3.32 cbf_find_row) show
0 330.8 moveto
12 f1
(PROTOTYPE) show
74.6 330.8 moveto
12 f0
( ) show
0 304.2 moveto
12 f0
(#include "cbf.h") show
0 277.6 moveto
12 f0
(int cbf_find_row \(cbf_handle ) show
144.3 277.6 moveto
12 f2
(handle) show
176.9 277.6 moveto
12 f0
(, const char *) show
240.8 277.6 moveto
12 f2
(value) show
266.7 277.6 moveto
12 f0
(\); ) show
0 250.5 moveto
12 f1
(DESCRIPTION) show
83.3 250.5 moveto
12 f0
( ) show
0 223.9 moveto
12 f0
(cbf_find_row makes the first row in the current column with value ) show
322.9 223.9 moveto
12 f2
(value) show
348.8 223.9 moveto
12 f0
( the current row. ) show
0 197.3 moveto
12 f0
(The comparison is case-sensitive. ) show
0 170.7 moveto
12 f0
(If a matching row does not exist, the function returns CBF_NOTFOUND. ) show
0 144.1 moveto
12 f0
(The current column is not affected. ) show
0 117 moveto
12 f1
(ARGUMENTS) show
3.5 100.2 moveto
12 f0
(  ) show
9.5 100.2 moveto
12 f2
(handle) show
46.3 100.2 moveto
12 f0
(  CBF handle.) show
3.5 82.7 moveto
12 f0
(  ) show
9.5 82.7 moveto
12 f2
(value) show
46.3 82.7 moveto
12 f0
(  The value of the row to find.) show
pagelevel restore
showpage
%%Page: 30 30
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 700.1 moveto
12 f1
(RETURN VALUE) show
95.6 700.1 moveto
12 f0
( ) show
0 673.5 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 646.4 moveto
12 f1
(SEE ALSO) show
58.3 646.4 moveto
12 f0
( ) show
0 619.8 moveto
12 f0
(2.3.24 cbf_rewind_row) show
0 606.5 moveto
12 f0
(2.3.28 cbf_next_row) show
0 593.2 moveto
12 f0
(2.3.29 cbf_find_datablock) show
0 579.9 moveto
12 f0
(2.3.30 cbf_find_category) show
0 566.6 moveto
12 f0
(2.3.31 cbf_find_column) show
0 553.3 moveto
12 f0
(2.3.33 cbf_find_nextrow) show
0 540 moveto
12 f0
(2.3.46 cbf_get_value) show
0 512.9 moveto
12 f1
(2.3.33 cbf_find_nextrow) show
0 485.8 moveto
12 f1
(PROTOTYPE) show
74.6 485.8 moveto
12 f0
( ) show
0 459.2 moveto
12 f0
(#include "cbf.h") show
0 432.6 moveto
12 f0
(int cbf_find_nextrow \(cbf_handle ) show
164.9 432.6 moveto
12 f2
(handle) show
197.5 432.6 moveto
12 f0
(, const char *) show
261.4 432.6 moveto
12 f2
(value) show
287.3 432.6 moveto
12 f0
(\); ) show
0 405.5 moveto
12 f1
(DESCRIPTION) show
83.3 405.5 moveto
12 f0
( ) show
0 378.9 moveto
12 f0
(cbf_find_nextrow makes the makes the next row in the current column with value ) show
396.2 378.9 moveto
12 f2
(value) show
422.1 378.9 moveto
12 f0
( the current row.) show
0 365.6 moveto
12 f0
(The search starts from the row following the last row found with cbf_find_row or cbf_find_nextrow, or) show
0 352.3 moveto
12 f0
(from the current row if the current row was defined using any other function. ) show
0 325.7 moveto
12 f0
(The comparison is case-sensitive. ) show
0 299.1 moveto
12 f0
(If no more matching rows exist, the function returns CBF_NOTFOUND. ) show
0 272.5 moveto
12 f0
(The current column is not affected. ) show
0 245.4 moveto
12 f1
(ARGUMENTS) show
3.5 228.6 moveto
12 f0
(  ) show
9.5 228.6 moveto
12 f2
(handle) show
46.3 228.6 moveto
12 f0
(  CBF handle.) show
3.5 211.1 moveto
12 f0
(  ) show
9.5 211.1 moveto
12 f2
(value) show
46.3 211.1 moveto
12 f0
(  the value to search for.) show
0 180.5 moveto
12 f1
(RETURN VALUE) show
95.6 180.5 moveto
12 f0
( ) show
0 153.9 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 126.8 moveto
12 f1
(SEE ALSO) show
58.3 126.8 moveto
12 f0
( ) show
0 100.2 moveto
12 f0
(2.3.24 cbf_rewind_row) show
0 86.9 moveto
12 f0
(2.3.28 cbf_next_row) show
pagelevel restore
showpage
%%Page: 31 31
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(2.3.29 cbf_find_datablock) show
0 695.9 moveto
12 f0
(2.3.30 cbf_find_category) show
0 682.6 moveto
12 f0
(2.3.31 cbf_find_column) show
0 669.3 moveto
12 f0
(2.3.32 cbf_find_row) show
0 656 moveto
12 f0
(2.3.46 cbf_get_value) show
0 633.6 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 602.3 moveto
12 f1
(2.3.34 cbf_count_datablocks) show
0 575.2 moveto
12 f1
(PROTOTYPE) show
74.6 575.2 moveto
12 f0
( ) show
0 548.6 moveto
12 f0
(#include "cbf.h") show
0 522 moveto
12 f0
(int cbf_count_datablocks \(cbf_handle ) show
184.2 522 moveto
12 f2
(handle) show
216.8 522 moveto
12 f0
(, unsigned int *) show
290.8 522 moveto
12 f2
(datablocks) show
342.7 522 moveto
12 f0
(\); ) show
0 494.9 moveto
12 f1
(DESCRIPTION) show
83.3 494.9 moveto
12 f0
( ) show
0 468.3 moveto
12 f0
(cbf_count_datablocks puts the number of data blocks in *) show
277.2 468.3 moveto
12 f2
(datablocks) show
329.1 468.3 moveto
12 f0
( . ) show
0 441.2 moveto
12 f1
(ARGUMENTS) show
3.5 424.4 moveto
12 f0
(  ) show
9.5 424.4 moveto
12 f2
(handle) show
65.6 424.4 moveto
12 f0
(  CBF handle.) show
3.5 406.9 moveto
12 f0
(  ) show
9.5 406.9 moveto
12 f2
(datablocks) show
65.6 406.9 moveto
12 f0
(  Pointer to the destination data block count.) show
0 376.3 moveto
12 f1
(RETURN VALUE) show
95.6 376.3 moveto
12 f0
( ) show
0 349.7 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 322.6 moveto
12 f1
(SEE ALSO) show
58.3 322.6 moveto
12 f0
( ) show
0 296 moveto
12 f0
(2.3.35 cbf_count_categories) show
0 282.7 moveto
12 f0
(2.3.36 cbf_count_columns) show
0 269.4 moveto
12 f0
(2.3.37 cbf_count_rows) show
0 256.1 moveto
12 f0
(2.3.38 cbf_select_datablock) show
0 233.7 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 202.4 moveto
12 f1
(2.3.35 cbf_count_categories) show
0 175.3 moveto
12 f1
(PROTOTYPE) show
74.6 175.3 moveto
12 f0
( ) show
0 148.7 moveto
12 f0
(#include "cbf.h") show
0 122.1 moveto
12 f0
(int cbf_count_categories \(cbf_handle ) show
181.6 122.1 moveto
12 f2
(handle) show
214.2 122.1 moveto
12 f0
(, unsigned int *) show
288.2 122.1 moveto
12 f2
(categories) show
338.1 122.1 moveto
12 f0
(\); ) show
0 95 moveto
12 f1
(DESCRIPTION) show
83.3 95 moveto
12 f0
( ) show
pagelevel restore
showpage
%%Page: 32 32
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(cbf_count_categories puts the number of categories in the current data block in *) show
388.5 709.2 moveto
12 f2
(categories) show
438.4 709.2 moveto
12 f0
(. ) show
0 682.1 moveto
12 f1
(ARGUMENTS) show
3.5 665.3 moveto
12 f0
(  ) show
9.5 665.3 moveto
12 f2
(handle) show
63.6 665.3 moveto
12 f0
(  CBF handle.) show
3.5 647.8 moveto
12 f0
(  ) show
9.5 647.8 moveto
12 f2
(categories) show
63.6 647.8 moveto
12 f0
(  Pointer to the destination category count.) show
0 617.2 moveto
12 f1
(RETURN VALUE) show
95.6 617.2 moveto
12 f0
( ) show
0 590.6 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 563.5 moveto
12 f1
(SEE ALSO) show
58.3 563.5 moveto
12 f0
( ) show
0 536.9 moveto
12 f0
(2.3.34 cbf_count_datablocks) show
0 523.6 moveto
12 f0
(2.3.36 cbf_count_columns) show
0 510.3 moveto
12 f0
(2.3.37 cbf_count_rows) show
0 497 moveto
12 f0
(2.3.39 cbf_select_category) show
0 474.6 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 443.3 moveto
12 f1
(2.3.36 cbf_count_columns) show
0 416.2 moveto
12 f1
(PROTOTYPE) show
74.6 416.2 moveto
12 f0
( ) show
0 389.6 moveto
12 f0
(#include "cbf.h") show
0 363 moveto
12 f0
(int cbf_count_columns \(cbf_handle ) show
173.6 363 moveto
12 f2
(handle) show
206.2 363 moveto
12 f0
(, unsigned int *) show
280.2 363 moveto
12 f2
(columns) show
320.1 363 moveto
12 f0
(\); ) show
0 335.9 moveto
12 f1
(DESCRIPTION) show
83.3 335.9 moveto
12 f0
( ) show
0 309.3 moveto
12 f0
(cbf_count_columns puts the number of columns in the current category in *) show
364.2 309.3 moveto
12 f2
(columns) show
404.1 309.3 moveto
12 f0
(. ) show
0 282.2 moveto
12 f1
(ARGUMENTS) show
3.5 265.4 moveto
12 f0
(  ) show
9.5 265.4 moveto
12 f2
(handle) show
53.6 265.4 moveto
12 f0
(  CBF handle.) show
3.5 247.9 moveto
12 f0
(  ) show
9.5 247.9 moveto
12 f2
(columns) show
53.6 247.9 moveto
12 f0
(  Pointer to the destination column count.) show
0 217.3 moveto
12 f1
(RETURN VALUE) show
95.6 217.3 moveto
12 f0
( ) show
0 190.7 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 163.6 moveto
12 f1
(SEE ALSO) show
58.3 163.6 moveto
12 f0
( ) show
0 137 moveto
12 f0
(2.3.34 cbf_count_datablocks) show
0 123.7 moveto
12 f0
(2.3.35 cbf_count_categories) show
0 110.4 moveto
12 f0
(2.3.37 cbf_count_rows) show
0 97.1 moveto
12 f0
(2.3.40 cbf_select_column) show
0 74.7 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
pagelevel restore
showpage
%%Page: 33 33
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 691.4 moveto
12 f1
(2.3.37 cbf_count_rows) show
0 664.3 moveto
12 f1
(PROTOTYPE) show
74.6 664.3 moveto
12 f0
( ) show
0 637.7 moveto
12 f0
(#include "cbf.h") show
0 611.1 moveto
12 f0
(int cbf_count_rows \(cbf_handle ) show
156.3 611.1 moveto
12 f2
(handle) show
188.9 611.1 moveto
12 f0
(, unsigned int *) show
262.9 611.1 moveto
12 f2
(rows) show
286.2 611.1 moveto
12 f0
(\); ) show
0 584 moveto
12 f1
(DESCRIPTION) show
83.3 584 moveto
12 f0
( ) show
0 557.4 moveto
12 f0
(cbf_count_rows puts the number of rows in the current category in *) show
329.6 557.4 moveto
12 f2
(rows) show
352.9 557.4 moveto
12 f0
( . ) show
0 530.3 moveto
12 f1
(ARGUMENTS) show
3.5 513.5 moveto
12 f0
(  ) show
9.5 513.5 moveto
12 f2
(handle) show
46.3 513.5 moveto
12 f0
(  CBF handle.) show
3.5 496 moveto
12 f0
(  ) show
9.5 496 moveto
12 f2
(rows) show
46.3 496 moveto
12 f0
(  Pointer to the destination row count.) show
0 465.4 moveto
12 f1
(RETURN VALUE) show
95.6 465.4 moveto
12 f0
( ) show
0 438.8 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 411.7 moveto
12 f1
(SEE ALSO) show
58.3 411.7 moveto
12 f0
( ) show
0 385.1 moveto
12 f0
(2.3.34 cbf_count_datablocks) show
0 371.8 moveto
12 f0
(2.3.35 cbf_count_categories) show
0 358.5 moveto
12 f0
(2.3.36 cbf_count_columns) show
0 345.2 moveto
12 f0
(2.3.41 cbf_select_row) show
0 322.8 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 291.5 moveto
12 f1
(2.3.38 cbf_select_datablock) show
0 264.4 moveto
12 f1
(PROTOTYPE) show
74.6 264.4 moveto
12 f0
( ) show
0 237.8 moveto
12 f0
(#include "cbf.h") show
0 211.2 moveto
12 f0
(int cbf_select_datablock \(cbf_handle ) show
180.2 211.2 moveto
12 f2
(handle) show
212.8 211.2 moveto
12 f0
(, unsigned int ) show
280.8 211.2 moveto
12 f2
(datablock) show
328.3 211.2 moveto
12 f0
(\); ) show
0 184.1 moveto
12 f1
(DESCRIPTION) show
83.3 184.1 moveto
12 f0
( ) show
0 157.5 moveto
12 f0
(cbf_select_datablock selects data block number ) show
231.6 157.5 moveto
12 f2
(datablock) show
279.1 157.5 moveto
12 f0
( as the current data block. ) show
0 130.9 moveto
12 f0
(The first data block is number 0. ) show
0 104.3 moveto
12 f0
(If the data block does not exist, the function returns CBF_NOTFOUND. ) show
0 77.2 moveto
12 f1
(ARGUMENTS) show
pagelevel restore
showpage
%%Page: 34 34
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
3.5 708.4 moveto
12 f0
(  ) show
9.5 708.4 moveto
12 f2
(handle) show
61.2 708.4 moveto
12 f0
(  CBF handle.) show
3.5 690.9 moveto
12 f0
(  ) show
9.5 690.9 moveto
12 f2
(datablock) show
61.2 690.9 moveto
12 f0
(  Number of the data block to select.) show
0 660.3 moveto
12 f1
(RETURN VALUE) show
95.6 660.3 moveto
12 f0
( ) show
0 633.7 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 606.6 moveto
12 f1
(SEE ALSO) show
58.3 606.6 moveto
12 f0
( ) show
0 580 moveto
12 f0
(2.3.34 cbf_count_datablocks) show
0 566.7 moveto
12 f0
(2.3.39 cbf_select_category) show
0 553.4 moveto
12 f0
(2.3.40 cbf_select_column) show
0 540.1 moveto
12 f0
(2.3.41 cbf_select_row) show
106.3 540.1 moveto
12 f0
( ) show
0 517.7 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 486.4 moveto
12 f1
(2.3.39 cbf_select_category) show
0 459.3 moveto
12 f1
(PROTOTYPE) show
74.6 459.3 moveto
12 f0
( ) show
0 432.7 moveto
12 f0
(#include "cbf.h") show
0 406.1 moveto
12 f0
(int cbf_select_category \(cbf_handle ) show
174.9 406.1 moveto
12 f2
(handle) show
207.5 406.1 moveto
12 f0
(, unsigned int ) show
275.5 406.1 moveto
12 f2
(category) show
317.4 406.1 moveto
12 f0
(\); ) show
0 379 moveto
12 f1
(DESCRIPTION) show
83.3 379 moveto
12 f0
( ) show
0 352.4 moveto
12 f0
(cbf_select_category selects category number ) show
217.9 352.4 moveto
12 f2
(category) show
259.8 352.4 moveto
12 f0
( in the current data block as the current category. ) show
0 325.8 moveto
12 f0
(The first category is number 0. ) show
0 299.2 moveto
12 f0
(The current column and row become undefined. ) show
0 272.6 moveto
12 f0
(If the category does not exist, the function returns CBF_NOTFOUND. ) show
0 245.5 moveto
12 f1
(ARGUMENTS) show
3.5 228.7 moveto
12 f0
(  ) show
9.5 228.7 moveto
12 f2
(handle) show
55.6 228.7 moveto
12 f0
(  CBF handle.) show
3.5 211.2 moveto
12 f0
(  ) show
9.5 211.2 moveto
12 f2
(category) show
55.6 211.2 moveto
12 f0
(  Number of the category to select.) show
0 180.6 moveto
12 f1
(RETURN VALUE) show
95.6 180.6 moveto
12 f0
( ) show
0 154 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 126.9 moveto
12 f1
(SEE ALSO) show
58.3 126.9 moveto
12 f0
( ) show
0 100.3 moveto
12 f0
(2.3.35 cbf_count_categories) show
0 87 moveto
12 f0
(2.3.38 cbf_select_datablock) show
pagelevel restore
showpage
%%Page: 35 35
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(2.3.40 cbf_select_column) show
0 695.9 moveto
12 f0
(2.3.41 cbf_select_row) show
0 673.5 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 642.2 moveto
12 f1
(2.3.40 cbf_select_column) show
0 615.1 moveto
12 f1
(PROTOTYPE) show
74.6 615.1 moveto
12 f0
( ) show
0 588.5 moveto
12 f0
(#include "cbf.h") show
0 561.9 moveto
12 f0
(int cbf_select_column \(cbf_handle ) show
169.6 561.9 moveto
12 f2
(handle) show
202.2 561.9 moveto
12 f0
(, unsigned int ) show
270.2 561.9 moveto
12 f2
(column) show
305.5 561.9 moveto
12 f0
(\); ) show
0 534.8 moveto
12 f1
(DESCRIPTION) show
83.3 534.8 moveto
12 f0
( ) show
0 508.2 moveto
12 f0
(cbf_select_column selects column number ) show
207.3 508.2 moveto
12 f2
(column) show
242.6 508.2 moveto
12 f0
( in the current category as the current column. ) show
0 481.6 moveto
12 f0
(The first column is number 0. ) show
0 455 moveto
12 f0
(The current row is not affected ) show
0 428.4 moveto
12 f0
(If the column does not exist, the function returns CBF_NOTFOUND. ) show
0 401.3 moveto
12 f1
(ARGUMENTS) show
3.5 384.5 moveto
12 f0
(  ) show
9.5 384.5 moveto
12 f2
(handle) show
49 384.5 moveto
12 f0
(  CBF handle.) show
3.5 367 moveto
12 f0
(  ) show
9.5 367 moveto
12 f2
(column) show
49 367 moveto
12 f0
(  Number of the column to select.) show
0 336.4 moveto
12 f1
(RETURN VALUE) show
95.6 336.4 moveto
12 f0
( ) show
0 309.8 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 282.7 moveto
12 f1
(SEE ALSO) show
58.3 282.7 moveto
12 f0
( ) show
0 256.1 moveto
12 f0
(2.3.36 cbf_count_columns) show
0 242.8 moveto
12 f0
(2.3.38 cbf_select_datablock) show
0 229.5 moveto
12 f0
(2.3.39 cbf_select_category) show
0 216.2 moveto
12 f0
(2.3.41 cbf_select_row) show
0 193.8 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 162.5 moveto
12 f1
(2.3.41 cbf_select_row) show
0 135.4 moveto
12 f1
(PROTOTYPE) show
74.6 135.4 moveto
12 f0
( ) show
0 108.8 moveto
12 f0
(#include "cbf.h") show
0 82.2 moveto
12 f0
(int cbf_select_row \(cbf_handle ) show
152.2 82.2 moveto
12 f2
(handle) show
184.8 82.2 moveto
12 f0
(, unsigned int ) show
252.8 82.2 moveto
12 f2
(row) show
271.4 82.2 moveto
12 f0
(\); ) show
pagelevel restore
showpage
%%Page: 36 36
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 703.1 moveto
12 f1
(DESCRIPTION) show
83.3 703.1 moveto
12 f0
( ) show
0 676.5 moveto
12 f0
(cbf_select_row selects row number ) show
172.6 676.5 moveto
12 f2
(row) show
191.2 676.5 moveto
12 f0
( in the current category as the current row. ) show
0 649.9 moveto
12 f0
(The first row is number 0. ) show
0 623.3 moveto
12 f0
(The current column is not affected ) show
0 596.7 moveto
12 f0
(If the row does not exist, the function returns CBF_NOTFOUND. ) show
0 569.6 moveto
12 f1
(ARGUMENTS) show
3.5 552.8 moveto
12 f0
(  ) show
9.5 552.8 moveto
12 f2
(handle) show
46.3 552.8 moveto
12 f0
(  CBF handle.) show
3.5 535.3 moveto
12 f0
(  ) show
9.5 535.3 moveto
12 f2
(row) show
46.3 535.3 moveto
12 f0
(  Number of the row to select.) show
0 504.7 moveto
12 f1
(RETURN VALUE) show
95.6 504.7 moveto
12 f0
( ) show
0 478.1 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 451 moveto
12 f1
(SEE ALSO) show
58.3 451 moveto
12 f0
( ) show
0 424.4 moveto
12 f0
(2.3.37 cbf_count_rows) show
0 411.1 moveto
12 f0
(2.3.38 cbf_select_datablock) show
0 397.8 moveto
12 f0
(2.3.39 cbf_select_category) show
0 384.5 moveto
12 f0
(2.3.40 cbf_select_column) show
0 362.1 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 330.8 moveto
12 f1
(2.3.42 cbf_datablock_name) show
0 303.7 moveto
12 f1
(PROTOTYPE) show
74.6 303.7 moveto
12 f0
( ) show
0 277.1 moveto
12 f0
(#include "cbf.h") show
0 250.5 moveto
12 f0
(int cbf_datablock_name \(cbf_handle ) show
178.9 250.5 moveto
12 f2
(handle) show
211.5 250.5 moveto
12 f0
(, const char **) show
281.4 250.5 moveto
12 f2
(datablockname) show
354.7 250.5 moveto
12 f0
(\); ) show
0 223.4 moveto
12 f1
(DESCRIPTION) show
83.3 223.4 moveto
12 f0
( ) show
0 196.8 moveto
12 f0
(cbf_datablock_name sets *) show
129.9 196.8 moveto
12 f2
(datablockname) show
203.2 196.8 moveto
12 f0
( to point to the name of the current data block. ) show
0 170.2 moveto
12 f0
(The data block name will be valid as long as the data block exists and has not been renamed. ) show
0 143.6 moveto
12 f0
(The name must not be modified by the program in any way. ) show
0 116.5 moveto
12 f1
(ARGUMENTS) show
3.5 99.7 moveto
12 f0
(  ) show
9.5 99.7 moveto
12 f2
(handle) show
87 99.7 moveto
12 f0
(  CBF handle.) show
3.5 82.2 moveto
12 f0
(  ) show
9.5 82.2 moveto
12 f2
(datablockname) show
87 82.2 moveto
12 f0
(  Pointer to the destination data block name pointer.) show
pagelevel restore
showpage
%%Page: 37 37
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 699.6 moveto
12 f1
(RETURN VALUE) show
95.6 699.6 moveto
12 f0
( ) show
0 673 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 645.9 moveto
12 f1
(SEE ALSO) show
58.3 645.9 moveto
12 f0
( ) show
0 619.3 moveto
12 f0
(2.3.29 cbf_find_datablock) show
0 596.9 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 565.6 moveto
12 f1
(2.3.43 cbf_category_name) show
0 538.5 moveto
12 f1
(PROTOTYPE) show
74.6 538.5 moveto
12 f0
( ) show
0 511.9 moveto
12 f0
(#include "cbf.h") show
0 485.3 moveto
12 f0
(int cbf_category_name \(cbf_handle ) show
173.6 485.3 moveto
12 f2
(handle) show
206.2 485.3 moveto
12 f0
(, const char **) show
276.1 485.3 moveto
12 f2
(categoryname) show
344 485.3 moveto
12 f0
(\); ) show
0 458.2 moveto
12 f1
(DESCRIPTION) show
83.3 458.2 moveto
12 f0
( ) show
0 431.6 moveto
12 f0
(cbf_category_name sets *) show
124.6 431.6 moveto
12 f2
(categoryname ) show
195.5 431.6 moveto
12 f0
(to point to the name of the current category of the current data) show
0 418.3 moveto
12 f0
(block. ) show
0 391.7 moveto
12 f0
(The category name will be valid as long as the category exists. ) show
0 365.1 moveto
12 f0
(The name must not be modified by the program in any way. ) show
0 338 moveto
12 f1
(ARGUMENTS) show
3.5 321.2 moveto
12 f0
(  ) show
9.5 321.2 moveto
12 f2
(handle) show
81.6 321.2 moveto
12 f0
(  CBF handle.) show
3.5 303.7 moveto
12 f0
(  ) show
9.5 303.7 moveto
12 f2
(categoryname) show
81.6 303.7 moveto
12 f0
(  Pointer to the destination category name pointer.) show
0 273.1 moveto
12 f1
(RETURN VALUE) show
95.6 273.1 moveto
12 f0
( ) show
0 246.5 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 219.4 moveto
12 f1
(SEE ALSO) show
58.3 219.4 moveto
12 f0
( ) show
0 192.8 moveto
12 f0
(2.3.30 cbf_find_category) show
0 170.4 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 139.1 moveto
12 f1
(2.3.44 cbf_column_name) show
0 112 moveto
12 f1
(PROTOTYPE) show
74.6 112 moveto
12 f0
( ) show
0 85.4 moveto
12 f0
(#include "cbf.h") show
pagelevel restore
showpage
%%Page: 38 38
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 706.8 moveto
12 f0
(int cbf_column_name \(cbf_handle ) show
168.3 706.8 moveto
12 f2
(handle) show
200.9 706.8 moveto
12 f0
(, const char **) show
270.8 706.8 moveto
12 f2
(columnname) show
332.1 706.8 moveto
12 f0
(\); ) show
0 679.7 moveto
12 f1
(DESCRIPTION) show
83.3 679.7 moveto
12 f0
( ) show
0 653.1 moveto
12 f0
(cbf_column_name sets *) show
119.3 653.1 moveto
12 f2
(columnname ) show
183.6 653.1 moveto
12 f0
(to point to the name of the current column of the current category.) show
0 626.5 moveto
12 f0
(The column name will be valid as long as the column exists. ) show
0 599.9 moveto
12 f0
(The name must not be modified by the program in any way. ) show
0 572.8 moveto
12 f1
(ARGUMENTS) show
3.5 556 moveto
12 f0
(  ) show
9.5 556 moveto
12 f2
(handle) show
75 556 moveto
12 f0
(  CBF handle.) show
3.5 538.5 moveto
12 f0
(  ) show
9.5 538.5 moveto
12 f2
(columnname) show
75 538.5 moveto
12 f0
(  Pointer to the destination column name pointer.) show
0 507.9 moveto
12 f1
(RETURN VALUE) show
95.6 507.9 moveto
12 f0
( ) show
0 481.3 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 454.2 moveto
12 f1
(SEE ALSO) show
58.3 454.2 moveto
12 f0
( ) show
0 427.6 moveto
12 f0
(2.3.31 cbf_find_column) show
0 405.2 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 373.9 moveto
12 f1
(2.3.45 cbf_row_number) show
0 346.8 moveto
12 f1
(PROTOTYPE) show
74.6 346.8 moveto
12 f0
( ) show
0 320.2 moveto
12 f0
(#include "cbf.h") show
0 293.6 moveto
12 f0
(int cbf_row_number \(cbf_handle ) show
161.6 293.6 moveto
12 f2
(handle) show
194.2 293.6 moveto
12 f0
(, unsigned int *) show
268.2 293.6 moveto
12 f2
(row) show
286.8 293.6 moveto
12 f0
(\); ) show
0 266.5 moveto
12 f1
(DESCRIPTION) show
83.3 266.5 moveto
12 f0
( ) show
0 239.9 moveto
12 f0
(cbf_row_number sets *) show
112.6 239.9 moveto
12 f2
(row) show
131.2 239.9 moveto
12 f0
( to the number of the current row of the current category. ) show
0 212.8 moveto
12 f1
(ARGUMENTS) show
3.5 196 moveto
12 f0
(  ) show
9.5 196 moveto
12 f2
(handle) show
46.3 196 moveto
12 f0
(  CBF handle.) show
3.5 178.5 moveto
12 f0
(  ) show
9.5 178.5 moveto
12 f2
(row) show
46.3 178.5 moveto
12 f0
(  Pointer to the destination row number.) show
0 147.9 moveto
12 f1
(RETURN VALUE) show
95.6 147.9 moveto
12 f0
( ) show
0 121.3 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 94.2 moveto
12 f1
(SEE ALSO) show
58.3 94.2 moveto
12 f0
( ) show
pagelevel restore
showpage
%%Page: 39 39
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(2.3.41 cbf_select_row) show
0 686.8 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 655.5 moveto
12 f1
(2.3.46 cbf_get_value) show
0 628.4 moveto
12 f1
(PROTOTYPE) show
74.6 628.4 moveto
12 f0
( ) show
0 601.8 moveto
12 f0
(#include "cbf.h") show
0 575.2 moveto
12 f0
(int cbf_get_value \(cbf_handle ) show
146.9 575.2 moveto
12 f2
(handle) show
179.5 575.2 moveto
12 f0
(, const char **) show
249.4 575.2 moveto
12 f2
(value) show
275.3 575.2 moveto
12 f0
(\); ) show
0 548.1 moveto
12 f1
(DESCRIPTION) show
83.3 548.1 moveto
12 f0
( ) show
0 521.5 moveto
12 f0
(cbf_get_value sets *) show
97.9 521.5 moveto
12 f2
(value) show
123.8 521.5 moveto
12 f0
( to point to the ASCII value of the item at the current column and row. ) show
0 494.9 moveto
12 f0
(If the value is not ASCII, the function returns CBF_BINARY. ) show
0 468.3 moveto
12 f0
(The value will be valid as long as the item exists and has not been set to a new value. ) show
0 441.7 moveto
12 f0
(The value must not be modified by the program in any way. ) show
0 414.6 moveto
12 f1
(ARGUMENTS) show
3.5 397.8 moveto
12 f0
(  ) show
9.5 397.8 moveto
12 f2
(handle) show
46.3 397.8 moveto
12 f0
(  CBF handle.) show
3.5 380.3 moveto
12 f0
(  ) show
9.5 380.3 moveto
12 f2
(value) show
46.3 380.3 moveto
12 f0
(  Pointer to the destination value pointer.) show
0 349.7 moveto
12 f1
(RETURN VALUE) show
95.6 349.7 moveto
12 f0
( ) show
0 323.1 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 296 moveto
12 f1
(SEE ALSO) show
58.3 296 moveto
12 f0
( ) show
0 269.4 moveto
12 f0
(2.3.47 cbf_set_value) show
0 256.1 moveto
12 f0
(2.3.48 cbf_get_integervalue) show
0 242.8 moveto
12 f0
(2.3.50 cbf_get_doublevalue) show
0 229.5 moveto
12 f0
(2.3.52 cbf_get_integerarrayparameters) show
0 216.2 moveto
12 f0
(2.3.53 cbf_get_integerarray) show
0 193.8 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 162.5 moveto
12 f1
(2.3.47 cbf_set_value) show
0 135.4 moveto
12 f1
(PROTOTYPE) show
74.6 135.4 moveto
12 f0
( ) show
0 108.8 moveto
12 f0
(#include "cbf.h") show
0 82.2 moveto
12 f0
(int cbf_set_value \(cbf_handle ) show
145.6 82.2 moveto
12 f2
(handle) show
178.2 82.2 moveto
12 f0
(, const char *) show
242.1 82.2 moveto
12 f2
(value) show
268 82.2 moveto
12 f0
(\); ) show
pagelevel restore
showpage
%%Page: 40 40
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 703.1 moveto
12 f1
(DESCRIPTION) show
83.3 703.1 moveto
12 f0
( ) show
0 676.5 moveto
12 f0
(cbf_set_value sets the item at the current column and row to the ASCII value ) show
373.2 676.5 moveto
12 f2
(value) show
399.1 676.5 moveto
12 f0
(. ) show
0 649.4 moveto
12 f1
(ARGUMENTS) show
3.5 632.6 moveto
12 f0
(  ) show
9.5 632.6 moveto
12 f2
(handle) show
46.3 632.6 moveto
12 f0
(  CBF handle.) show
3.5 615.1 moveto
12 f0
(  ) show
9.5 615.1 moveto
12 f2
(value) show
46.3 615.1 moveto
12 f0
(  ASCII value.) show
0 584.5 moveto
12 f1
(RETURN VALUE) show
95.6 584.5 moveto
12 f0
( ) show
0 557.9 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 530.8 moveto
12 f1
(SEE ALSO) show
58.3 530.8 moveto
12 f0
( ) show
0 504.2 moveto
12 f0
(2.3.46 cbf_get_value) show
0 490.9 moveto
12 f0
(2.3.49 cbf_set_integervalue) show
0 477.6 moveto
12 f0
(2.3.51 cbf_set_doublevalue) show
0 464.3 moveto
12 f0
(2.3.54 cbf_set_integerarray) show
0 441.9 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 410.6 moveto
12 f1
(2.3.48 cbf_get_integervalue) show
0 383.5 moveto
12 f1
(PROTOTYPE) show
74.6 383.5 moveto
12 f0
( ) show
0 356.9 moveto
12 f0
(#include "cbf.h") show
0 330.3 moveto
12 f0
(int cbf_get_integervalue \(cbf_handle ) show
180.2 330.3 moveto
12 f2
(handle) show
212.8 330.3 moveto
12 f0
(, int *) show
240.4 330.3 moveto
12 f2
(number) show
277.3 330.3 moveto
12 f0
(\); ) show
0 303.2 moveto
12 f1
(DESCRIPTION) show
83.3 303.2 moveto
12 f0
( ) show
0 276.6 moveto
12 f0
(cbf_get_integervalue sets *) show
131.3 276.6 moveto
12 f2
(number) show
168.2 276.6 moveto
12 f0
( to the value of the ASCII item at the current column and row) show
0 263.3 moveto
12 f0
(interpreted as a decimal integer. ) show
0 236.7 moveto
12 f0
(If the value is not ASCII, the function returns CBF_BINARY. ) show
0 209.6 moveto
12 f1
(ARGUMENTS) show
3.5 192.8 moveto
12 f0
(  ) show
9.5 192.8 moveto
12 f2
(handle) show
50.6 192.8 moveto
12 f0
(  CBF handle.) show
3.5 175.3 moveto
12 f0
(  ) show
9.5 175.3 moveto
12 f2
(number) show
50.6 175.3 moveto
12 f0
(  pointer to the number.) show
0 144.7 moveto
12 f1
(RETURN VALUE) show
95.6 144.7 moveto
12 f0
( ) show
0 118.1 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 91 moveto
12 f1
(SEE ALSO) show
58.3 91 moveto
12 f0
( ) show
pagelevel restore
showpage
%%Page: 41 41
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(2.3.46 cbf_get_value) show
0 695.9 moveto
12 f0
(2.3.49 cbf_set_integervalue) show
0 682.6 moveto
12 f0
(2.3.50 cbf_get_doublevalue) show
0 669.3 moveto
12 f0
(2.3.52 cbf_get_integerarrayparameters) show
0 656 moveto
12 f0
(2.3.53 cbf_get_integerarray) show
0 633.6 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 602.3 moveto
12 f1
(2.3.49 cbf_set_integervalue) show
0 575.2 moveto
12 f1
(PROTOTYPE) show
74.6 575.2 moveto
12 f0
( ) show
0 548.6 moveto
12 f0
(#include "cbf.h") show
0 522 moveto
12 f0
(int cbf_set_integervalue \(cbf_handle ) show
178.9 522 moveto
12 f2
(handle) show
211.5 522 moveto
12 f0
(, int ) show
233.1 522 moveto
12 f2
(number) show
270 522 moveto
12 f0
(\); ) show
0 494.9 moveto
12 f1
(DESCRIPTION) show
83.3 494.9 moveto
12 f0
( ) show
0 468.3 moveto
12 f0
(cbf_set_integervalue sets the item at the current column and row to the integer value ) show
408.5 468.3 moveto
12 f2
(number) show
445.4 468.3 moveto
12 f0
( written as a) show
0 455 moveto
12 f0
(decimal ASCII string. ) show
0 427.9 moveto
12 f1
(ARGUMENTS) show
3.5 411.1 moveto
12 f0
(  ) show
9.5 411.1 moveto
12 f2
(handle) show
50.6 411.1 moveto
12 f0
(  CBF handle.) show
3.5 393.6 moveto
12 f0
(  ) show
9.5 393.6 moveto
12 f2
(number) show
50.6 393.6 moveto
12 f0
(  Integer value.) show
0 363 moveto
12 f1
(RETURN VALUE) show
95.6 363 moveto
12 f0
( ) show
0 336.4 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 309.3 moveto
12 f1
(SEE ALSO) show
58.3 309.3 moveto
12 f0
( ) show
0 282.7 moveto
12 f0
(2.3.46 cbf_get_value) show
0 269.4 moveto
12 f0
(2.3.47 cbf_set_value) show
0 256.1 moveto
12 f0
(2.3.48 cbf_get_integervalue) show
0 242.8 moveto
12 f0
(2.3.49 cbf_set_integervalue) show
0 229.5 moveto
12 f0
(2.3.51 cbf_set_doublevalue) show
0 216.2 moveto
12 f0
(2.3.54 cbf_set_integerarray) show
0 193.8 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 162.5 moveto
12 f1
(2.3.50 cbf_get_doublevalue) show
0 135.4 moveto
12 f1
(PROTOTYPE) show
74.6 135.4 moveto
12 f0
( ) show
0 108.8 moveto
12 f0
(#include "cbf.h") show
0 82.2 moveto
12 f0
(int cbf_get_doublevalue \(cbf_handle ) show
179.6 82.2 moveto
12 f2
(handle) show
212.2 82.2 moveto
12 f0
(, double *) show
259.8 82.2 moveto
12 f2
(number) show
296.7 82.2 moveto
12 f0
(\); ) show
pagelevel restore
showpage
%%Page: 42 42
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 703.1 moveto
12 f1
(DESCRIPTION) show
83.3 703.1 moveto
12 f0
( ) show
0 676.5 moveto
12 f0
(cbf_get_doublevalue sets *) show
130.6 676.5 moveto
12 f2
(number) show
167.5 676.5 moveto
12 f0
( to the value of the ASCII item at the current column and row) show
0 663.2 moveto
12 f0
(interpreted as a decimal floating-point number. ) show
0 636.6 moveto
12 f0
(If the value is not ASCII, the function returns CBF_BINARY. ) show
0 609.5 moveto
12 f1
(ARGUMENTS) show
3.5 592.7 moveto
12 f0
(  ) show
9.5 592.7 moveto
12 f2
(handle) show
50.6 592.7 moveto
12 f0
(  CBF handle.) show
3.5 575.2 moveto
12 f0
(  ) show
9.5 575.2 moveto
12 f2
(number) show
50.6 575.2 moveto
12 f0
(  Pointer to the destination number.) show
0 544.6 moveto
12 f1
(RETURN VALUE) show
95.6 544.6 moveto
12 f0
( ) show
0 518 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 490.9 moveto
12 f1
(SEE ALSO) show
58.3 490.9 moveto
12 f0
( ) show
0 464.3 moveto
12 f0
(2.3.46 cbf_get_value) show
0 451 moveto
12 f0
(2.3.48 cbf_get_integervalue) show
0 437.7 moveto
12 f0
(2.3.51 cbf_set_doublevalue) show
0 424.4 moveto
12 f0
(2.3.52 cbf_get_integerarrayparameters) show
0 411.1 moveto
12 f0
(2.3.53 cbf_get_integerarray) show
0 388.7 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 357.4 moveto
12 f1
(2.3.51 cbf_set_doublevalue) show
0 330.3 moveto
12 f1
(PROTOTYPE) show
74.6 330.3 moveto
12 f0
( ) show
0 303.7 moveto
12 f0
(#include "cbf.h") show
0 277.1 moveto
12 f0
(int cbf_set_doublevalue \(cbf_handle ) show
178.2 277.1 moveto
12 f2
(handle) show
210.8 277.1 moveto
12 f0
(, const char *) show
276.4 277.1 moveto
12 f2
(format) show
308.6 277.1 moveto
12 f0
(, double ) show
350.2 277.1 moveto
12 f2
(number) show
387.1 277.1 moveto
12 f0
(\); ) show
0 250 moveto
12 f1
(DESCRIPTION) show
83.3 250 moveto
12 f0
( ) show
0 223.4 moveto
12 f0
(cbf_set_doublevalue sets the item at the current column and row to the floating-point value ) show
440.6 223.4 moveto
12 f2
(number) show
0 210.1 moveto
12 f0
(written as an ASCII string with the format specified by ) show
269 210.1 moveto
12 f2
(format) show
301.2 210.1 moveto
12 f0
( as appropriate for the printf function. ) show
0 183 moveto
12 f1
(ARGUMENTS) show
3.5 166.2 moveto
12 f0
(  ) show
9.5 166.2 moveto
12 f2
(handle) show
50.6 166.2 moveto
12 f0
(  CBF handle.) show
3.5 148.7 moveto
12 f0
(  ) show
11.2 148.7 moveto
12 f2
(format) show
50.6 148.7 moveto
12 f0
(  Format for the number.) show
3.5 131.2 moveto
12 f0
(  ) show
9.5 131.2 moveto
12 f2
(number) show
50.6 131.2 moveto
12 f0
(  Floating-point value.) show
0 100.6 moveto
12 f1
(RETURN VALUE) show
95.6 100.6 moveto
12 f0
( ) show
pagelevel restore
showpage
%%Page: 43 43
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 682.1 moveto
12 f1
(SEE ALSO) show
58.3 682.1 moveto
12 f0
( ) show
0 655.5 moveto
12 f0
(2.3.46 cbf_get_value) show
0 642.2 moveto
12 f0
(2.3.47 cbf_set_value) show
0 628.9 moveto
12 f0
(2.3.49 cbf_set_integervalue) show
0 615.6 moveto
12 f0
(2.3.50 cbf_get_doublevalue) show
0 602.3 moveto
12 f0
(2.3.54 cbf_set_integerarray) show
0 579.9 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 548.6 moveto
12 f1
(2.3.52 cbf_get_integerarrayparameters) show
0 521.5 moveto
12 f1
(PROTOTYPE) show
74.6 521.5 moveto
12 f0
( ) show
0 494.9 moveto
12 f0
(#include "cbf.h") show
0 468.3 moveto
12 f0
(int cbf_get_integerarrayparameters \(cbf_handle ) show
231.5 468.3 moveto
12 f2
(handle) show
264.1 468.3 moveto
12 f0
(, unsigned int *) show
338.1 468.3 moveto
12 f2
(compression) show
398.7 468.3 moveto
12 f0
(, size_t *) show
441.6 468.3 moveto
12 f2
(repeat) show
472.4 468.3 moveto
12 f0
(, int) show
0 455 moveto
12 f0
(*) show
6 455 moveto
12 f2
(binary_id) show
52.9 455 moveto
12 f0
(, size_t *) show
95.8 455 moveto
12 f2
(elsize) show
122.4 455 moveto
12 f0
(, int *) show
150 455 moveto
12 f2
(elsigned) show
190.3 455 moveto
12 f0
(, int *) show
217.9 455 moveto
12 f2
(elunsigned) show
270.2 455 moveto
12 f0
(, size_t *) show
313.1 455 moveto
12 f2
(elements) show
355 455 moveto
12 f0
(, int *) show
382.6 455 moveto
12 f2
(minelemen) show
434.5 455 moveto
12 f0
(t, int) show
0 441.7 moveto
12 f0
(*) show
6 441.7 moveto
12 f2
(maxelemen) show
59.9 441.7 moveto
12 f0
(t\); ) show
0 414.6 moveto
12 f1
(DESCRIPTION) show
83.3 414.6 moveto
12 f0
( ) show
0 388 moveto
12 f0
(cbf_get_integerarrayparameters sets *) show
182.6 388 moveto
12 f2
(compression) show
243.2 388 moveto
12 f0
(, *) show
255.2 388 moveto
12 f2
(repeat) show
286 388 moveto
12 f0
(, *) show
298 388 moveto
12 f2
(binary_id) show
344.9 388 moveto
12 f0
(, *) show
356.9 388 moveto
12 f2
(elsize) show
383.5 388 moveto
12 f0
(, *) show
395.5 388 moveto
12 f2
(elsigned) show
435.8 388 moveto
12 f0
(, *) show
447.8 388 moveto
12 f2
(elunsigned) show
500.1 388 moveto
12 f0
(,) show
0 374.7 moveto
12 f0
(*) show
6 374.7 moveto
12 f2
(elements) show
47.9 374.7 moveto
12 f0
(, *) show
59.9 374.7 moveto
12 f2
(minelement) show
115.4 374.7 moveto
12 f0
( and *) show
144.7 374.7 moveto
12 f2
(maxelement) show
202.2 374.7 moveto
12 f0
( to values read from the binary value of the item at the current) show
0 361.4 moveto
12 f0
(column and row. This provides all the arguments needed for a subsequent call to cbf_set_integerarray, if) show
0 348.1 moveto
12 f0
(a copy of the arry is to be made into another CIF or CBF. ) show
0 321.5 moveto
12 f0
(If the value is not binary, the function returns CBF_ASCII. ) show
0 294.4 moveto
12 f1
(ARGUMENTS) show
3.5 277.6 moveto
12 f0
(  ) show
9.5 277.6 moveto
12 f2
(handle) show
74.3 277.6 moveto
12 f0
(  CBF handle.) show
3.5 260.1 moveto
12 f0
(  ) show
9.5 260.1 moveto
12 f2
(compression) show
74.3 260.1 moveto
12 f0
(  Compression method used.) show
3.5 242.6 moveto
12 f0
(  ) show
9.5 242.6 moveto
12 f2
(repeat) show
74.3 242.6 moveto
12 f0
(  Second dimension for 2-dimensional arrays \(currently unused\)) show
3.5 225.1 moveto
12 f0
(  ) show
9.5 225.1 moveto
12 f2
(elsize) show
74.3 225.1 moveto
12 f0
(  Size in bytes of each array element.) show
3.5 207.6 moveto
12 f0
(  ) show
9.5 207.6 moveto
12 f2
(binary_id) show
74.3 207.6 moveto
12 f0
(  Pointer to the destination integer binary identifier.) show
3.5 190.1 moveto
12 f0
(  ) show
9.5 190.1 moveto
12 f2
(elsigned) show
74.3 190.1 moveto
12 f0
(  Pointer to an integer. Set to 1 if the elements can be read as signed integers.) show
3.5 172.6 moveto
12 f0
(  ) show
9.5 172.6 moveto
12 f2
(elunsigned) show
74.3 172.6 moveto
12 f0
(  Pointer to an integer. Set to 1 if the elements can be read as unsigned integers.) show
3.5 155.1 moveto
12 f0
(  ) show
9.5 155.1 moveto
12 f2
(elements) show
74.3 155.1 moveto
12 f0
(  Pointer to the destination number of elements.) show
3.5 137.6 moveto
12 f0
(  ) show
9.5 137.6 moveto
12 f2
(minelement) show
74.3 137.6 moveto
12 f0
(  Pointer to the destination smallest element.) show
3.5 120.1 moveto
12 f0
(  ) show
9.5 120.1 moveto
12 f2
(maxelement) show
74.3 120.1 moveto
12 f0
(  Pointer to the destination largest element.) show
0 89.5 moveto
12 f1
(RETURN VALUE) show
95.6 89.5 moveto
12 f0
( ) show
pagelevel restore
showpage
%%Page: 44 44
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 682.1 moveto
12 f1
(SEE ALSO) show
58.3 682.1 moveto
12 f0
( ) show
0 655.5 moveto
12 f0
(2.3.46 cbf_get_value) show
0 642.2 moveto
12 f0
(2.3.48 cbf_get_integervalue) show
0 628.9 moveto
12 f0
(2.3.50 cbf_get_doublevalue) show
0 615.6 moveto
12 f0
(2.3.53 cbf_get_integerarray) show
0 602.3 moveto
12 f0
(2.3.54 cbf_set_integerarray) show
0 579.9 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 548.6 moveto
12 f1
(2.3.53 cbf_get_integerarray) show
0 521.5 moveto
12 f1
(PROTOTYPE) show
74.6 521.5 moveto
12 f0
( ) show
0 494.9 moveto
12 f0
(#include "cbf.h") show
0 468.3 moveto
12 f0
(int cbf_get_integerarray \(cbf_handle ) show
178.9 468.3 moveto
12 f2
(handle) show
211.5 468.3 moveto
12 f0
(, int *) show
239.1 468.3 moveto
12 f2
(binary_id) show
286 468.3 moveto
12 f0
(, void *) show
322.3 468.3 moveto
12 f2
(array) show
348.9 468.3 moveto
12 f0
(, size_t ) show
385.8 468.3 moveto
12 f2
(elsize) show
412.4 468.3 moveto
12 f0
(, int ) show
434 468.3 moveto
12 f2
(elsigned) show
474.3 468.3 moveto
12 f0
(,) show
0 455 moveto
12 f0
(size_t ) show
30.9 455 moveto
12 f2
(elements) show
72.8 455 moveto
12 f0
(, size_t *) show
115.7 455 moveto
12 f2
(elements_read) show
186 455 moveto
12 f0
(\); ) show
0 427.9 moveto
12 f1
(DESCRIPTION) show
83.3 427.9 moveto
12 f0
( ) show
0 401.3 moveto
12 f0
(cbf_get_integerarray reads the binary value of the item at the current column and row into an integer) show
0 388 moveto
12 f0
(array. The array consists of ) show
133.9 388 moveto
12 f2
(elements) show
175.8 388 moveto
12 f0
( elements of ) show
237.4 388 moveto
12 f2
(elsize) show
264 388 moveto
12 f0
( bytes each, starting at ) show
373.9 388 moveto
12 f2
(array) show
400.5 388 moveto
12 f0
(. The elements are) show
0 374.7 moveto
12 f0
(signed if ) show
44.6 374.7 moveto
12 f2
(elsigned) show
84.9 374.7 moveto
12 f0
( is non-0 and unsigned otherwise. *) show
255.2 374.7 moveto
12 f2
(binary_id) show
302.1 374.7 moveto
12 f0
( is set to the binary section identifier and) show
0 361.4 moveto
12 f0
(*) show
6 361.4 moveto
12 f2
(elements_read ) show
78.9 361.4 moveto
12 f0
(to the number of elements actually read. ) show
0 334.8 moveto
12 f0
(If any element in the binary data cant fit into the destination element, the destination is set the nearest) show
0 321.5 moveto
12 f0
(possible value. ) show
0 294.9 moveto
12 f0
(If the value is not binary, the function returns CBF_ASCII. ) show
0 268.3 moveto
12 f0
(If the requested number of elements cant be read, the function will read as many as it can and then return) show
0 255 moveto
12 f0
(CBF_ENDOFDATA. ) show
0 228.4 moveto
12 f0
(Currently, the destination array must consist of chars, shorts or ints \(signed or unsigned\). If ) show
440.6 228.4 moveto
12 f2
(elsize ) show
470.2 228.4 moveto
12 f0
(is not) show
0 215.1 moveto
12 f0
(equal to sizeof \(char\), sizeof \(short\) or sizeof \(int\), the function returns CBF_ARGUMENT. ) show
0 188.5 moveto
12 f0
(An additional restriction in the current version of CBFlib is that values too large to fit in an int are not) show
0 175.2 moveto
12 f0
(correctly decompressed. As an example, if the machine with 32-bit ints is reading an array containing a) show
0 159.3 moveto
12 f0
(value outside the range 0 .. 2^) show
143.6 163.7 moveto
10 f0
(32) show
153.6 159.3 moveto
12 f0
(-1 \(unsigned\) or -2^) show
249.5 163.7 moveto
10 f0
(31) show
259.5 159.3 moveto
12 f0
( .. 2^) show
283.1 163.7 moveto
10 f0
(31) show
293.1 159.3 moveto
12 f0
(-1 \(signed\), the array will not be correctly) show
0 146 moveto
12 f0
(decompressed. This restriction will be removed in a future release. ) show
0 118.9 moveto
12 f1
(ARGUMENTS) show
3.5 102.1 moveto
12 f0
(  ) show
9.5 102.1 moveto
12 f2
(handle) show
84 102.1 moveto
12 f0
(  CBF handle.) show
3.5 84.6 moveto
12 f0
(  ) show
9.5 84.6 moveto
12 f2
(binary_id) show
84 84.6 moveto
12 f0
(  Pointer to the destination integer binary identifier.) show
pagelevel restore
showpage
%%Page: 45 45
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
3.5 709.2 moveto
12 f0
(  ) show
9.5 709.2 moveto
12 f2
(array) show
84 709.2 moveto
12 f0
(  Pointer to the destination array.) show
3.5 691.7 moveto
12 f0
(  ) show
9.5 691.7 moveto
12 f2
(elsize) show
84 691.7 moveto
12 f0
(  Size in bytes of each destination array element.) show
3.5 674.2 moveto
12 f0
(  ) show
9.5 674.2 moveto
12 f2
(elsigned) show
84 674.2 moveto
12 f0
(  Set to non-0 if the destination array elements are signed.) show
3.5 656.7 moveto
12 f0
(  ) show
9.5 656.7 moveto
12 f2
(elements) show
84 656.7 moveto
12 f0
(  The number of elements to read.) show
3.5 639.2 moveto
12 f0
(  ) show
9.5 639.2 moveto
12 f2
(elements_read) show
84 639.2 moveto
12 f0
(  Pointer to the destination number of elements actually read.) show
0 608.6 moveto
12 f1
(RETURN VALUE) show
95.6 608.6 moveto
12 f0
( ) show
0 582 moveto
12 f0
(Returns an error code on failure or 0 for success.) show
0 568.7 moveto
12 f0
(SEE ALSO ) show
0 542.1 moveto
12 f0
(2.3.46 cbf_get_value) show
0 528.8 moveto
12 f0
(2.3.48 cbf_get_integervalue) show
0 515.5 moveto
12 f0
(2.3.50 cbf_get_doublevalue) show
0 502.2 moveto
12 f0
(2.3.52 cbf_get_integerarrayparameters) show
0 488.9 moveto
12 f0
(2.3.54 cbf_set_integerarray) show
0 466.5 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 435.2 moveto
12 f1
(2.3.54 cbf_set_integerarray) show
0 408.1 moveto
12 f1
(PROTOTYPE) show
74.6 408.1 moveto
12 f0
( ) show
0 381.5 moveto
12 f0
(#include "cbf.h") show
0 354.9 moveto
12 f0
(int cbf_set_integerarray \(cbf_handle ) show
177.6 354.9 moveto
12 f2
(handle) show
210.2 354.9 moveto
12 f0
(, unsigned int ) show
278.2 354.9 moveto
12 f2
(compression) show
338.8 354.9 moveto
12 f0
(, size_t ) show
375.7 354.9 moveto
12 f2
(repeat) show
406.5 354.9 moveto
12 f0
(, int ) show
428.1 354.9 moveto
12 f2
(binary_id) show
475 354.9 moveto
12 f0
(, void) show
0 341.6 moveto
12 f0
(*) show
6 341.6 moveto
12 f2
(array) show
32.6 341.6 moveto
12 f0
(, size_t ) show
69.5 341.6 moveto
12 f2
(elsize) show
96.1 341.6 moveto
12 f0
(, int ) show
117.7 341.6 moveto
12 f2
(elsigned) show
158 341.6 moveto
12 f0
(, size_t ) show
194.9 341.6 moveto
12 f2
(elements) show
236.8 341.6 moveto
12 f0
(\); ) show
0 314.5 moveto
12 f1
(DESCRIPTION) show
83.3 314.5 moveto
12 f0
( ) show
0 287.9 moveto
12 f0
(cbf_set_integerarray sets the binary value of the item at the current column and row to an integer ) show
468.2 287.9 moveto
12 f2
(array) show
494.8 287.9 moveto
12 f0
(.) show
0 274.6 moveto
12 f0
(The array consists of ) show
103.3 274.6 moveto
12 f2
(elements) show
145.2 274.6 moveto
12 f0
( elements of ) show
206.8 274.6 moveto
12 f2
(elsize) show
233.4 274.6 moveto
12 f0
( bytes each, starting at ) show
343.3 274.6 moveto
12 f2
(array) show
369.9 274.6 moveto
12 f0
(. The elements are signed if) show
0 261.3 moveto
12 f2
(elsigned) show
40.3 261.3 moveto
12 f0
( is non-0 and unsigned otherwise. ) show
204.6 261.3 moveto
12 f2
(binary_id) show
251.5 261.3 moveto
12 f0
( is the binary section identifier. ) show
0 234.7 moveto
12 f0
(The array will be compressed using the compression scheme specifed by ) show
352.2 234.7 moveto
12 f2
(compression) show
412.8 234.7 moveto
12 f0
(. Currently, the) show
0 221.4 moveto
12 f0
(available schemes are: ) show
3.5 191.3 moveto
12 f0
(  CBF_CANONICAL) show
113 191.3 moveto
12 f0
(  Canonical-code compression \(section 3.3.1\)) show
3.5 173.8 moveto
12 f0
(  CBF_PACKED) show
113 173.8 moveto
12 f0
(  CCP4-style packing \(section 3.3.2\) ) show
3.5 156.3 moveto
12 f0
(  CBF_NONE) show
113 156.3 moveto
12 f0
(  No compression. NOTE: This scheme is by far the slowest of the three and) show
113 143 moveto
12 f0
(uses much more disk space. It is intended for routine use with small arrays only.) show
113 129.7 moveto
12 f0
(With large arrays \(like images\) it should be used only for debugging. ) show
0 99.6 moveto
12 f0
(The values compressed are limited to 64 bits. If any element in the array is larger than 64 bits, the value) show
0 86.3 moveto
12 f0
(compressed is the nearest 64-bit value. ) show
pagelevel restore
showpage
%%Page: 46 46
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 707.7 moveto
12 f0
(Currently, the source array must consist of chars, shorts or ints \(signed or unsigned\). If ) show
419.2 707.7 moveto
12 f2
(elsize ) show
448.8 707.7 moveto
12 f0
(is not) show
0 694.4 moveto
12 f0
(equal to sizeof \(char\), sizeof \(short\) or sizeof \(int\), the function returns CBF_ARGUMENT. ) show
0 667.3 moveto
12 f1
(ARGUMENTS) show
0 654 moveto
12 f0
(  ) show
6 654 moveto
12 f2
(handle) show
38.6 654 moveto
12 f0
(  CBF handle.) show
0 640.7 moveto
12 f0
(  ) show
6 640.7 moveto
12 f2
(compression) show
66.6 640.7 moveto
12 f0
(  Compression method to use.) show
0 627.4 moveto
12 f0
(  ) show
6 627.4 moveto
12 f2
(repeat) show
36.8 627.4 moveto
12 f0
(  Second dimension for 2-dimensional arrays \(currently unused\)) show
0 614.1 moveto
12 f0
(  ) show
6 614.1 moveto
12 f2
(binary_id) show
52.9 614.1 moveto
12 f0
(  Integer binary identifier.) show
0 600.8 moveto
12 f0
(  ) show
6 600.8 moveto
12 f2
(array) show
32.6 600.8 moveto
12 f0
(  Pointer to the source array.) show
0 587.5 moveto
12 f0
(  ) show
6 587.5 moveto
12 f2
(elsize) show
32.6 587.5 moveto
12 f0
(  Size in bytes of each source array element.) show
0 574.2 moveto
12 f0
(  ) show
6 574.2 moveto
12 f2
(elsigned) show
46.3 574.2 moveto
12 f0
(  Set to non-0 if the source array elements are signed.) show
0 560.9 moveto
12 f0
(elements: The number of elements in the array. ) show
0 533.8 moveto
12 f1
(RETURN VALUE) show
95.6 533.8 moveto
12 f0
( ) show
0 507.2 moveto
12 f0
(Returns an error code on failure or 0 for success. ) show
0 480.1 moveto
12 f1
(SEE ALSO) show
58.3 480.1 moveto
12 f0
( ) show
0 453.5 moveto
12 f0
(2.3.47 cbf_set_value) show
0 440.2 moveto
12 f0
(2.3.49 cbf_set_integervalue) show
0 426.9 moveto
12 f0
(2.3.51 cbf_set_doublevalue) show
0 413.6 moveto
12 f0
(2.3.52 cbf_get_integerarrayparameters) show
0 400.3 moveto
12 f0
(2.3.53 cbf_get_integerarray) show
0 377.9 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 346.6 moveto
12 f1
(2.3.55 cbf_failnez) show
0 319.5 moveto
12 f1
(DEFINITION) show
72.6 319.5 moveto
12 f0
( ) show
0 292.9 moveto
12 f0
(#include "cbf.h") show
0 266.3 moveto
12 f0
(#define cbf_failnez\(f\) {int err; err = \(f\); if \(err\) return err; } ) show
0 239.2 moveto
12 f1
(DESCRIPTION) show
83.3 239.2 moveto
12 f0
( ) show
0 212.6 moveto
12 f0
(cbf_failnez is a macro used for error propagation throughout CBFlib. cbf_failnez executes the function ) show
498.5 212.6 moveto
12 f2
(f) show
0 199.3 moveto
12 f0
(and saves the returned error value. If the error value is non-0, cbf_failnez executes a return with the error) show
0 186 moveto
12 f0
(value as argument. ) show
0 158.9 moveto
12 f1
(ARGUMENTS) show
3.5 142.1 moveto
12 f0
(  ) show
11.2 142.1 moveto
12 f2
(f) show
20.4 142.1 moveto
12 f0
(  Integer function to execute.) show
0 111.5 moveto
12 f1
(SEE ALSO) show
58.3 111.5 moveto
12 f0
( ) show
0 84.9 moveto
12 f0
(2.3.56 cbf_onfailnez) show
pagelevel restore
showpage
%%Page: 47 47
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 710.5 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 679.2 moveto
12 f1
(2.3.56 cbf_onfailnez) show
0 652.1 moveto
12 f1
(DEFINITION) show
72.6 652.1 moveto
12 f0
( ) show
0 625.5 moveto
12 f0
(#include "cbf.h") show
0 598.9 moveto
12 f0
(#define cbf_onfailnez\(f,c\) {int err; err = \(f\); if \(err\) {{c; }return err; }} ) show
0 571.8 moveto
12 f1
(DESCRIPTION) show
83.3 571.8 moveto
12 f0
( ) show
0 545.2 moveto
12 f0
(cbf_onfailnez is a macro used for error propagation throughout CBFlib. cbf_onfailnez executes the) show
0 531.9 moveto
12 f0
(function ) show
44.6 531.9 moveto
12 f2
(f) show
49.6 531.9 moveto
12 f0
( and saves the returned error value. If the error value is non-0, cbf_failnez executes first the) show
0 518.6 moveto
12 f0
(statement ) show
48.9 518.6 moveto
12 f2
(c) show
54.2 518.6 moveto
12 f0
( and then a return with the error value as argument. ) show
0 491.5 moveto
12 f1
(ARGUMENTS) show
3.5 474.7 moveto
12 f0
(  ) show
11.2 474.7 moveto
12 f2
(f) show
20.4 474.7 moveto
12 f0
(  integer function to execute.) show
3.5 457.2 moveto
12 f0
(  ) show
9.5 457.2 moveto
12 f2
(c) show
20.4 457.2 moveto
12 f0
(  statement to execute on failure.) show
0 426.6 moveto
12 f1
(SEE ALSO) show
58.3 426.6 moveto
12 f0
( ) show
0 400 moveto
12 f0
(2.3.55 cbf_failnez) show
0 377.6 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 344.5 moveto
14 f1
(3. File format) show
0 317 moveto
12 f1
(3.1 General description) show
0 290.4 moveto
12 f0
(With the exception of the binary sections, a CBF file is an mmCIF-format ASCII file, so a CBF file with) show
0 277.1 moveto
12 f0
(no binary sections is a CIF file. An imgCIF file has any binary sections encoded as CIF-format ASCII) show
0 263.8 moveto
12 f0
(strings and is a CIF file whether or not it contains binary sections. In most cases, CBFlib can also be) show
0 250.5 moveto
12 f0
(used to access normal CIF files as well as CBF and imgCIF files. ) show
0 223.4 moveto
12 f1
(3.2 Format of the binary sections) show
0 196.8 moveto
12 f0
(Before getting to the binary data itself, there are some preliminaries to allow a smooth transition from) show
0 183.5 moveto
12 f0
(the conventions of CIF to those of raw or encoded streams of "octets" \(8-bit bytes\). The binary data is) show
0 170.2 moveto
12 f0
(given as the essential part of a specially formatted semicolon-delimited CIF multi-line text string. This) show
0 156.9 moveto
12 f0
(text string is the value associated with the tag "_array_data.data". ) show
0 130.3 moveto
12 f0
(The specific format of the binary sections differs between an imgCIF and a CBF file. ) show
0 103.2 moveto
12 f1
(3.2.1 Format of imgCIF binary sections) show
0 76.6 moveto
12 f0
(Each binary section is encoded as a ;-delimited string. Within the text string, the conventions developed) show
pagelevel restore
showpage
%%Page: 48 48
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(for transmitting email messages including binary attachments are followed. There is secondary ASCII) show
0 695.9 moveto
12 f0
(header information, formatted as Multipurpose Internet Mail Extensions \(MIME\) headers \(see RFCs) show
0 682.6 moveto
12 f0
(2045-49 by Freed, et. al\). The boundary marker for the beginning of all this is the special string ) show
0 658.7 moveto
10 f4
(--CIF-BINARY-FORMAT-SECTION--) show
0 635 moveto
12 f0
(at the beginning of a line. The initial "--" says that this is a MIME boundary. We cannot put "###" in) show
0 621.7 moveto
12 f0
(front of it and conform to MIME conventions. Immediately after the boundary marker are MIME) show
0 608.4 moveto
12 f0
(headers, describing some useful information we will need to process the binary section. MIME headers) show
0 595.1 moveto
12 f0
(can appear in different orders, and can be very confusing \(look at the raw contents of a email message) show
0 581.8 moveto
12 f0
(with attachments\), but there is only one header which is has to be understood to process an imgCIF:) show
0 568.5 moveto
12 f0
("Content-Transfer-Encoding". If the value given on this header is "BINARY", this is a CBF and the data) show
0 555.2 moveto
12 f0
(will be presented as raw binary, containing a count \(in the header described in ) show
377.5 555.2 moveto
12 f0
(3.2.2 Format of CBF) show
0 541.9 moveto
12 f0
(binary sections) show
72.3 541.9 moveto
12 f0
(\) so we'll know when to start looking for more information. ) show
0 515.3 moveto
12 f0
(If the value given for "Content-Tranfer-Encoding" is one of the real encodings: "BASE64",) show
0 502 moveto
12 f0
("QUOTED-PRINTABLE", "X-BASE8", "X-BASE10" or "X-BASE16", the file is an imgCIF, and we'll) show
0 488.7 moveto
12 f0
(need some other the other headers to process the encoded binary data properly. It is a good practice to) show
0 475.4 moveto
12 f0
(give headers in all cases. The meanings of various encodings is given in the CBF extensions dictionary,) show
0 462.1 moveto
12 f0
(cbfext98.dic) show
59.6 462.1 moveto
12 f0
(. ) show
0 435.5 moveto
12 f0
(The "Content-Type" header tells us what sort of data we have \(currently always) show
0 422.2 moveto
12 f0
("application/octet-stream" for a miscellaneous stream of binary data\) and, optionally, the conversions) show
0 408.9 moveto
12 f0
(that were applied to the original data. In this case we have compressed the data with the) show
0 395.6 moveto
12 f0
("CBF-PACKED" algorithm. ) show
0 369 moveto
12 f0
(The "X-Binary-ID" header should contain the same value as was given for "_array_data.binary_id". ) show
0 341.9 moveto
12 f0
(The "X-Binary-Size" header gives the expected size of the binary data. This is the size ) show
417.6 341.9 moveto
12 f1
(after) show
442.2 341.9 moveto
12 f0
( any) show
0 328.6 moveto
12 f0
(compressions, but before any ascii encodings. This is useful in making a simple check for a missing) show
0 315.3 moveto
12 f0
(portion of this file. The 8 bytes for the Compression type \(see below\) are not counted in this field, so the) show
0 302 moveto
12 f0
(value of "X-Binary-Size" is 8 less than the quantity in bytes 12-19 of raw binary data \() show
415.7 302 moveto
12 f0
( 3.2.2 Format of) show
0 288.7 moveto
12 f0
(CBF binary sections) show
98 288.7 moveto
12 f0
(\). ) show
0 262.1 moveto
12 f0
(The optional "Content-MD5" header provides a much more sophisticated check on the integrity of the) show
0 248.8 moveto
12 f0
(binary data. Note that this check value is applied to the data after the 8 bytes for the Compression type. ) show
0 222.2 moveto
12 f0
(A blank line separator immediately precedes the start of the encoded binary data. Blank spaces may be) show
0 208.9 moveto
12 f0
(added prior to the preceding "line separator" if desired \(e.g. to force word or block alignment\). ) show
0 182.3 moveto
12 f0
(Because CBFLIB may jump foreward in the file from the MIME header, the length of encoded data) show
0 169 moveto
12 f0
(cannot be greater than the value defined by "X-Binary-Size" \(except when "X-Binary-Size" is zero,) show
0 155.7 moveto
12 f0
(which means that the size is unknown\). At exactly the byte following the full binary section as defined) show
0 142.4 moveto
12 f0
(by the length value is the end of binary section identifier. This consists of the line-termination sequence) show
0 129.1 moveto
12 f0
(followed by: ) show
0 105.2 moveto
10 f4
(--CIF-BINARY-FORMAT-SECTION----) show
0 94.7 moveto
10 f4
(;) show
pagelevel restore
showpage
%%Page: 49 49
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(with each of these lines followed by a line-termination sequence. This brings us back into a normal CIF) show
0 695.9 moveto
12 f0
(environment. This identifier is, in a sense, redundant because the binary data length value tells the a) show
0 682.6 moveto
12 f0
(program how many bytes to jump over to the end of the binary data. This redundancy has been) show
0 669.3 moveto
12 f0
(deliberately added for error checking, and for possible file recovery in the case of a corrupted file and) show
0 656 moveto
12 f0
(this identifier must be present at the end of every block of binary data. ) show
0 628.9 moveto
12 f1
(3.2.2 Format of CBF binary sections) show
0 602.3 moveto
12 f0
(In a CBF file, Each binary section is encoded as a ;-delimited string, starting with an arbitrary number of) show
0 589 moveto
12 f0
(pure-ASCII characters. Currently, CIFLIB has the option of writing simple header and footer sections:) show
0 575.7 moveto
12 f0
("START OF BINARY SECTION" at the start of a binary section and "END OF BINARY SECTION") show
0 562.4 moveto
12 f0
(at the end of a binary section, or writing MIME-type header and footer sections \( ) show
391.2 562.4 moveto
12 f0
(3.2.1 Format of) show
0 549.1 moveto
12 f0
(imgCIF binary sections) show
112.6 549.1 moveto
12 f0
(\). If the simple header is used, the actual ASCII text is ignored when the binary) show
0 535.8 moveto
12 f0
(section is read. If the MIME header is used, a cross-check is made between the information given in the) show
0 522.5 moveto
12 f0
(binary section and the information in the MIME header, and a format error is returned if they do not) show
0 509.2 moveto
12 f0
(agree. Because of these extra checks, the MIME header is recommended. ) show
0 469.3 moveto
12 f0
(Between the ASCII header and the actual CBF binary data is a series of bytes \("octets"\) to try to stop the) show
0 456 moveto
12 f0
(listing of the header, bytes which define the binary identifier which should match the "binary_id") show
0 442.7 moveto
12 f0
(defined in the header, and bytes which define the length of the binary section.) show
18.9 398.8 moveto
12 f1
(Octet ) show
69.4 398.8 moveto
12 f1
(Hex ) show
97.2 398.8 moveto
12 f1
(Decimal ) show
225.5 398.8 moveto
12 f1
(Purpose ) show
3.5 381.3 moveto
12 f0
(   1 ) show
69.4 381.3 moveto
12 f0
(  1A ) show
97.2 381.3 moveto
12 f0
(  26 ) show
146.3 381.3 moveto
12 f0
(  \(ctrl-Z\) Stop listings in MS-DOS ) show
3.5 363.8 moveto
12 f0
(   2 ) show
69.4 363.8 moveto
12 f0
(  04 ) show
97.2 363.8 moveto
12 f0
(  04 ) show
146.3 363.8 moveto
12 f0
(  \(Ctrl-D\) Stop listings in UNIX ) show
3.5 346.3 moveto
12 f0
(   3 ) show
69.4 346.3 moveto
12 f0
(  D5 ) show
97.2 346.3 moveto
12 f0
(  213 ) show
146.3 346.3 moveto
12 f0
(  Binary section begins ) show
3.5 328.8 moveto
12 f0
(   4..11 ) show
69.4 315.5 moveto
12 f0
(   ) show
97.2 315.5 moveto
12 f0
(    ) show
146.3 328.8 moveto
12 f0
(  Binary Section Identifier) show
146.3 315.5 moveto
12 f0
(\(See _array_data.binary_id\)) show
146.3 302.2 moveto
12 f0
(64-bit, little endian ) show
3.5 284.7 moveto
12 f0
(   12..19 ) show
69.4 258.1 moveto
12 f0
(   ) show
97.2 258.1 moveto
12 f0
(    ) show
146.3 284.7 moveto
12 f0
(  8+ the size \(n\) of the) show
146.3 271.4 moveto
12 f0
(binary section in octets) show
146.3 258.1 moveto
12 f0
(\(i.e. the offset from octet) show
146.3 244.8 moveto
12 f0
(20 to the first byte following) show
146.3 231.5 moveto
12 f0
(the data\) ) show
3.5 214 moveto
12 f0
(   20..27) show
69.4 160.1 moveto
12 f0
(   ) show
97.2 160.1 moveto
12 f0
(    ) show
146.3 214 moveto
12 f0
(  Compression type:) show
151.8 197.2 moveto
12 f0
(  CBF_NONE   0x0040 \(64\) ) show
151.8 179.7 moveto
12 f0
(  CBF_CANONICAL   0x0050 \(80\) ) show
151.8 162.2 moveto
12 f0
(  CBF_PACKED   0x0060 \(96\) ) show
151.8 144.7 moveto
12 f0
(  CBF_BYTE_OFFSET   0x0070 \(112\) ) show
151.8 127.2 moveto
12 f0
(  CBF_PREDICTOR   0x0080 \(128\) ) show
151.8 109.7 moveto
12 f0
(  ...   &NBSP; ) show
3.5 88.7 moveto
12 f0
(   28..28+n-1) show
69.4 88.7 moveto
12 f0
(   ) show
97.2 88.7 moveto
12 f0
(    ) show
146.3 88.7 moveto
12 f0
(  Binary data \(n octets\) ) show
pagelevel restore
showpage
%%Page: 50 50
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 706.6 moveto
12 f0
(NOTE: If a MIME header is used, only bytes 28..28+n-1 are considered in comouting the size and the) show
0 693.3 moveto
12 f0
(message digest, and only these bytes are encoded for the equivalent imgCIF file using the indicated) show
0 680 moveto
12 f0
(Content-Transfer-Encoding. ) show
0 653.4 moveto
12 f0
(The binary characters serve specific purposes: ) show
18.1 630.9 moveto
3.3 3.3 c  stroke 
28 626.8 moveto
12 f0
(The Control-Z will stop the listing of the file on MS-DOS type operating systems. ) show
18.1 604.3 moveto
3.3 3.3 c  stroke 
28 600.2 moveto
12 f0
(The Control-D will stop the listing of the file on Unix type operating systems. ) show
18.1 577.7 moveto
3.3 3.3 c  stroke 
28 573.6 moveto
12 f0
(The unsigned byte value 213 \(decimal\) is binary 11010101. \(Octal 325, and hexadecimal D5\).) show
28 560.3 moveto
12 f0
(This has the eighth bit set so can be used for error checking on 7-bit transmission. It is also) show
28 547 moveto
12 f0
(asymmetric, but with the first bit also set in the case that the bit order could be reversed \(which is) show
28 533.7 moveto
12 f0
(not a known concern\). ) show
18.1 511.2 moveto
3.3 3.3 c  stroke 
28 507.1 moveto
12 f0
(\(The carriage return, line-feed pair before the START_OF_BIN and other lines can also be used to) show
28 493.8 moveto
12 f0
(check that the file has not been corrupted e.g. by being sent by ftp in ASCII mode.\) ) show
18.1 471.3 moveto
3.3 3.3 c  stroke 
28 467.2 moveto
12 f0
(Bytes 4-11 define the binary id of the binary data. This id is also used within the header sections,) show
28 453.9 moveto
12 f0
(so that binary data definitions can be matched to the binary data sections. 64-bits allows many) show
28 440.6 moveto
12 f0
(many more binary data sections to be addressed than can conceivably be needed. ) show
18.1 418.1 moveto
3.3 3.3 c  stroke 
28 414 moveto
12 f0
(Bytes 12-19 define the length in bytes of the binary data plus the flag word for the compression) show
28 400.7 moveto
12 f0
(type \(8 bytes\). This information is critical to recovering alignment with the CIF world, since the) show
28 387.4 moveto
12 f0
(binary data could easily include bytes which look like "\\n;" or the boundary marker. The use of 64) show
28 374.1 moveto
12 f0
(bits provides for enormous expansion from present images sizes, but volume and higher) show
28 360.8 moveto
12 f0
(dimensional data may need more than 32-bit sizes in the future. ) show
28 334.2 moveto
12 f0
(It is tempting to set this value to zero if this is the last binary information or header information in) show
28 320.9 moveto
12 f0
(the file, but you could cause unpleasant warnings in code that expects to be able to find the rest of) show
28 307.6 moveto
12 f0
(a CIF. This allows a program writing, for example, a single compressed image to avoid having to) show
28 294.3 moveto
12 f0
(rewind the file to write the size of the compressed data. \(For small files compression within) show
28 281 moveto
12 f0
(memory may be practical, and this may not be an issue. However very large files exist where) show
28 267.7 moveto
12 f0
(writing the compressed data "on the fly" may be the only realistic method.\) This should only be) show
28 254.4 moveto
12 f0
(done for internal use within a group, and a cleanup utility should be used to restore the missing) show
28 241.1 moveto
12 f0
(data before exporting it to groups which may have difficulty processing this truncated file. In any) show
28 227.8 moveto
12 f0
(case, it is recommended that this value be set, as it permits concatenation of files, and a file with a) show
28 214.5 moveto
12 f0
(zero for this field is not a valid CBF. ) show
28 187.9 moveto
12 f0
(Since the data may have been compressed, knowing the numbers of elements and size of each) show
28 174.6 moveto
12 f0
(element does not necessarily tell a program how many bytes to jump over, so here it is stored) show
28 161.3 moveto
12 f0
(explicitly. This also means that the reading program does not have to decode information in the) show
28 148 moveto
12 f0
(header section to move through the file. ) show
28 108.1 moveto
12 f0
(Bytes 20-27 hold the flag for the compression type. At present three are defined: CBF_NONE \(for) show
28 94.8 moveto
12 f0
(no compression\), CBF_CANONICAL \(for and entropy-coding scheme based on the) show
28 81.5 moveto
12 f0
(canonical-code algorithm described by Moffat, ) show
256.6 81.5 moveto
12 f2
(et al) show
277.6 81.5 moveto
12 f0
(. \() show
287.5 81.5 moveto
12 f2
(International Journal of High Speed) show
pagelevel restore
showpage
%%Page: 51 51
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
28 709.2 moveto
12 f2
(Electronics and Systems) show
144.6 709.2 moveto
12 f0
(, Vol 8, No 1 \(1997\) 179-231\)\) and CBF_PACKED for a CCP4-style) show
28 695.9 moveto
12 f0
(packing scheme. Flags for other compression schemes, such as the two in this document will be) show
28 682.6 moveto
12 f0
(added to this list in the future. ) show
0 656 moveto
12 f0
(As written by CBFLIB, the structure of a binary section with simple headers is: ) show
3.5 625.4 moveto
12 f1
(Byte) show
49.7 625.4 moveto
12 f1
(ASCII) show
49.7 611.6 moveto
12 f1
(symbol) show
155.8 625.4 moveto
12 f1
(Decimal ) show
155.8 611.6 moveto
12 f1
(value) show
204.9 625.4 moveto
12 f1
(Description ) show
3.5 594.1 moveto
12 f0
(  1) show
49.7 594.1 moveto
12 f0
(  ;) show
155.8 594.1 moveto
12 f0
(  59) show
204.9 594.1 moveto
12 f0
(  Initial ; delimiter) show
3.5 576.6 moveto
12 f0
(  2) show
49.7 576.6 moveto
12 f0
(  carriage-return) show
155.8 576.6 moveto
12 f0
(  13) show
204.9 576.6 moveto
12 f0
(  ) show
3.5 559.1 moveto
12 f0
(  3) show
49.7 559.1 moveto
12 f0
(  line-feed) show
155.8 559.1 moveto
12 f0
(  10) show
204.9 559.1 moveto
12 f0
(  The CBF new-line code is carriage-return, line-feed) show
3.5 541.6 moveto
12 f0
(  4) show
49.7 541.6 moveto
12 f0
(  S) show
155.8 541.6 moveto
12 f0
(  83) show
204.9 541.6 moveto
12 f0
(  ) show
3.5 524.1 moveto
12 f0
(  5) show
49.7 524.1 moveto
12 f0
(  T) show
155.8 524.1 moveto
12 f0
(  84) show
204.9 524.1 moveto
12 f0
(  ) show
3.5 506.6 moveto
12 f0
(  6) show
49.7 506.6 moveto
12 f0
(  A) show
155.8 506.6 moveto
12 f0
(  65) show
204.9 506.6 moveto
12 f0
(  ) show
3.5 489.1 moveto
12 f0
(  7) show
49.7 489.1 moveto
12 f0
(  R) show
155.8 489.1 moveto
12 f0
(  83) show
204.9 489.1 moveto
12 f0
(  ) show
3.5 471.6 moveto
12 f0
(  8) show
49.7 471.6 moveto
12 f0
(  T) show
155.8 471.6 moveto
12 f0
(  84) show
204.9 471.6 moveto
12 f0
(  ) show
3.5 454.1 moveto
12 f0
(  9) show
49.7 454.1 moveto
12 f0
(  ) show
155.8 454.1 moveto
12 f0
(  32) show
204.9 454.1 moveto
12 f0
(  ) show
3.5 436.6 moveto
12 f0
(  10) show
49.7 436.6 moveto
12 f0
(  O) show
155.8 436.6 moveto
12 f0
(  79) show
204.9 436.6 moveto
12 f0
(  ) show
3.5 419.1 moveto
12 f0
(  11) show
49.7 419.1 moveto
12 f0
(  F) show
155.8 419.1 moveto
12 f0
(  70) show
204.9 419.1 moveto
12 f0
(  ) show
3.5 401.6 moveto
12 f0
(  12) show
49.7 401.6 moveto
12 f0
(  ) show
155.8 401.6 moveto
12 f0
(  32) show
204.9 401.6 moveto
12 f0
(  ) show
3.5 384.1 moveto
12 f0
(  13) show
49.7 384.1 moveto
12 f0
(  B) show
155.8 384.1 moveto
12 f0
(  66) show
204.9 384.1 moveto
12 f0
(  ) show
3.5 366.6 moveto
12 f0
(  14) show
49.7 366.6 moveto
12 f0
(  I) show
155.8 366.6 moveto
12 f0
(  73) show
204.9 366.6 moveto
12 f0
(  ) show
3.5 349.1 moveto
12 f0
(  15) show
49.7 349.1 moveto
12 f0
(  N) show
155.8 349.1 moveto
12 f0
(  78) show
204.9 349.1 moveto
12 f0
(  ) show
3.5 331.6 moveto
12 f0
(  16) show
49.7 331.6 moveto
12 f0
(  A) show
155.8 331.6 moveto
12 f0
(  65) show
204.9 331.6 moveto
12 f0
(  ) show
3.5 314.1 moveto
12 f0
(  17) show
49.7 314.1 moveto
12 f0
(  R) show
155.8 314.1 moveto
12 f0
(  83) show
204.9 314.1 moveto
12 f0
(  ) show
3.5 296.6 moveto
12 f0
(  18) show
49.7 296.6 moveto
12 f0
(  Y) show
155.8 296.6 moveto
12 f0
(  89) show
204.9 296.6 moveto
12 f0
(  ) show
3.5 279.1 moveto
12 f0
(  19) show
49.7 279.1 moveto
12 f0
(  ) show
155.8 279.1 moveto
12 f0
(  32) show
204.9 279.1 moveto
12 f0
(  ) show
3.5 261.6 moveto
12 f0
(  20) show
49.7 261.6 moveto
12 f0
(  S) show
155.8 261.6 moveto
12 f0
(  83) show
204.9 261.6 moveto
12 f0
(  ) show
3.5 244.1 moveto
12 f0
(  21) show
49.7 244.1 moveto
12 f0
(  E) show
155.8 244.1 moveto
12 f0
(  69) show
204.9 244.1 moveto
12 f0
(  ) show
3.5 226.6 moveto
12 f0
(  22) show
49.7 226.6 moveto
12 f0
(  C) show
155.8 226.6 moveto
12 f0
(  67) show
204.9 226.6 moveto
12 f0
(  ) show
3.5 209.1 moveto
12 f0
(  23) show
49.7 209.1 moveto
12 f0
(  T) show
155.8 209.1 moveto
12 f0
(  84) show
204.9 209.1 moveto
12 f0
(  ) show
3.5 191.6 moveto
12 f0
(  24) show
49.7 191.6 moveto
12 f0
(  I) show
155.8 191.6 moveto
12 f0
(  73) show
204.9 191.6 moveto
12 f0
(  ) show
3.5 174.1 moveto
12 f0
(  25) show
49.7 174.1 moveto
12 f0
(  O) show
155.8 174.1 moveto
12 f0
(  79) show
204.9 174.1 moveto
12 f0
(  ) show
3.5 156.6 moveto
12 f0
(  26) show
49.7 156.6 moveto
12 f0
(  N) show
155.8 156.6 moveto
12 f0
(  78) show
204.9 156.6 moveto
12 f0
(  ) show
3.5 139.1 moveto
12 f0
(  27) show
49.7 139.1 moveto
12 f0
(  carriage-return) show
155.8 139.1 moveto
12 f0
(  13) show
204.9 139.1 moveto
12 f0
(  ) show
3.5 121.6 moveto
12 f0
(  28) show
49.7 121.6 moveto
12 f0
(  line-feed) show
155.8 121.6 moveto
12 f0
(  10) show
204.9 121.6 moveto
12 f0
(  ) show
3.5 104.1 moveto
12 f0
(  29) show
49.7 104.1 moveto
12 f0
(  form-feed) show
155.8 104.1 moveto
12 f0
(  10) show
204.9 104.1 moveto
12 f0
(  ) show
3.5 86.6 moveto
12 f0
(  30) show
49.7 86.6 moveto
12 f0
(  substitute) show
155.8 86.6 moveto
12 f0
(  26) show
204.9 86.6 moveto
12 f0
(  Stop the listing of the file in MS-DOS) show
pagelevel restore
showpage
%%Page: 52 52
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
3.5 709.2 moveto
12 f0
(  31) show
49.7 709.2 moveto
12 f0
(  end-of-transmission) show
155.8 709.2 moveto
12 f0
(  4) show
204.9 709.2 moveto
12 f0
(  Stop the listing of the file in unix) show
3.5 691.7 moveto
12 f0
(  32) show
49.7 691.7 moveto
12 f0
(  ) show
155.8 691.7 moveto
12 f0
(  213) show
204.9 691.7 moveto
12 f0
(  First non-ASCII value) show
3.5 674.2 moveto
12 f0
(  33 .. 40) show
49.7 674.2 moveto
12 f0
(  ) show
155.8 674.2 moveto
12 f0
(  ) show
204.9 674.2 moveto
12 f0
(  Binary section identifier \(64-bit little-endien\)) show
3.5 650.1 moveto
12 f0
(  41 .. 48) show
49.7 650.1 moveto
12 f0
(  ) show
155.8 650.1 moveto
12 f0
(  ) show
204.9 656.7 moveto
12 f0
(  Offset from byte 48 to the first ASCII character following) show
204.9 643.4 moveto
12 f0
(the binary data) show
3.5 625.9 moveto
12 f0
(  49 .. 56) show
49.7 625.9 moveto
12 f0
(  ) show
155.8 625.9 moveto
12 f0
(  ) show
204.9 625.9 moveto
12 f0
(  Compression type) show
3.5 608.4 moveto
12 f0
(57 .. 57 + ) show
52.2 608.4 moveto
12 f2
(n) show
58.2 608.4 moveto
12 f0
(-1) show
155.8 608.4 moveto
12 f0
(  ) show
204.9 608.4 moveto
12 f0
(  Binary data \() show
273.5 608.4 moveto
12 f2
(n) show
279.5 608.4 moveto
12 f0
(bytes\)) show
3.5 590.9 moveto
12 f0
(  57 + ) show
34.2 590.9 moveto
12 f2
(n) show
40.2 590.9 moveto
12 f0
( ) show
49.7 590.9 moveto
12 f0
(  carriage-return) show
155.8 590.9 moveto
12 f0
(  13) show
204.9 590.9 moveto
12 f0
(  ) show
3.5 573.4 moveto
12 f0
(  58 + ) show
34.2 573.4 moveto
12 f2
(n) show
40.2 573.4 moveto
12 f0
( ) show
49.7 573.4 moveto
12 f0
(  line-feed) show
155.8 573.4 moveto
12 f0
(  10) show
204.9 573.4 moveto
12 f0
(  ) show
3.5 555.9 moveto
12 f0
(  59 + ) show
34.2 555.9 moveto
12 f2
(n) show
40.2 555.9 moveto
12 f0
( ) show
49.7 555.9 moveto
12 f0
(  E) show
155.8 555.9 moveto
12 f0
(  69) show
204.9 555.9 moveto
12 f0
(  ) show
3.5 538.4 moveto
12 f0
(  60 + ) show
34.2 538.4 moveto
12 f2
(n) show
40.2 538.4 moveto
12 f0
( ) show
49.7 538.4 moveto
12 f0
(  N) show
155.8 538.4 moveto
12 f0
(  78) show
204.9 538.4 moveto
12 f0
(  ) show
3.5 520.9 moveto
12 f0
(  61 + ) show
34.2 520.9 moveto
12 f2
(n) show
40.2 520.9 moveto
12 f0
( ) show
49.7 520.9 moveto
12 f0
(  D) show
155.8 520.9 moveto
12 f0
(  68) show
204.9 520.9 moveto
12 f0
(  ) show
3.5 503.4 moveto
12 f0
(  62 + ) show
34.2 503.4 moveto
12 f2
(n) show
40.2 503.4 moveto
12 f0
( ) show
49.7 503.4 moveto
12 f0
(  ) show
155.8 503.4 moveto
12 f0
(  32) show
204.9 503.4 moveto
12 f0
(  ) show
3.5 485.9 moveto
12 f0
(  63 + ) show
34.2 485.9 moveto
12 f2
(n) show
40.2 485.9 moveto
12 f0
( ) show
49.7 485.9 moveto
12 f0
(  O) show
155.8 485.9 moveto
12 f0
(  79) show
204.9 485.9 moveto
12 f0
(  ) show
3.5 468.4 moveto
12 f0
(  64 + ) show
34.2 468.4 moveto
12 f2
(n) show
40.2 468.4 moveto
12 f0
( ) show
49.7 468.4 moveto
12 f0
(  F) show
155.8 468.4 moveto
12 f0
(  70) show
204.9 468.4 moveto
12 f0
(  ) show
3.5 450.9 moveto
12 f0
(  65 + ) show
34.2 450.9 moveto
12 f2
(n) show
40.2 450.9 moveto
12 f0
( ) show
49.7 450.9 moveto
12 f0
(  ) show
155.8 450.9 moveto
12 f0
(  32) show
204.9 450.9 moveto
12 f0
(  ) show
3.5 433.4 moveto
12 f0
(  66 + ) show
34.2 433.4 moveto
12 f2
(n) show
40.2 433.4 moveto
12 f0
( ) show
49.7 433.4 moveto
12 f0
(  B) show
155.8 433.4 moveto
12 f0
(  66) show
204.9 433.4 moveto
12 f0
(  ) show
3.5 415.9 moveto
12 f0
(  67 + ) show
34.2 415.9 moveto
12 f2
(n) show
40.2 415.9 moveto
12 f0
( ) show
49.7 415.9 moveto
12 f0
(  I) show
155.8 415.9 moveto
12 f0
(  73) show
204.9 415.9 moveto
12 f0
(  ) show
3.5 398.4 moveto
12 f0
(  68 + ) show
34.2 398.4 moveto
12 f2
(n) show
40.2 398.4 moveto
12 f0
( ) show
49.7 398.4 moveto
12 f0
(  N) show
155.8 398.4 moveto
12 f0
(  78) show
204.9 398.4 moveto
12 f0
(  ) show
3.5 380.9 moveto
12 f0
(  69 + ) show
34.2 380.9 moveto
12 f2
(n) show
40.2 380.9 moveto
12 f0
( ) show
49.7 380.9 moveto
12 f0
(  A) show
155.8 380.9 moveto
12 f0
(  65) show
204.9 380.9 moveto
12 f0
(  ) show
3.5 363.4 moveto
12 f0
(  70 + ) show
34.2 363.4 moveto
12 f2
(n) show
40.2 363.4 moveto
12 f0
( ) show
49.7 363.4 moveto
12 f0
(  R) show
155.8 363.4 moveto
12 f0
(  83) show
204.9 363.4 moveto
12 f0
(  ) show
3.5 345.9 moveto
12 f0
(  71 + ) show
34.2 345.9 moveto
12 f2
(n) show
40.2 345.9 moveto
12 f0
( ) show
49.7 345.9 moveto
12 f0
(  Y) show
155.8 345.9 moveto
12 f0
(  89) show
204.9 345.9 moveto
12 f0
(  ) show
3.5 328.4 moveto
12 f0
(  72 + ) show
34.2 328.4 moveto
12 f2
(n) show
40.2 328.4 moveto
12 f0
( ) show
49.7 328.4 moveto
12 f0
(  ) show
155.8 328.4 moveto
12 f0
(  32) show
204.9 328.4 moveto
12 f0
(  ) show
3.5 310.9 moveto
12 f0
(  73 + ) show
34.2 310.9 moveto
12 f2
(n) show
40.2 310.9 moveto
12 f0
( ) show
49.7 310.9 moveto
12 f0
(  S) show
155.8 310.9 moveto
12 f0
(  83) show
204.9 310.9 moveto
12 f0
(  ) show
3.5 293.4 moveto
12 f0
(  74 + ) show
34.2 293.4 moveto
12 f2
(n) show
40.2 293.4 moveto
12 f0
( ) show
49.7 293.4 moveto
12 f0
(  E) show
155.8 293.4 moveto
12 f0
(  69) show
204.9 293.4 moveto
12 f0
(  ) show
3.5 275.9 moveto
12 f0
(  75 + ) show
34.2 275.9 moveto
12 f2
(n) show
40.2 275.9 moveto
12 f0
( ) show
49.7 275.9 moveto
12 f0
(  C) show
155.8 275.9 moveto
12 f0
(  67) show
204.9 275.9 moveto
12 f0
(  ) show
3.5 258.4 moveto
12 f0
(  76 + ) show
34.2 258.4 moveto
12 f2
(n) show
40.2 258.4 moveto
12 f0
( ) show
49.7 258.4 moveto
12 f0
(  T) show
155.8 258.4 moveto
12 f0
(  84) show
204.9 258.4 moveto
12 f0
(  ) show
3.5 240.9 moveto
12 f0
(  77 + ) show
34.2 240.9 moveto
12 f2
(n) show
40.2 240.9 moveto
12 f0
( ) show
49.7 240.9 moveto
12 f0
(  I) show
155.8 240.9 moveto
12 f0
(  73) show
204.9 240.9 moveto
12 f0
(  ) show
3.5 223.4 moveto
12 f0
(  78 + ) show
34.2 223.4 moveto
12 f2
(n) show
40.2 223.4 moveto
12 f0
( ) show
49.7 223.4 moveto
12 f0
(  O) show
155.8 223.4 moveto
12 f0
(  79) show
204.9 223.4 moveto
12 f0
(  ) show
3.5 205.9 moveto
12 f0
(  79 + ) show
34.2 205.9 moveto
12 f2
(n) show
40.2 205.9 moveto
12 f0
( ) show
49.7 205.9 moveto
12 f0
(  N) show
155.8 205.9 moveto
12 f0
(  78) show
204.9 205.9 moveto
12 f0
(  ) show
3.5 188.4 moveto
12 f0
(  80 + ) show
34.2 188.4 moveto
12 f2
(n) show
40.2 188.4 moveto
12 f0
( ) show
49.7 188.4 moveto
12 f0
(  carriage-return) show
155.8 188.4 moveto
12 f0
(  13) show
204.9 188.4 moveto
12 f0
(  ) show
3.5 170.9 moveto
12 f0
(  81 + ) show
34.2 170.9 moveto
12 f2
(n) show
40.2 170.9 moveto
12 f0
( ) show
49.7 170.9 moveto
12 f0
(  line-feed) show
155.8 170.9 moveto
12 f0
(  10) show
204.9 170.9 moveto
12 f0
(  ) show
3.5 153.4 moveto
12 f0
(  82 + ) show
34.2 153.4 moveto
12 f2
(n) show
40.2 153.4 moveto
12 f0
( ) show
49.7 153.4 moveto
12 f0
(  ;) show
155.8 153.4 moveto
12 f0
(  59) show
204.9 153.4 moveto
12 f0
(  Final ; delimiter) show
0 122.8 moveto
12 f1
(3.3 Compression schemes) show
0 96.2 moveto
12 f0
(Two schemes for lossless compression of integer arrays \(such as images\) have been implemented in this) show
0 82.9 moveto
12 f0
(version of CBFlib: ) show
pagelevel restore
showpage
%%Page: 53 53
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 704.3 moveto
12 f0
(1. An entropy-encoding scheme using canonical coding) show
0 691 moveto
12 f0
(2. A CCP4-style packing scheme. ) show
0 664.4 moveto
12 f0
(Both encode the difference \(or error\) between the current element in the array and the prior element.) show
0 651.1 moveto
12 f0
(Parameters required for more sophisticated predictors have been included in the compression functions) show
0 637.8 moveto
12 f0
(and will be used in a future version of the library. ) show
0 610.7 moveto
12 f1
(3.3.1 Canonical-code compression) show
0 584.1 moveto
12 f0
(The canonical-code compression scheme encodes errors in two ways: directly or indirectly. Errors are) show
0 570.8 moveto
12 f0
(coded directly using a symbol corresponding to the error value. Errors are coded indirectly using a) show
0 557.5 moveto
12 f0
(symbol for the number of bits in the \(signed\) error, followed by the error iteslf. ) show
0 530.9 moveto
12 f0
(At the start of the compression, CBFlib constructs a table containing a set of symbols, one for each of) show
0 515 moveto
12 f0
(the 2^) show
29.2 519.4 moveto
10 f0
(n) show
34.2 515 moveto
12 f0
( direct codes from -2^) show
139.8 519.4 moveto
10 f0
(\(n-1\)) show
159.7 515 moveto
12 f0
( .. 2^) show
183.3 519.4 moveto
10 f0
(\(n-1\)) show
203.2 515 moveto
12 f0
(-1, one for a stop code, and one for each of the ) show
429.7 515 moveto
12 f2
(maxbits) show
467 515 moveto
12 f0
( -) show
473.9 515 moveto
12 f2
(n) show
0 501.7 moveto
12 f0
(indirect codes, where ) show
105.3 501.7 moveto
12 f2
(n) show
111.3 501.7 moveto
12 f0
( is chosen at compress time and ) show
266.2 501.7 moveto
12 f2
(maxbits) show
303.5 501.7 moveto
12 f0
( is the maximum number of bits in an) show
0 488.4 moveto
12 f0
(error. CBFlib then assigns to each symbol a bit-code, using a shorter bit code for the more common) show
0 475.1 moveto
12 f0
(symbols and a longer bit code for the less common symbols. The bit-code lengths are calculated using a) show
0 461.8 moveto
12 f0
(Huffman-type algorithm, and the actual bit-codes are constructed using the canonical-code algorithm) show
0 448.5 moveto
12 f0
(described by Moffat, ) show
103.3 448.5 moveto
12 f2
(et al) show
124.3 448.5 moveto
12 f0
(. \() show
134.2 448.5 moveto
12 f2
(International Journal of High Speed Electronics and Systems) show
428.5 448.5 moveto
12 f0
(, Vol 8, No 1) show
0 435.2 moveto
12 f0
(\(1997\) 179-231\). ) show
0 408.6 moveto
12 f0
(The structure of the compressed data is: ) show
48.6 378 moveto
12 f1
(Byte) show
316 378 moveto
12 f1
(Value ) show
48.6 360.5 moveto
12 f0
(  1 .. 8) show
211.1 360.5 moveto
12 f0
(  Number of elements \(64-bit little-endian number\)) show
48.6 343 moveto
12 f0
(  9 .. 16) show
211.1 343 moveto
12 f0
(  Minimum element) show
48.6 325.5 moveto
12 f0
(  17 .. 24) show
211.1 325.5 moveto
12 f0
(  Maximum element) show
48.6 308 moveto
12 f0
(  25 .. 32) show
211.1 308 moveto
12 f0
(  \(reserved for future use\)) show
48.6 290.5 moveto
12 f0
(  33) show
211.1 290.5 moveto
12 f0
(  Number of bits directly coded, ) show
367 290.5 moveto
12 f2
(n) show
373 290.5 moveto
12 f0
( ) show
48.6 273 moveto
12 f0
(  34) show
211.1 273 moveto
12 f0
(  Maximum number of bits encoded, ) show
389 273 moveto
12 f2
(maxbits) show
426.3 273 moveto
12 f0
( ) show
48.6 252.9 moveto
12 f0
(  35 .. 35+2^) show
108.9 257.3 moveto
10 f0
(n) show
113.9 252.9 moveto
12 f0
(-1) show
211.1 254.2 moveto
12 f0
(  Number of bits in each direct code) show
48.6 232.8 moveto
12 f0
(  35+2^) show
84.9 237.2 moveto
10 f0
(n) show
211.1 234.1 moveto
12 f0
(  Number of bits in the stop code) show
48.6 212.7 moveto
12 f0
(  35+2^) show
84.9 217.1 moveto
10 f0
(n) show
89.9 212.7 moveto
12 f0
(+1 .. 35+2^) show
145 217.1 moveto
10 f0
(n) show
150 212.7 moveto
12 f0
(+) show
156.7 212.7 moveto
12 f2
(maxbits) show
194 212.7 moveto
12 f0
(-) show
197.9 212.7 moveto
12 f2
(n) show
203.9 212.7 moveto
12 f0
( ) show
211.1 214 moveto
12 f0
(  Number of bits in each indirect code) show
48.6 192.6 moveto
12 f0
(  35+2^) show
84.9 197 moveto
10 f0
(n) show
89.9 192.6 moveto
12 f0
(+) show
96.6 192.6 moveto
12 f2
(maxbits) show
133.9 192.6 moveto
12 f0
(-) show
137.8 192.6 moveto
12 f2
(n) show
143.8 192.6 moveto
12 f0
(+1 .. ) show
211.1 193.9 moveto
12 f0
(  Coded data) show
0 162 moveto
12 f1
(3.3.2 CCP4-style compression) show
0 135.4 moveto
12 f0
(The CCP4-style compression writes the errors in blocks . Each block begins with a 6-bit code. The) show
0 119.5 moveto
12 f0
(number of errors in the block is 2^) show
165.9 123.9 moveto
10 f0
(n) show
170.9 119.5 moveto
12 f0
(, where ) show
209.2 119.5 moveto
12 f2
(n) show
215.2 119.5 moveto
12 f0
( is the value in bits 0 .. 2. Bits 3 .. 5 encode the number of) show
0 106.2 moveto
12 f0
(bits in each error:) show
189 88.9 moveto
12 f1
(Value in) show
188.4 75.1 moveto
12 f1
(bits 3 .. 5) show
238.2 88.9 moveto
12 f1
(Number of bits) show
242.8 75.1 moveto
12 f1
(in each error) show
pagelevel restore
showpage
%%Page: 54 54
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
207.5 705.6 moveto
12 f0
(0) show
273.1 705.6 moveto
12 f0
(0) show
207.5 688.1 moveto
12 f0
(1) show
273.1 688.1 moveto
12 f0
(4) show
207.5 670.6 moveto
12 f0
(2) show
273.1 670.6 moveto
12 f0
(5) show
207.5 653.1 moveto
12 f0
(3) show
273.1 653.1 moveto
12 f0
(6) show
207.5 635.6 moveto
12 f0
(4) show
273.1 635.6 moveto
12 f0
(7) show
207.5 618.1 moveto
12 f0
(5) show
273.1 618.1 moveto
12 f0
(8) show
207.5 600.6 moveto
12 f0
(6) show
270.1 600.6 moveto
12 f0
(16) show
207.5 583.1 moveto
12 f0
(7) show
270.1 583.1 moveto
12 f0
(65) show
0 553 moveto
12 f0
(The structure of the compressed data is:) show
115.4 522.4 moveto
12 f1
(Byte) show
259.4 522.4 moveto
12 f1
(Value) show
106.8 504.9 moveto
12 f0
(  1 .. 8) show
153 504.9 moveto
12 f0
(  Number of elements \(64-bit little-endian number\)) show
106.8 487.4 moveto
12 f0
(  9 .. 16) show
153 487.4 moveto
12 f0
(  Minumum element \(currently unused\)) show
106.8 469.9 moveto
12 f0
(  17 .. 24) show
153 469.9 moveto
12 f0
(  Maximum element \(currently unused\)) show
106.8 452.4 moveto
12 f0
(  25 .. 32) show
153 452.4 moveto
12 f0
(  \(reserved for future use\)) show
106.8 434.9 moveto
12 f0
(  33 ..) show
153 434.9 moveto
12 f0
(  Coded data) show
0 404.3 moveto
12 f1
(4. Installation) show
0 377.7 moveto
12 f0
(CBFlib should be built on a disk with at least 40 megabytes of free space. First create the top-level) show
0 364.4 moveto
12 f0
(directory \(called, say, CBFlib_0.4\). ) show
173.3 364.4 moveto
12 f0
(CBFlib_0.4.tar.Z) show
255.6 364.4 moveto
12 f0
( is a compressed tar of the code as it now stands.) show
0 351.1 moveto
12 f0
(Uncompress this file, place it in the top level directory, and unpack it with tar: ) show
0 327.2 moveto
10 f4
(     tar xvf CBFLIB.tar) show
0 303.5 moveto
12 f0
(To run the test programs, you will also need to put the MAR345 image ) show
343.6 303.5 moveto
12 f0
(example.mar2300) show
429.9 303.5 moveto
12 f0
( in the) show
0 290.2 moveto
12 f0
(top-level directory. \(The image can also be found at) show
0 276.9 moveto
12 f0
(http://biosg1.slac.stanford.edu/biosg1-users/ellis/Public/) show
269.7 276.9 moveto
12 f0
(\). After unpacking the archive, the top-level) show
0 263.6 moveto
12 f0
(directory should contain a makefile: ) show
178.4 233.5 moveto
12 f0
(  Makefile) show
231.9 233.5 moveto
12 f0
(  Makefile for unix ) show
0 203.4 moveto
12 f0
(and the subdirectories: ) show
95.2 173.3 moveto
12 f0
(  src/) show
170.8 173.3 moveto
12 f0
(  CBFLIB source files ) show
95.2 155.8 moveto
12 f0
(  include/) show
170.8 155.8 moveto
12 f0
(  CBFLIB header files ) show
95.2 138.3 moveto
12 f0
(  examples/) show
170.8 138.3 moveto
12 f0
(  Example program source files ) show
95.2 120.8 moveto
12 f0
(  doc/) show
170.8 120.8 moveto
12 f0
(  Documentation ) show
95.2 103.3 moveto
12 f0
(  lib/) show
170.8 103.3 moveto
12 f0
(  Compiled CBFLIB library ) show
95.2 85.8 moveto
12 f0
(  bin/) show
170.8 85.8 moveto
12 f0
(  Executable example programs ) show
pagelevel restore
showpage
%%Page: 55 55
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
95.2 709.2 moveto
12 f0
(  html_images/) show
170.8 709.2 moveto
12 f0
(  JPEG images used in rendering the HTML files ) show
0 679.1 moveto
12 f0
(For instructions on compiling and testing the library, go to the top-level directory and type: ) show
0 655.2 moveto
10 f4
(     make) show
20.8 631.5 moveto
12 f0
(The CBFLIB source and header files are in the "src" and "include" subdirectories. The files are: ) show
11.4 614.2 moveto
12 f1
(src/) show
119.9 614.2 moveto
12 f1
(include/ ) show
232 614.2 moveto
12 f1
(Description ) show
11.4 596.7 moveto
12 f0
(  cbf.c) show
119.9 596.7 moveto
12 f0
(  cbf.h ) show
232 596.7 moveto
12 f0
(  CBFLIB API functions ) show
11.4 579.2 moveto
12 f0
(  cbf_alloc.c) show
119.9 579.2 moveto
12 f0
(  cbf_alloc.h ) show
232 579.2 moveto
12 f0
(  Memory allocation functions ) show
11.4 561.7 moveto
12 f0
(  cbf_ascii.c) show
119.9 561.7 moveto
12 f0
(  cbf_ascii.h ) show
232 561.7 moveto
12 f0
(  Function for writing ASCII values ) show
11.4 544.2 moveto
12 f0
(  cbf_binary.c) show
119.9 544.2 moveto
12 f0
(  cbf_binary.h ) show
232 544.2 moveto
12 f0
(  Functions for binary values ) show
11.4 526.7 moveto
12 f0
(  cbf_byte_offset.c) show
119.9 526.7 moveto
12 f0
(  cbf_byte_offset.h ) show
232 526.7 moveto
12 f0
(  Byte-offset compression \(not implemented\) ) show
11.4 509.2 moveto
12 f0
(  cbf_canonical.c) show
119.9 509.2 moveto
12 f0
(  cbf_canonical.h ) show
232 509.2 moveto
12 f0
(  Canonical-code compression ) show
11.4 491.7 moveto
12 f0
(  cbf_codes.c) show
119.9 491.7 moveto
12 f0
(  cbf_codes.h ) show
232 491.7 moveto
12 f0
(  Encoding and message digest functions ) show
11.4 474.2 moveto
12 f0
(  cbf_compress.c) show
119.9 474.2 moveto
12 f0
(  cbf_compress.h ) show
232 474.2 moveto
12 f0
(  General compression routines ) show
11.4 456.7 moveto
12 f0
(  cbf_context.c) show
119.9 456.7 moveto
12 f0
(  cbf_context.h ) show
232 456.7 moveto
12 f0
(  Control of temporary files ) show
11.4 439.2 moveto
12 f0
(  cbf_file.c) show
119.9 439.2 moveto
12 f0
(  cbf_file.h ) show
232 439.2 moveto
12 f0
(  File in/out functions ) show
11.4 421.7 moveto
12 f0
(  cbf_lex.c) show
119.9 421.7 moveto
12 f0
(  cbf_lex.h ) show
232 421.7 moveto
12 f0
(  Lexical analyser ) show
11.4 404.2 moveto
12 f0
(  cbf_packed.c) show
119.9 404.2 moveto
12 f0
(  cbf_packed.h ) show
232 404.2 moveto
12 f0
(  CCP4-style packing compression ) show
11.4 386.7 moveto
12 f0
(  cbf_predictor.c) show
119.9 386.7 moveto
12 f0
(  cbf_predictor.h ) show
232 386.7 moveto
12 f0
(  Predictor-Huffman compression \(not implemented\) ) show
11.4 369.2 moveto
12 f0
(  cbf_read_binary.c) show
119.9 369.2 moveto
12 f0
(  cbf_read_binary.h ) show
232 369.2 moveto
12 f0
(  Read binary headers ) show
11.4 351.7 moveto
12 f0
(  cbf_read_mime.c) show
119.9 351.7 moveto
12 f0
(  cbf_read_mime.h ) show
232 351.7 moveto
12 f0
(  Read MIME-encoded binary sections ) show
11.4 334.2 moveto
12 f0
(  cbf_string.c) show
119.9 334.2 moveto
12 f0
(  cbf_string.h ) show
232 334.2 moveto
12 f0
(  Case-insensitive string comparisons ) show
11.4 316.7 moveto
12 f0
(  cbf_stx.c) show
119.9 316.7 moveto
12 f0
(  cbf_stx.h ) show
232 316.7 moveto
12 f0
(  Parser ) show
11.4 299.2 moveto
12 f0
(  cbf_tree.c) show
119.9 299.2 moveto
12 f0
(  cbf_tree.h ) show
232 299.2 moveto
12 f0
(  CBF tree-structure functions ) show
11.4 281.7 moveto
12 f0
(  cbf_uncompressed.c) show
119.9 281.7 moveto
12 f0
(  cbf_uncompressed.h ) show
232 281.7 moveto
12 f0
(  Uncompressed binary sections ) show
11.4 264.2 moveto
12 f0
(  cbf_write.c) show
119.9 264.2 moveto
12 f0
(  cbf_write.h ) show
232 264.2 moveto
12 f0
(  Functions for writing ) show
11.4 246.7 moveto
12 f0
(  cbf_write_binary.c) show
119.9 246.7 moveto
12 f0
(  cbf_write_binary.h ) show
232 246.7 moveto
12 f0
(  Write binary sections ) show
11.4 229.2 moveto
12 f0
(  cbf.stx) show
119.9 229.2 moveto
12 f0
(    ) show
232 229.2 moveto
12 f0
(  bison grammar to define cbf_stx.c \(see WARNING\) ) show
11.4 211.7 moveto
12 f0
(  md5c.c) show
119.9 211.7 moveto
12 f0
(  md5.h ) show
232 211.7 moveto
12 f0
(  RSA message digest software from mpack ) show
11.4 194.2 moveto
12 f0
(   ) show
119.9 194.2 moveto
12 f0
(  global.h ) show
232 194.2 moveto
12 f0
(    ) show
221.7 163.6 moveto
12 f1
(WARNING) show
0 137 moveto
12 f0
(Do not rebuild the parser, cbf_stx.c, from the bison grammar, cbf.stx, unless absolutely necessary. There) show
0 123.7 moveto
12 f0
(is a problem with the file bison.simple in the standard bison release. If you must rebuild cbf_stx.c using) show
0 110.4 moveto
12 f0
(bison, you will need cbf_PARSER.simple as a replacement for bison.simple. See the) show
0 97.1 moveto
12 f0
(cbf_PARSER.simple instructions) show
160.6 97.1 moveto
12 f0
(. ) show
pagelevel restore
showpage
%%Page: 56 56
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(In the "examples" subdirectory, there are 2 additional files used by the example program \(section 5\) for) show
0 695.9 moveto
12 f0
(reading MAR300, MAR345 or ADSC CCD images: ) show
159.3 665.8 moveto
12 f0
(  img.c) show
196.5 665.8 moveto
12 f0
(  img.h) show
234.3 665.8 moveto
12 f0
(  Simple image library ) show
0 635.7 moveto
12 f0
(and the example programs themselves: ) show
120.8 605.6 moveto
12 f0
(  makecbf.c) show
180.6 605.6 moveto
12 f0
(  Make a CBF file from an image ) show
120.8 588.1 moveto
12 f0
(  img2cif.c) show
180.6 588.1 moveto
12 f0
(  Make an imgCIF or CBF from an image ) show
120.8 570.6 moveto
12 f0
(  cif2cbf.c) show
180.6 570.6 moveto
12 f0
(  Copy a CIF/CBF to a CIF/CBF ) show
0 540.5 moveto
12 f0
(The documentation files are in the "doc" subdirectory: ) show
62.6 510.4 moveto
12 f0
(  CBFlib.html) show
189.8 510.4 moveto
12 f0
(  This document \(HTML\) ) show
62.6 492.9 moveto
12 f0
(  CBFlib.txt) show
189.8 492.9 moveto
12 f0
(  This document \(ASCII\) ) show
62.6 475.4 moveto
12 f0
(  CBFlib_NOTICES.html) show
189.8 475.4 moveto
12 f0
(  Important NOTICES -- PLEASE READ ) show
62.6 457.9 moveto
12 f0
(  CBFlib_NOTICES.txt) show
189.8 457.9 moveto
12 f0
(  Important NOTICES -- PLEASE READ ) show
62.6 440.4 moveto
12 f0
(  CBFlib.ps) show
189.8 440.4 moveto
12 f0
(  CBFLIB manual \(PostScript\) ) show
62.6 422.9 moveto
12 f0
(  CBFlib.pdf) show
189.8 422.9 moveto
12 f0
(  CBFLIB manual \(PDF\) ) show
62.6 405.4 moveto
12 f0
(  cbf_definition_rev.txt) show
189.8 405.4 moveto
12 f0
(  Draft CBF/ImgCIF definition \(ASCII\) ) show
62.6 387.9 moveto
12 f0
(  cbf_definition_rev.html) show
189.8 387.9 moveto
12 f0
(  Draft CBF/ImgCIF definition \(HTML\) ) show
62.6 370.4 moveto
12 f0
(  cbfext98.html) show
189.8 370.4 moveto
12 f0
(  Draft CBF/ImgCIF extensions dictionary \(HTML\) ) show
62.6 352.9 moveto
12 f0
(  cbfext98.dic) show
189.8 352.9 moveto
12 f0
(  Draft CBF/ImgCIF extensions dictionary \(ASCII\) ) show
62.6 335.4 moveto
12 f0
(  MANIFEST) show
189.8 335.4 moveto
12 f0
(  List of files in this kit ) show
0 304.8 moveto
12 f1
(5. Example programs) show
0 278.2 moveto
12 f0
(The example programs makecbf.c and img2cif.c read an image file from a MAR300, MAR345 or ADSC) show
0 264.9 moveto
12 f0
(CCD detector and then uses CBFlib to convert it to CBF format \(makecbf\) or either imgCIF or CBF) show
0 251.6 moveto
12 f0
(format \(img2cif\). makecbf writes the CBF-format image to disk, reads it in again, and then compares it) show
0 238.3 moveto
12 f0
(to the original. img2cif just writes the desired file. makecbf works only from stated files on disk, so that) show
0 225 moveto
12 f0
(random I/O can be used. img2cif includes code to process files from stdin and to stdout. ) show
0 198.4 moveto
12 f0
(makecbf.c is a good example of how many of the CBFlib functions can be used. To compile makecbf on) show
0 185.1 moveto
12 f0
(an alpha workstation running Digital unix or a Silicon Graphics workstation running irix \(and on most) show
0 171.8 moveto
12 f0
(other unix platforms as well\), go to the src subdirectory of the main CBFlib directory and use the) show
0 158.5 moveto
12 f0
(Makefile: ) show
0 134.6 moveto
10 f4
(     make all) show
0 110.9 moveto
12 f0
(An example MAR345 image can be found at: ) show
0 87 moveto
10 f4
(     ) show
30 87 moveto
10 f4
(http://biosg1.slac.stanford.edu/biosg1-users/ellis/Public/) show
pagelevel restore
showpage
%%Page: 57 57
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(To run makecbf with the example image, type: ) show
0 685.3 moveto
10 f4
(     ./bin/makecbf example.mar2300 test.cbf) show
0 661.6 moveto
12 f0
(The program img2cif has the following command line interface: ) show
0 637.7 moveto
10 f4
(                                                                 ) show
0 627.2 moveto
10 f4
( img2cif     [-i  input_image]                               \\) show
0 616.7 moveto
10 f4
(             [-o  output_cif]                                \\) show
0 606.2 moveto
10 f4
(             [-c  {p[acked]|c[annonical]|[n[one]}]           \\) show
0 595.7 moveto
10 f4
(             [-m  {h[eaders]|n[oheaders]}]                   \\) show
0 585.2 moveto
10 f4
(             [-d  {d[igest]|n[odigest]}]                     \\     ) show
0 574.7 moveto
10 f4
(             [-e  {b[ase64]|q[uoted-printable]|              \\          ) show
0 564.2 moveto
10 f4
(                   d[ecimal]|h[exadecimal]|o[ctal]|n[one]}]  \\      ) show
0 553.7 moveto
10 f4
(             [-w  {2|3|4|6|8} ]                              \\) show
0 543.2 moveto
10 f4
(             [-b  {f[orward]|b[ackwards]}]                   \\ ) show
0 532.7 moveto
10 f4
(             [input_image] [output_cif]  ) show
0 522.2 moveto
10 f4
(                                                                 ) show
0 511.7 moveto
10 f4
( the options are:                                                ) show
0 501.2 moveto
10 f4
(                                                                 ) show
0 490.7 moveto
10 f4
( -i  input_image \(default: stdin\)                                 ) show
0 480.2 moveto
10 f4
(     the input_image file in MAR300, MAR345 or ADSC CCD detector   ) show
0 469.7 moveto
10 f4
(     format is given.  If no input_image file is specified or is   ) show
0 459.2 moveto
10 f4
(     given as "-", an image is copied from stdin to a temporary file.) show
0 448.7 moveto
10 f4
(                                                                 ) show
0 438.2 moveto
10 f4
( -o  output_cif \(default: stdout\)                                 ) show
0 427.7 moveto
10 f4
(     the output cif \(if base64 or quoted-printable encoding is used\) ) show
0 417.2 moveto
10 f4
(     or cbf \(if no encoding is used\).  if no output_cif is specified ) show
0 406.7 moveto
10 f4
(     or is given as "-", the output is written to stdout           ) show
0 396.2 moveto
10 f4
(                                                                 ) show
0 385.7 moveto
10 f4
( -c  compression_scheme \(packed, canonical or none, default packed\)) show
0 375.2 moveto
10 f4
(                                                                 ) show
0 364.7 moveto
10 f4
( -m  [no]headers \(default headers for cifs, noheaders for cbfs\)) show
0 354.2 moveto
10 f4
(     selects MIME \(N. Freed, N. Borenstein, RFC 2045, November 1996\)) show
0 343.7 moveto
10 f4
(     headers within binary data value text fields.) show
0 333.2 moveto
10 f4
(                                                                 ) show
0 322.7 moveto
10 f4
( -d  [no]digest  \(default md5 digest [R. Rivest, RFC 1321, April) show
0 312.2 moveto
10 f4
(     1992 using"RSA Data Security, Inc. MD5 Message-Digest) show
0 301.7 moveto
10 f4
(     Algorithm"] when MIME headers are selected\)) show
0 291.2 moveto
10 f4
(                                                                 ) show
0 280.7 moveto
10 f4
( -e  encoding \(base64, quoted-printable, decimal, hexadecimal,    ) show
0 270.2 moveto
10 f4
(     octal or none, default: base64\) specifies one of the standard ) show
0 259.7 moveto
10 f4
(     MIME encodings \(base64 or quoted-printable\) or a non-standard ) show
0 249.2 moveto
10 f4
(     decimal, hexamdecimal or octal encoding for an ascii cif      ) show
0 238.7 moveto
10 f4
(     or "none" for a binary cbf                                    ) show
0 228.2 moveto
10 f4
(                                                                 ) show
0 217.7 moveto
10 f4
( -w  elsize \(2, 3, 4, 6 or 8, default: 4\) specifies the number of ) show
0 207.2 moveto
10 f4
(     bytes per word for decimal, hexadecimal or octal output,      ) show
0 196.7 moveto
10 f4
(     marked by a 'D', 'H' or 'O' as the first character of each    ) show
0 186.2 moveto
10 f4
(     line of output, and in '#' comment lines.                     ) show
0 175.7 moveto
10 f4
(                                                                 ) show
0 165.2 moveto
10 f4
( -b  direction \(forward or backwards, default: backwards\)         ) show
0 154.7 moveto
10 f4
(     specifies the direction of mapping of bytes into words        ) show
0 144.2 moveto
10 f4
(     for decimal, hexadecimal or octal output, marked by '>' for   ) show
0 133.7 moveto
10 f4
(     forward or '<' for backwards as the second character of each  ) show
0 123.2 moveto
10 f4
(     line of output, and in '#' comment lines.                     ) show
0 112.7 moveto
10 f4
(                                                                 ) show
0 89 moveto
12 f0
(The test program cif2cbf uses the same command line options as img2cif, but accepts either a CIF or a) show
0 75.7 moveto
12 f0
(CBF as input instead of an image file. ) show
pagelevel restore
showpage
%%Page: 58 58
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 714.6 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 701.3 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 683.8 moveto
12 f0
(Updated 14 November 1998. ) show
142.3 683.8 moveto
12 f0
(yaya@bernstein-plus-sons.com) show
292.9 683.8 moveto
12 f0
( ) show
pagelevel restore
showpage
%%EOF
